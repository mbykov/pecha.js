{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"lodash\"","webpack:///external \"electron\"","webpack:///./src/lib/tibetan_data.js","webpack:///./src/dbs/segmenter.js","webpack:///./src/dbs/pouch.js","webpack:///external \"path\"","webpack:////home/michael/sband/dist/index.js","webpack:///external \"electron-settings\"","webpack:///external \"debug\"","webpack:///external \"electron-is-dev\"","webpack:///external \"pouchdb\"","webpack:////home/michael/sband/dist/message.js","webpack:///external \"fs-extra\"","webpack:///external \"glob-fs\"","webpack:///external \"pouchdb-load\"","webpack:///external \"highland\"","webpack:///external \"mississippi\"","webpack:///external \"csv2\"","webpack:///external \"node-couchdb\"","webpack:///external \"url\"","webpack:///./src/menu/lib_menu_template.js","webpack:///./src/menu/about_menu_template.js","webpack:///./src/menu/dict_menu_template.js","webpack:///./src/menu/help_menu_template.js","webpack:///./src/background.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__webpack_exports__","tibsyms","tibsuff","tsek","console","log","remoteDicts","replicate","getCfg","queryDBs","localDict","importCSV","retsek","RegExp","path","fse","glob","gitignore","settings","PouchDB","plugin","miss","csv2","code","dbs","rekuku","NodeCouchDb","couch","host","protocol","port","auth","user","pass","listDatabases","catch","err","remotepath","localpath","localDB","info","then","load","upath","pouchpath","resolve","fns","readdirSync","oldcfg","cfg","forEach","dn","idx","old","_","find","dict","push","newdict","active","sortBy","set","dbnames","compact","map","dpath","pouch","dname","weight","setDBs","query","str","replace","keys","pdchs","segs","split","depth","length","rec","pdch","head","tail","flakes","slice","flake","reverse","scrape","flatten","join","clone","pop","cleans","clean","seg","segmenter","keyres","mainKeys","uniq","added","syl","resyl","poss","main","totalKeys","compound","filter","concat","Promise","all","db","allDocs","include_docs","res","rows","Error","rdocs","row","doc","docs","rdoc","chain","chains","bests","full","fulls","any","segdocs","reh","includes","startWith","selectBests","makeChains","ambitmp","first","ambi","adocs","commonParts","compactDocs","max","sum","segment","longests","min","dicts","tmpdicts","qs","datapath","__dirname","files","cwd","wfs","tibs","tibkey","file","fpath","readFileSync","trim","cleanStr","sband","gpar","span","lang","text","wf","selectTib","queries","recQuery","rs","from","obj","ws","to","write","flush","streamDB","through","chunk","enc","cb","pipe","error","data","csvname","createReadStream","on","default","coderanges","zho","tib","grc","re","test","wopunct","rep","spans","spns","rclause","spn","punct","clauses","clause","libMenuTemplate","label","submenu","accelerator","click","BrowserWindow","getFocusedWindow","webContents","send","app","quit","aboutMenuTemplate","dictMenuTemplate","helpMenuTemplate","toggleDevTools","env","userDataPath","getPath","setPath","menus","Menu","setApplicationMenu","buildFromTemplate","winBounds","y","win","webPreferences","nodeIntegration","setBounds","loadURL","url","format","pathname","slashes","openDevTools","pckg","version","setTitle","getBounds","globalShortcut","register","reload","apath","getAppPath","ipcMain","event","dbname","sender","rdbs"],"mappings":"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","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","module.exports = require(\"lodash\");","module.exports = require(\"electron\");","//\n\nexport const tibsyms = {\n  tsek: '་'\n  // connective: 'འི',\n  // subordinative: 'ར', // ladon\n  // narrative: 'འོ',\n  // interrog: 'འམ',\n  // coupling: 'འི',\n  // ergative: 'ས',\n  // concessive: 'འང'\n}\n\nexport const tibsuff = ['འི', 'ར', 'འོ', 'འམ', 'འི', 'ས', 'འང']\n","import _ from 'lodash'\nimport { tibsyms, tibsuff } from \"../lib/tibetan_data\";\n\nconst log = console.log\nconst tsek = tibsyms.tsek\n\nexport function totalKeys(pdchs) {\n  let mainKeys = _.uniq(_.flatten(pdchs))\n  let added = []\n  mainKeys.forEach(seg=>{\n    tibsuff.forEach(syl=>{\n      let resyl = new RegExp(syl+'$')\n      let poss = seg.replace(resyl, '')\n      if (seg != poss) added.push(poss)\n    })\n  })\n  return {main: mainKeys, added: added}\n  // let keys = segs.concat(added)\n  // return _.uniq(keys)\n  // return _.uniq(_.flatten(pdchs))\n}\n\nexport function segmenter(str) {\n  let segs = str.split(tsek)\n  // let depth = (segs.length < 10) ? 10 : 2\n  // let depth = (segs.length > 10) ? 7 : 100\n  let depth = 4\n  // log('SEGS', segs)\n  let old = str\n  let size = segs.length\n  let pdchs = [[segs]]\n  function rec(segs, pdch) {\n    // log('PDCH', pdch)\n    let flakes = scrape(segs)\n    flakes.forEach(flake => {\n      pdch.push(flake.head)\n      pdch.push(flake.tail)\n      // pdch = pdch.concat(flake.head)\n      // pdch = pdch.concat(flake.tail)\n      if (_.flatten(pdch).join(tsek) == old) {\n        pdchs.push(_.clone(pdch))\n        pdch.pop()\n      }\n      if (pdch.length < depth) rec(flake.tail, pdch) // three parts for now !\n      // rec(flake.tail, pdch)\n      pdch.pop()\n    })\n  }\n  rec(segs, [])\n  let cleans = []\n  pdchs.forEach(pdch=> {\n    let clean = []\n    pdch.forEach(seg=>{\n      clean.push(seg.join(tsek))\n    })\n    cleans.push(clean)\n  })\n  return cleans\n}\n\nexport function scrape(segs) {\n  // log('SEGS', segs)\n  let head, tail\n  let flakes = []\n  for (let idx = 1; idx < segs.length + 1; idx++) {\n    head = segs.slice(0, idx)\n    tail = segs.slice(idx)\n    let flake = {head: head, tail: tail}\n    if (tail.length) flakes.push(flake)\n  }\n  return flakes.reverse()\n}\n\n// export function segmenter_(str) {\n//   let old = str\n//   let pdchs = [[str]]\n//   function rec(str, pdch) {\n//     // log('PDCH', pdch)\n//     let flakes = scrape(str)\n//     flakes.forEach(flake => {\n//       pdch.push(flake.head)\n//       pdch.push(flake.tail)\n//       if (pdch.join(tsek) == old) {\n//         pdchs.push(_.clone(pdch))\n//         pdch.pop()\n//       }\n//       if (pdch.length < 5) rec(flake.tail, pdch) // three parts for now !\n//       // rec(flake.tail, pdch)\n//       pdch.pop()\n//     })\n//   }\n//   rec(str, [])\n//   return pdchs\n// }\n\n// export function scrape_(str) {\n//   let segs = str.split(tsek)\n//   let head, tail\n//   let flakes = []\n//   for (let idx = 1; idx < segs.length + 1; idx++) {\n//     head = segs.slice(0, idx).join(tsek)\n//     tail = segs.slice(idx).join(tsek)\n//     let flake = {head: head, tail: tail}\n//     if (tail) flakes.push(flake)\n//   }\n//   return flakes.reverse()\n// }\n\n// export function totalKeys_(pdchs) {\n//   let segs = _.uniq(_.flatten(pdchs))\n//   let added = []\n//   segs.forEach(seg=>{\n//     tibsyls.forEach(syl=>{\n//       let resyl = new RegExp(syl+'$')\n//       let poss = seg.replace(resyl, '')\n//       if (seg != poss) added.push(poss)\n//     })\n//   })\n//   let keys = segs.concat(added)\n//   return _.uniq(keys)\n// }\n","//\n\nimport _ from 'lodash'\nimport sband from '../../../../sband'\nimport { segmenter, totalKeys } from \"./segmenter\";\nimport { tibsyms, tibsuff } from \"../lib/tibetan_data\";\nconst tsek = tibsyms.tsek\nlet retsek = new RegExp(tsek+'$')\n\nconst path = require('path')\nconst fse = require('fs-extra')\nlet glob = require('glob-fs')({ gitignore: true })\n\nconst isDev = require('electron-is-dev')\nconst settings = require('electron-settings')\nconst PouchDB = require('pouchdb')\nPouchDB.plugin(require('pouchdb-load'));\n\nconst log = console.log\nlet debug = require('debug')\n// let log = debug('app')\n// let d = debug('app')\nlet H = require('highland');\nlet miss = require('mississippi');\nlet csv2 = require('csv2');\n\n\nlet code = 'tib'\nlet dbs = []\nlet test = 'ཀྱི་བསླབ་པ'\nlet test2 = 'ཀྱི་བསླབ་པ་དང'\nlet rekuku = /༈/\n\nconst NodeCouchDb = require('node-couchdb');\nconst couch = new NodeCouchDb()\nconst diglossa = new NodeCouchDb({\n  host: 'couchdb.external.service',\n  protocol: 'https',\n  port: 6984\n})\nconst couchAuth = new NodeCouchDb({\n  auth: {\n    user: 'login',\n    pass: 'secret'\n  }\n})\n\nexport function remoteDicts() {\n  return couch.listDatabases()\n    .catch(function(err) {\n      log('REMOTE DICTS ERR', err)\n    })\n}\n\nexport function replicate(remotepath, localpath) {\n  log('REPLICATE LOCAL', localpath)\n  let localDB = new PouchDB(localpath);\n  // return localDB.load('http://localhost:3000/dumps/dump.txt')\n  return localDB.info()\n    .then(function(info) {\n      log('REPL-BEFORE-INFO', info)\n      return localDB.load(remotepath)\n      // return localDB.load('http://localhost:3000/dumps/dump.txt')\n    })\n}\n\nfunction setDBs(upath, cfg) {\n  dbs = []\n  let dbnames = _.compact(cfg.map(dict => { return (dict.active) ? dict.name : null }))\n  log('setDBNS', dbnames)\n  dbnames.forEach((dn, idx) => {\n    let dpath = path.resolve(upath, 'pouch', dn)\n    let pouch = new PouchDB(dpath)\n    pouch.dname = dn\n    pouch.weight = idx\n    dbs.push(pouch)\n  })\n  return dbnames\n}\n\nexport function getCfg() {\n  let upath = settings.get('upath')\n  let pouchpath = path.resolve(upath, 'pouch')\n  let fns = fse.readdirSync(pouchpath)\n  let oldcfg = settings.get('cfg') || []\n  let cfg = []\n  fns.forEach((dn, idx) => {\n    let old = _.find(oldcfg, dict=> {return dict.name == dn })\n    if (old) cfg.push(old)\n    else {\n      let newdict = {name: dn, active: true, idx: 100+idx}\n      cfg.push(newdict)\n    }\n  })\n  cfg = _.sortBy(cfg, 'idx')\n  cfg.forEach((dict, idx)=> { dict.idx = idx })\n  settings.set('cfg', cfg)\n  setDBs(upath, cfg)\n  return cfg\n}\n\n// adduser --system --home /opt/couchdb --no-create-home --shell /bin/bash -g couchdb couchdb\n// useradd --system -b /opt/couchdb --shell /bin/bash -g couchdb couchdb\n// sudo -i -u couchdb bin/couchdb\n\nexport function infoDB(localpath) {\n  let localDB = new PouchDB(localpath)\n  return localDB.info()\n}\n\nexport function cleanupDB(state) {\n  log('CLEAN UP')\n}\n\nexport function queryDBs (query) {\n  log('QUERY->', query.str)\n  let clean = query.str.replace(rekuku, '')\n\n  let pdchs = segmenter(query.str)\n  let keys\n  let keyres = totalKeys(pdchs)\n  if (query.compound) keys = _.filter(keyres.main, key=> { return key != query.str})\n  else keys =  _.uniq(keyres.main.concat(keyres.added))\n  // log('KEYS->', keys.length)\n\n  return Promise.all(dbs.map(function (db) {\n    return db.allDocs({\n      keys: keys,\n      include_docs: true\n    })\n      .then(function (res) {\n        if (!res || !res.rows) throw new Error('no dbn result')\n        let rdocs = _.compact(res.rows.map(row => { return row.doc }))\n        let docs = _.flatten(_.compact(rdocs.map(rdoc => { return rdoc.docs })))\n        docs.forEach(doc => { doc.dname = db.dname, doc.weight = db.weight })\n        // log('DOCS->', docs.length)\n        return docs\n      })\n      .catch(function (err) {\n        console.log('ERR GET DBs', err)\n      })\n  }))\n    .then(function (res) {\n      // log('======RES', res.length)\n      let docs =_.flatten(res)\n      // log('======DOCS', docs.length)\n      let chain = compactDocs(docs, pdchs)\n      // log('======CHAIN', chain)\n      query.chain = chain\n      return query\n      // return chain\n    })\n}\n\nfunction selectTib(datapath, files) {\n  let tibs = []\n  let tibkey = {}\n  files.forEach(file => {\n    let fpath = path.resolve(datapath, file)\n    let text = fse.readFileSync(fpath,'utf8').trim()\n    let rows = text.split('\\n')\n    rows = _.compact(rows)\n    rows.forEach((row, idx)=> {\n      let clean = cleanStr(row)\n      // if (idx > 0) return\n      let gpars = sband(clean, code)\n      gpars.forEach(gpar=> {\n        gpar.forEach(span=> {\n          if (span.lang != code) return\n          let wfs = span.text.split(' ')\n          wfs.forEach(wf=> {\n            wf = wf.replace(retsek, '')\n            if (tibkey[wf]) return\n            tibs.push(wf)\n            tibkey[wf] = true\n          })\n        })\n      })\n    })\n  })\n  return tibs\n}\n\nfunction cleanStr(row) {\n  let clean = row.trim()\n  clean = clean.trim().replace(/\\.$/, '')\n  return clean\n}\n\n// let query = {keys: keys, pdchs: pdchs, compound: compound, lastsek: lastsek}\nexport function compactDocs(docs, pdchs) {\n  let res = makeChains(pdchs, docs)\n  let chains = res.chains\n  // log('FULL, CHAINS', res.full, chains.length, chains)\n  let chain\n  if (chains.length > 1) chain = commonParts(chains)\n  else if (chains.length == 1) chain = chains[0]\n  return chain\n}\n\n\nfunction commonParts(chains) {\n  let first = chains[0]\n  let clean = []\n  let ambitmp\n  for (let idx = 0; idx < first.length; idx++) {\n    let segs = chains.map(segs=> { return segs[idx].seg })\n    if (_.uniq(segs).length == 1) {\n      clean.push(first[idx])\n      ambitmp = null\n    } else {\n      if (!ambitmp) ambitmp = {ambi: true, seg: '', docs: []}, clean.push(ambitmp)\n      let segdocs = chains.map(segs=> { return {seg: segs[idx].seg, docs: segs[idx].docs}  })\n      ambitmp.docs.push(segdocs)\n    }\n  }\n  let ambis = _.filter(clean, seg=> { return seg.ambi })\n  ambis.forEach(ambi=>{\n    let first = ambi.docs[0]\n    let chains = []\n    for (let idx = 0; idx < first.length; idx++) {\n      let chain = ambi.docs.map(adocs=> { return adocs[idx] })\n      chains.push(chain)\n    }\n    ambi.chains = chains\n    let chain = chains[0]\n    ambi.seg = chain.map(seg=>{ return seg.seg}).join(tsek)\n  })\n  // log('___AMBIS___', ambis)\n  return clean\n}\n\nfunction makeChains(pdchs, docs) {\n  let chains = []\n  let fulls = []\n  pdchs.forEach(segs=>{\n    let chain = []\n    let any = false\n    let full = true\n    segs.forEach(seg=>{\n      let segdocs = _.filter(docs, doc => { return startWith(seg, doc.dict) })\n      if (segdocs.length) any = true\n      if (!segdocs.length) full = false\n      let doc = {seg: seg, docs: segdocs}\n      chain.push(doc)\n    })\n    if (any) chains.push(chain)\n    if (full) fulls.push(chain)\n  })\n  // здесь full только для справки, убрать!!!\n  let bests, full\n  if (fulls.length) bests = selectBests(fulls), full = true\n  else bests = selectBests(chains)\n  return {chains: bests, full: full}\n}\n\nfunction selectBests(chains) {\n  let max = _.max(chains.map(chain => {  return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length } ) )\n  // log('MAX', max)\n  let longests = _.filter(chains, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length >= max - 1 })\n  // longests = _.sortBy(longests, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length }).reverse()\n  // log('LNGST', longests)\n  // return longests\n\n  // // квадраты - выберет более равномерное деление, да, но отбросит тоже хорошие\n  // let max = _.max(chains.map(chain => {  return _.sum(chain.map(segment => { return segment.docs.length ? Math.pow(segment.seg.length, 2) : 0 }))/chain.length } ) )\n  // // log('MAX', max)\n  // let longests = _.filter(chains, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? Math.pow(segment.seg.length, 2) : 0 }))/chain.length >= max - 10 })\n\n  let min = _.min(longests.map(chain => {  return chain.length } ) )\n  // log('MIN', min)\n  let shortests  = _.filter(longests, chain => { return chain.length == min })\n  return shortests\n  // let maxlong = _.max(longests.map(chain => {  return chain.length } ) )\n  // // log('maxlong', maxlong)\n  // longests  = _.filter(longests, chain => { return chain.length == maxlong })\n  // return longests\n}\n\nfunction startWith(str, head) {\n  if (str == head) return true\n  let reh = new RegExp('^' + head)\n  let tail = str.replace(reh, '')\n  return (str != tail && tibsuff.includes(tail)) ?  true : false\n}\n\nfunction fullChains(chains) {\n  let fulls = []\n  chains.forEach(segs => {\n    let full = true\n    segs.forEach(seg => {\n      if (!seg.docs.length) full = false\n    })\n    if (full) fulls.push(segs)\n  })\n  return fulls\n}\n\n// =====================\n\nlet dicts = []\nlet tmpdicts = []\nlet qs = []\n\nexport function localDict(datapath) {\n  log('LOCAL', datapath)\n  datapath = path.resolve(__dirname, datapath)\n  let files = glob.readdirSync('**/*\\.tib*', {cwd: datapath})\n  files = _.uniq(files)\n  // log('LOCAL DICT', datapath)\n  // log('F', files)\n  let wfs = selectTib(datapath, files)\n  log('WFS', wfs.length)\n  let queries = wfs.map(wf=> { return {str: wf}})\n  queries = queries.slice(0, 3)\n  log('QS2', queries)\n\n  recQuery(queries)\n}\n\nfunction recQuery(queries) {\n  let rs = miss.from.obj(queries)\n  let ws = miss.to.obj(write, flush)\n  let  streamDB = miss.through.obj( // TODO parallel\n    function (chunk, enc, cb) {\n      queryDBs(chunk)\n        .then(function(query) {\n          cb(null, query)\n        })\n    },\n    // function (cb) {\n    //   cb(null, 'ONE LAST BIT OF UPPERCASE')\n    // }\n  )\n\n  miss.pipe(rs, streamDB, ws, function (err) {\n    if (err) return console.error('Copy error!', err)\n    console.log('Copied successfully')\n  })\n}\n\nfunction write (data, enc, cb) {\n  // log('writing', JSON.stringify(data))\n  log('_dbres_:', data)\n  if (!data.chain) return cb()\n  data.chain.forEach(seg=> {\n    if (seg.docs.length) dicts.push(seg.seg)\n    else qs.push(seg.seg)\n  })\n  cb()\n}\n\nfunction flush (cb) {\n  // i am called before finish is emitted\n  qs = _.uniq(qs)\n  dicts = _.uniq(dicts)\n  if (tmpdicts.length == dicts.length)  return log('__VERY END__', dicts)\n  else tmpdicts.length = dicts.length\n  log('FLUSH: DICTS', dicts.length, 'QS', qs)\n  if (qs.length) {\n    let queries = qs.map(qs=> { return {str: qs}})\n    recQuery(queries)\n  } else {\n    log('____THE END____')\n  }\n}\n\n// потом в рекурсию\nfunction localQueries(queries) {\n  queries.forEach(query=> {\n    queryDBs (query)\n  })\n}\n\n// =============== CSV\n\nexport function importCSV(csvname) {\n  log('IMPORT CSV', csvname)\n\n  // добавить обработку # сомментариев\n  fse.createReadStream(csvname)\n      .pipe(csv2())\n      .on('data', console.log)\n}\n","module.exports = require(\"path\");","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _message = _interopRequireDefault(require(\"./message\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _ = require('lodash');\n\nvar log = console.log;\n\nvar debug = require('debug')('app');\n\nvar d = debug; // https://iso639-3.sil.org/code_tables/639/data --> three letter codes\n// punctuation \\u002E\\u002C\\u0021\\u003A\\u003B\\u00B7 - \\u0020\\u0027 - ... middle dot, - space, apostrophe\n// parens ()[]{-/\n// \\u0028\\u0029\\u005B\\u005D\\u007B\\u007D\\u002D\\u002F\n// greek 0370-03FF 1F00–1FFF\n// diactitic 0300-036F\n// tibetan shad - ། U+0F0D : TIBETAN MARK SHAD {shey} // punctuation\n// common punctuation in this version of sband\n\nvar puncts = \"([.,!:;\\xB7\\u0F0D])\"; // san - sansktit\n\nvar coderanges = {\n  'zho': \"([\\u4E00-\\u9FFF]+)\",\n  'tib': \"([\\u0F00-\\u0FFF]+)\",\n  'grc': \"([\\u0370-\\u03FF\\u1F00-\\u1FFF\\u0300-\\u036F' ]+)\" // note: grc includes space - \\u0020\n\n};\n\nvar _default = function _default(str, code) {\n  var re = new RegExp(coderanges[code]);\n  if (!re.test(str)) return;\n  var clean = str.trim().replace(/᾽/g, \"\\'\");\n  var wopunct = clean.split(\"'\").join('');\n  if (!re.test(wopunct)) return;\n  var rep = new RegExp(puncts);\n  var rows = clean.replace(/\\r?\\n+/, '\\n').split('\\n');\n  var rclauses = rows.map(function (row) {\n    return row.split(rep);\n  });\n  var spans = [];\n  rows.forEach(function (row) {\n    var spns = [];\n    var rclauses = row.split(rep);\n    rclauses.forEach(function (rclause) {\n      if (rep.test(rclause)) {\n        var spn = {\n          text: rclause,\n          punct: true\n        };\n        spns.push(spn);\n      } else {\n        var clauses = rclause.split(re);\n        clauses = _.compact(clauses);\n        clauses.forEach(function (clause) {\n          clause = clause.trim();\n          if (!clause) return;\n          var lang = re.test(clause) ? true : false;\n          var span = {\n            text: clause\n          };\n          if (lang) span.lang = code; // span[code] = true\n          // if (lang) { }\n\n          spns.push(span);\n        });\n      }\n    });\n    spans.push(spns);\n  });\n  return spans;\n};\n\nexports.default = _default;","module.exports = require(\"electron-settings\");","module.exports = require(\"debug\");","module.exports = require(\"electron-is-dev\");","module.exports = require(\"pouchdb\");","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _default = function _default() {\n  return \"new message\";\n};\n\nexports.default = _default;","module.exports = require(\"fs-extra\");","module.exports = require(\"glob-fs\");","module.exports = require(\"pouchdb-load\");","module.exports = require(\"highland\");","module.exports = require(\"mississippi\");","module.exports = require(\"csv2\");","module.exports = require(\"node-couchdb\");","module.exports = require(\"url\");","import { app, BrowserWindow } from \"electron\";\n\nexport const libMenuTemplate = {\n  label: \"File\",\n  submenu: [\n    {  label: \"Home\",\n       accelerator: \"CmdOrCtrl+L\",\n       click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'home') } },\n    { label: \"Quit\",\n      accelerator: \"CmdOrCtrl+Q\",\n      click: () => {\n        app.quit();\n      }\n    }\n  ]\n}\n","import { app, BrowserWindow } from \"electron\";\n\nexport const aboutMenuTemplate = {\n  label: \"About\",\n  submenu: [\n    { label: \"About Pecha.js\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'about') } },\n    { label: \"Code and Download\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'code') } },\n    { label: \"License\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'license') } },\n    { label: \"Contacts\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'contacts') } },\n    { label: \"Acknowledgements\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'acknowledgements') } }\n  ]\n};\n","import { app, BrowserWindow } from \"electron\";\n\nexport const dictMenuTemplate = {\n  label: \"Dict\",\n  submenu: [\n    { label: \"Clone dicts from server\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'clonedicts') } },\n    { label: \"Arrange local dicts\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'activedicts') } },\n    { label: \"Create CSV from some texts\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'localdict') } },\n    { label: \"to / form CSV\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'csv') } },\n    { label: \"Publish new dictionary (disabled)\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'publish') } },\n    { label: \"Cleanup DBs completely\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'cleanup') } }\n  ]\n};\n","import { app, BrowserWindow } from \"electron\";\n\nexport const helpMenuTemplate = {\n  label: \"Help\",\n  submenu: [\n    { label: \"hot keys\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'help') } },\n    { label: \"Toggle DevTools\",\n      accelerator: \"Alt+CmdOrCtrl+I\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().toggleDevTools();\n      }\n    }\n  ]\n};\n","// This is main process of Electron, started as first thing when your\n// app starts. It runs through entire life of your application.\n// It doesn't have any windows which you can see on screen, but we can open\n// window from here.\n\nimport _ from 'lodash'\nimport path from \"path\";\nimport url from \"url\"\nimport { app, BrowserWindow, Menu, ipcMain, globalShortcut } from \"electron\"\nimport { libMenuTemplate } from \"./menu/lib_menu_template\"\nimport { aboutMenuTemplate } from \"./menu/about_menu_template\"\nimport { dictMenuTemplate } from \"./menu/dict_menu_template\"\nimport { helpMenuTemplate } from \"./menu/help_menu_template\"\n\nimport { getCfg, replicate, infoDB, remoteDicts, queryDBs, localDict, importCSV } from \"./dbs/pouch\"\n\nimport { devMenuTemplate } from \"./menu/dev_menu_template\"\nimport { editMenuTemplate } from \"./menu/edit_menu_template\"\n// import createWindow from \"./helpers/window\"\nconst settings = require('electron-settings')\n// const windowStateKeeper = require('electron-window-state')\nconst log = console.log\n\n// Special module holding environment variables which you declared\n// in config/env_xxx.json file.\nimport env from \"env\"\n\nconst setApplicationMenu = () => {\n  // const menus = [libMenuTemplate, fileMenuTemplate, aboutMenuTemplate, authMenuTemplate, helpMenuTemplate]\n  // const menus = [libMenuTemplate, aboutMenuTemplate, helpMenuTemplate]\n  const menus = [libMenuTemplate, dictMenuTemplate, aboutMenuTemplate, helpMenuTemplate]\n  if (env.name !== \"production\") {\n    // menus.push(devMenuTemplate)\n  }\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus))\n}\n\n// Save userData in separate folders for each environment.\n// Thanks to this you can use production and development versions of the app\n// on same machine like those are two separate apps.\nif (env.name !== \"production\") {\n  const userDataPath = app.getPath(\"userData\")\n  app.setPath(\"userData\", `${userDataPath} (${env.name})`)\n}\n\napp.on(\"ready\", () => {\n  setApplicationMenu()\n\n  // let mainWindowState = windowStateKeeper({\n  //   defaultWidth: 1000,\n  //   defaultHeight: 800\n  // })\n\n  let winBounds = settings.get('winBounds')\n  winBounds.y -= 21\n  log('winBounds', winBounds)\n\n  let opts = {webPreferences: {\n    nodeIntegration: true\n  }}\n\n  // Object.assign(opts, winBounds)\n\n  const win = new BrowserWindow(opts)\n  win.setBounds(winBounds)\n  // const win = new BrowserWindow({\n  //   'x': mainWindowState.x,\n  //   'y': mainWindowState.y -20,\n  //   'width': mainWindowState.width,\n  //   'height': mainWindowState.height,\n  //   webPreferences: {\n  //     nodeIntegration: true\n  //   }\n  // })\n\n  win.loadURL(\n    url.format({\n      pathname: path.join(__dirname, \"app.html\"),\n      protocol: \"file:\",\n      slashes: true\n    })\n  )\n\n  if (env.name === \"development\") {\n    win.openDevTools()\n  }\n\n  win.webContents.on('did-finish-load', () => {\n    let pckg = require('../package.json')\n    let name = pckg.name\n    let version = pckg.version\n    // let aversion = pckg.dependencies.antrax.replace('^', '')\n    win.webContents.send('version', version )\n    win.setTitle([name, 'v.', version].join(' '))\n  })\n\n  win.on('resize', function () {\n    win.webContents.send('reload')\n  })\n\n  win.on('close', () => {\n    settings.set('winBounds', win.getBounds())\n  })\n\n  // globalShortcut.register('CommandOrControl+R', () => win.webContents.send('reread'))\n  // globalShortcut.register('CommandOrControl+R', () => win.reload())\n  globalShortcut.register('CommandOrControl+Shift+R', () => win.reload())\n  // globalShortcut.register('CommandOrControl+R', () => win.reload())\n\n  const apath = app.getAppPath()\n  const upath = app.getPath(\"userData\")\n  settings.set('apath', apath)\n  settings.set('upath', upath)\n\n  getCfg()\n\n  ipcMain.on('replicate', (event, dbname) => {\n    console.log('B:REPLICATE', dbname)\n    let localpath = path.resolve(upath, 'pouch', dbname)\n    let remotepath = ['http://localhost:3000/api', dbname].join('/')\n    replicate(remotepath, localpath)\n      .then(function (res) {\n        console.log('Hooray the stream replication is complete!', res);\n        getCfg()\n        event.sender.send('replicateOK', res)\n      }).catch(function (err) {\n        console.log('oh no an error', err);\n      });\n  })\n\n  ipcMain.on('queryDBs', (event, query) => {\n    queryDBs(query)\n      .then(function(query) {\n        event.sender.send('replayDBs', query)\n      })\n  })\n\n  ipcMain.on('importcsv', (event, csvname) => {\n    importCSV(csvname)\n      // .then(function(res) {\n      //   // event.sender.send('XXX', res)\n      // })\n  })\n\n\n  ipcMain.on('queryLocalDict', (event, datapath) => {\n    localDict(datapath)\n    // queries = queries.slice(0, 5)\n    // Promise.all(queries.map(function(query) {\n    //   return queryDBs(query.keys)\n    //     .then(function(docs) {\n    //       query.docs = docs\n    //       return query\n    //     })\n    // }))\n    //   .then(function(queries) {\n    //     // log('QSRES', res)\n    //     event.sender.send('replayLocalDict', queries)\n    //   })\n\n    // queryDBs(query.keys)\n    //   .then(function(docs) {\n    //     query.docs = docs\n    //     event.sender.send('replayLocalDict', query)\n    //   })\n  })\n\n  ipcMain.on('remoteDicts', (event, query) => {\n    log('B: REMOTE DICTS START')\n    remoteDicts()\n      .then(function(rdbs) {\n        log('REMOTE DICTS', rdbs)\n        rdbs = _.filter(rdbs, dname=> { return dname[0] != '_' })\n        event.sender.send('remoteDictsReply', rdbs)\n      })\n  })\n})\n\napp.on(\"window-all-closed\", () => {\n  app.quit()\n})\n"],"sourceRoot":""}