{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"lodash\"","webpack:///./src/lib/tibetan_data.js","webpack:///external \"path\"","webpack:///external \"electron-settings\"","webpack:////home/michael/sband/dist/index.js","webpack:///external \"debug\"","webpack:////home/michael/sband/dist/message.js","webpack:///external \"electron-is-dev\"","webpack:///external \"pouchdb\"","webpack:///external \"url\"","webpack:///external \"request\"","webpack:///external \"fs-extra\"","webpack:///external \"glob-fs\"","webpack:///external \"pouchdb-load\"","webpack:///external \"highland\"","webpack:///external \"mississippi\"","webpack:///external \"csv2\"","webpack:///external \"node-couchdb\"","webpack:///./src/menu/lib_menu_template.js","webpack:///./src/menu/about_menu_template.js","webpack:///./src/menu/dict_menu_template.js","webpack:///./src/menu/help_menu_template.js","webpack:///./src/dbs/segmenter.js","webpack:///./src/dbs/pouch.js","webpack:///./src/background.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__webpack_exports__","tibsyms","tibsuff","tsek","default","obj","_","coderanges","console","log","zho","tib","grc","str","code","re","RegExp","test","clean","trim","replace","wopunct","split","join","rep","rows","spans","map","row","forEach","spns","rclause","spn","text","punct","push","clauses","compact","clause","span","lang","libMenuTemplate","label","submenu","accelerator","click","BrowserWindow","getFocusedWindow","webContents","send","app","quit","aboutMenuTemplate","dictMenuTemplate","helpMenuTemplate","toggleDevTools","retsek","path","fse","glob","gitignore","settings","PouchDB","plugin","miss","dbs","rekuku","NodeCouchDb","diglossa","host","protocol","port","auth","user","pass","replicate","upath","dname","localpath","resolve","localDB","dumppath","remotepath","load","then","sync","live","retry","on","onSyncChange","onSyncError","cfg","newdict","active","idx","length","set","setCfg","data","queryDBs","query","keys","pdchs","segs","depth","old","rec","pdch","head","tail","flakes","slice","flake","reverse","scrape","flatten","clone","pop","cleans","seg","segmenter","keyres","mainKeys","uniq","added","syl","resyl","poss","main","totalKeys","compound","filter","concat","dnames","db","Promise","all","allDocs","include_docs","res","Error","rdocs","doc","docs","rdoc","weight","catch","err","chain","chains","bests","full","fulls","any","segdocs","reh","includes","startWith","dict","selectBests","makeChains","ambitmp","first","ambi","adocs","commonParts","compactDocs","max","sum","segment","longests","min","dicts","tmpdicts","qs","localDict","datapath","__dirname","files","readdirSync","cwd","wfs","tibs","tibkey","file","fpath","readFileSync","cleanStr","sband","gpar","wf","selectTib","queries","recQuery","rs","from","ws","to","write","flush","streamDB","through","chunk","enc","cb","pipe","error","startkey","endkey","env","userDataPath","getPath","setPath","menus","Menu","setApplicationMenu","buildFromTemplate","win","webPreferences","nodeIntegration","winBounds","getBounds","y","setBounds","loadURL","url","format","pathname","slashes","openDevTools","pckg","version","setTitle","globalShortcut","register","reload","apath","getAppPath","pouchpath","ensureDirSync","dpath","pouch","setDBs","ipcMain","event","sender","csvname","find","csv","_id","trns","trn","JSON","stringify","filename","filepath","writeFile","exportCSV","listDatabases","rdbs","removeSync","cleanupDB"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,oBClFAhC,EAAAD,QAAAkC,QAAA,2BCAAjC,EAAAD,QAAAkC,QAAA,wCCAApC,EAAAU,EAAA2B,EAAA,sBAAAC,IAAAtC,EAAAU,EAAA2B,EAAA,sBAAAE,IAEO,MAAMD,EAAU,CACrBE,KAAM,KAUKD,EAAU,CAAC,KAAM,IAAK,KAAM,KAAM,KAAM,IAAK,qBCb1DpC,EAAAD,QAAAkC,QAAA,uBCAAjC,EAAAD,QAAAkC,QAAA,mDCEAtB,OAAOC,eAAeb,EAAS,aAAc,CAC3CmB,OAAO,IAETnB,EAAQuC,aAAU,EAElB,IAEgCC,KAFMN,EAAQ,KAEOM,EAAIlB,WAEzD,IAAImB,EAAIP,EAAQ,GAiBZQ,GAfMC,QAAQC,IAENV,EAAQ,EAARA,CAAiB,OAaZ,CACfW,IAAO,WACPC,IAAO,WACPC,IAAO,qBAgDT/C,EAAQuC,QA5CO,SAAkBS,EAAKC,GACpC,IAAIC,EAAK,IAAIC,OAAOT,EAAWO,IAC/B,GAAKC,EAAGE,KAAKJ,GAAb,CACA,IAAIK,EAAQL,EAAIM,OAAOC,QAAQ,KAAM,KACjCC,EAAUH,EAAMI,MAAM,KAAKC,KAAK,IACpC,GAAKR,EAAGE,KAAKI,GAAb,CACA,IAAIG,EAAM,IAAIR,OAfH,eAgBPS,EAAOP,EAAME,QAAQ,SAAU,MAAME,MAAM,MAI3CI,GAHWD,EAAKE,IAAI,SAAUC,GAChC,OAAOA,EAAIN,MAAME,KAEP,IA8BZ,OA7BAC,EAAKI,QAAQ,SAAUD,GACrB,IAAIE,EAAO,GACIF,EAAIN,MAAME,GAChBK,QAAQ,SAAUE,GACzB,GAAIP,EAAIP,KAAKc,GAAU,CACrB,IAAIC,EAAM,CACRC,KAAMF,EACNG,OAAO,GAETJ,EAAKK,KAAKH,OACL,CACL,IAAII,EAAUL,EAAQT,MAAMP,IAC5BqB,EAAU9B,EAAE+B,QAAQD,IACZP,QAAQ,SAAUS,GAExB,GADAA,EAASA,EAAOnB,OAChB,CACA,IACIoB,EAAO,CACTN,KAAMK,KAFGvB,EAAGE,KAAKqB,KAITC,EAAKC,KAAO1B,GAGtBgB,EAAKK,KAAKI,SAIhBb,EAAMS,KAAKL,KAENJ,gIC5ET5D,EAAAD,QAAAkC,QAAA,uCCEAtB,OAAOC,eAAeb,EAAS,aAAc,CAC3CmB,OAAO,IAETnB,EAAQuC,aAAU,EAMlBvC,EAAQuC,QAJO,WACb,MAAO,8BCRTtC,EAAAD,QAAAkC,QAAA,kCCAAjC,EAAAD,QAAAkC,QAAA,6BCAAjC,EAAAD,QAAAkC,QAAA,uBCAAjC,EAAAD,QAAAkC,QAAA,0BCAAjC,EAAAD,QAAAkC,QAAA,2BCAAjC,EAAAD,QAAAkC,QAAA,0BCAAjC,EAAAD,QAAAkC,QAAA,+BCAAjC,EAAAD,QAAAkC,QAAA,2BCAAjC,EAAAD,QAAAkC,QAAA,8BCAAjC,EAAAD,QAAAkC,QAAA,uBCAAjC,EAAAD,QAAAkC,QAAA,s3ECEO,MAAM0C,EAAkB,CAC7BC,MAAO,OACPC,QAAS,CACP,CAAGD,MAAO,OACPE,YAAa,cACbC,MAAO,KAAQC,gBAAcC,mBAAmBC,YAAYC,KAAK,UAAW,UAC/E,CAAEP,MAAO,OACPE,YAAa,cACbC,MAAO,KACLK,MAAIC,WCTCC,EAAoB,CAC/BV,MAAO,QACPC,QAAS,CACP,CAAED,MAAO,iBAAkBG,MAAO,KAAQC,gBAAcC,mBAAmBC,YAAYC,KAAK,UAAW,WACvG,CAAEP,MAAO,oBAAqBG,MAAO,KAAQC,gBAAcC,mBAAmBC,YAAYC,KAAK,UAAW,UAC1G,CAAEP,MAAO,UAAWG,MAAO,KAAQC,gBAAcC,mBAAmBC,YAAYC,KAAK,UAAW,aAChG,CAAEP,MAAO,WAAYG,MAAO,KAAQC,gBAAcC,mBAAmBC,YAAYC,KAAK,UAAW,cACjG,CAAEP,MAAO,mBAAoBG,MAAO,KAAQC,gBAAcC,mBAAmBC,YAAYC,KAAK,UAAW,wBCPhGI,EAAmB,CAC9BX,MAAO,OACPC,QAAS,CACP,CAAED,MAAO,0BAA2BG,MAAO,KAAQC,gBAAcC,mBAAmBC,YAAYC,KAAK,UAAW,gBAChH,CAAEP,MAAO,sBAAuBG,MAAO,KAAQC,gBAAcC,mBAAmBC,YAAYC,KAAK,UAAW,iBAC5G,CAAEP,MAAO,6BAA8BG,MAAO,KAAQC,gBAAcC,mBAAmBC,YAAYC,KAAK,UAAW,eACnH,CAAEP,MAAO,kBAAmBG,MAAO,KAAQC,gBAAcC,mBAAmBC,YAAYC,KAAK,UAAW,SACxG,CAAEP,MAAO,oCAAqCG,MAAO,KAAQC,gBAAcC,mBAAmBC,YAAYC,KAAK,UAAW,aAC1H,CAAEP,MAAO,yBAA0BG,MAAO,KAAQC,gBAAcC,mBAAmBC,YAAYC,KAAK,UAAW,eCRtGK,EAAmB,CAC9BZ,MAAO,OACPC,QAAS,CACP,CAAED,MAAO,WAAYG,MAAO,KAAQC,gBAAcC,mBAAmBC,YAAYC,KAAK,UAAW,UACjG,CAAEP,MAAO,kBACPE,YAAa,kBACbC,MAAO,KACLC,gBAAcC,mBAAmBQ,gDCN7B/C,QAAQC,IAApB,MACMN,EAAOF,IAAQE,KCErB,MAAMA,EAAOF,IAAQE,KACrB,IAAIqD,EAAS,IAAIxC,OAAOb,EAAK,KAEbJ,EAAQ,IAAxB,MACM0D,EAAO1D,EAAQ,GACf2D,EAAM3D,EAAQ,IACpB,IAAI4D,EAAO5D,EAAQ,GAARA,CAAmB,CAAE6D,WAAW,IAE7B7D,EAAQ,GAAtB,MACM8D,EAAW9D,EAAQ,GACnB+D,EAAU/D,EAAQ,IACxB+D,EAAQC,OAAOhE,EAAQ,KAEvB,MAAMU,EAAMD,QAAQC,IACRV,EAAQ,GAGZA,EAAQ,IAHhB,IAIIiE,EAAOjE,EAAQ,IAIfe,GAHOf,EAAQ,IAGR,OACPkE,EAAM,GAGNC,EAAS,IAEb,MAAMC,EAAcpE,EAAQ,IAGtBqE,GAFQ,IAAID,EAED,IAAIA,EAAY,CAC/BE,KAAM,eACNC,SAAU,OACVC,KAAM,KACNC,KAAM,CACJC,KAAM,QACNC,KAAM,YAYH,SAASC,EAAUC,EAAOC,GAC/B,IAAIC,EAAYrB,EAAKsB,QAAQH,EAAO,QAASC,GACzCG,EAAU,IAAIlB,EAAQgB,GACtBG,EAAW,CAAC,4BAA6BJ,GAAOtD,KAAK,IACrD2D,EAAa,CAAC,4BAA6BL,GAAOtD,KAAK,IAG3D,OAFAd,EAAI,kBAAmBqE,EAAWI,GAE3BF,EAAQG,KAAKF,GACjBG,KAAK,WAEJ3E,EAAI,4BACJuE,EAAQK,KAAKH,EAFF,CAAEI,MAAM,EAAMC,OAAO,IAG7BC,GAAG,SAAUC,GAEbD,GAAG,QAASE,GAQfzB,EAAI9B,KAAK6C,GACT,IAAIW,EA+BV,SAAgBf,EAAOC,EAAOK,GAC5B,IAAIS,EAAM9B,EAASjF,IAAI,QAAU,GACjC,IAAKiG,EAAO,OAAOc,EACnB,IAAIC,EAAU,CAACf,MAAOA,EAAOQ,KAAMH,EAAYW,QAAQ,EAAMC,IAAKH,EAAII,QAItE,OAHAJ,EAAIxD,KAAKyD,GACT/B,EAASmC,IAAI,MAAOL,GACpBlF,EAAI,eAAgBkF,GACbA,EAtCOM,CAAOrB,EAAOC,EAAOK,GAC/BzE,EAAI,gCAAiCkF,KAI3C,SAASF,EAAaS,GAAQzF,EAAI,eAAgByF,GAElD,SAASR,IAAgBjF,EAAI,eAkFtB,SAAS0F,EAAUC,GAEZA,EAAMvF,IAAIO,QAAQ8C,EAAQ,IAAtC,IAGImC,EADAC,EDrJC,SAAmBzF,GACxB,IAAI0F,EAAO1F,EAAIS,MAAMnB,GAGjBqG,EAAQ,EAERC,EAAM5F,EAENyF,GADOC,EAAKR,OACJ,CAAC,CAACQ,MACd,SAASG,EAAIH,EAAMI,IA6Bd,SAAgBJ,GAErB,IAAIK,EAAMC,EACNC,EAAS,GACb,IAAK,IAAIhB,EAAM,EAAGA,EAAMS,EAAKR,OAAS,EAAGD,IAAO,CAC9Cc,EAAOL,EAAKQ,MAAM,EAAGjB,GACrBe,EAAON,EAAKQ,MAAMjB,GAClB,IAAIkB,EAAQ,CAACJ,KAAMA,EAAMC,KAAMA,GAC3BA,EAAKd,QAAQe,EAAO3E,KAAK6E,GAE/B,OAAOF,EAAOG,WArCCC,CAAOX,GACb1E,QAAQmF,IACbL,EAAKxE,KAAK6E,EAAMJ,MAChBD,EAAKxE,KAAK6E,EAAMH,MAGZvG,IAAE6G,QAAQR,GAAMpF,KAAKpB,IAASsG,IAChCH,EAAMnE,KAAK7B,IAAE8G,MAAMT,IACnBA,EAAKU,OAEHV,EAAKZ,OAASS,GAAOE,EAAIM,EAAMH,KAAMF,GAEzCA,EAAKU,QAGTX,CAAIH,EAAM,IACV,IAAIe,EAAS,GAQb,OAPAhB,EAAMzE,QAAQ8E,IACZ,IAAIzF,EAAQ,GACZyF,EAAK9E,QAAQ0F,IACXrG,EAAMiB,KAAKoF,EAAIhG,KAAKpB,MAEtBmH,EAAOnF,KAAKjB,KAEPoG,ECkHKE,CAAUpB,EAAMvF,KAExB4G,EDvKC,SAAmBnB,GACxB,IAAIoB,EAAWpH,IAAEqH,KAAKrH,IAAE6G,QAAQb,IAC5BsB,EAAQ,GAQZ,OAPAF,EAAS7F,QAAQ0F,IACfrH,IAAQ2B,QAAQgG,IACd,IAAIC,EAAQ,IAAI9G,OAAO6G,EAAI,KACvBE,EAAOR,EAAInG,QAAQ0G,EAAO,IAC1BP,GAAOQ,GAAMH,EAAMzF,KAAK4F,OAGzB,CAACC,KAAMN,EAAUE,MAAOA,GC6JlBK,CAAU3B,GACHD,EAAhBD,EAAM8B,SAAiB5H,IAAE6H,OAAOV,EAAOO,KAAM1I,GAAeA,GAAO8G,EAAMvF,KAChEP,IAAEqH,KAAKF,EAAOO,KAAKI,OAAOX,EAAOG,QAE9C,IAAIS,EAASpE,EAAItC,IAAI2G,GAAcA,EAAGzD,OAGtC,OAFApE,EAAI,eAAgB4H,GAEbE,QAAQC,IAAIvE,EAAItC,IAAI,SAAU2G,GACnC,OAAOA,EAAGG,QAAQ,CAChBpC,KAAMA,EACNqC,cAAc,IAEbtD,KAAK,SAAUuD,GACd,IAAKA,IAAQA,EAAIlH,KAAM,MAAM,IAAImH,MAAM,iBACvC,IAAIC,EAAQvI,IAAE+B,QAAQsG,EAAIlH,KAAKE,IAAIC,GAAgBA,EAAIkH,MACnDC,EAAOzI,IAAE6G,QAAQ7G,IAAE+B,QAAQwG,EAAMlH,IAAIqH,GAAiBA,EAAKD,QAG/D,OAFAA,EAAKlH,QAAQiH,IAASA,EAAIjE,MAAQyD,EAAGzD,MAAOiE,EAAIG,OAASX,EAAGW,SAErDF,IAERG,MAAM,SAAUC,GACf3I,QAAQC,IAAI,cAAe0I,QAG9B/D,KAAK,SAAUuD,GAEd,IAEIS,EA4CH,SAAqBL,EAAMzC,GAChC,IAGI8C,EAFAC,EAwCN,SAAoB/C,EAAOyC,GACzB,IAiBIO,EAAOC,EAjBPF,EAAS,GACTG,EAAQ,GACZlD,EAAMzE,QAAQ0E,IACZ,IAAI6C,EAAQ,GACRK,GAAM,EACNF,GAAO,EACXhD,EAAK1E,QAAQ0F,IACX,IAAImC,EAAUpJ,IAAE6H,OAAOY,EAAMD,IAuCnC,SAAmBjI,EAAK+F,GACtB,GAAI/F,GAAO+F,EAAM,OAAO,EACxB,IAAI+C,EAAM,IAAI3I,OAAO,IAAM4F,GACvBC,EAAOhG,EAAIO,QAAQuI,EAAK,IAC5B,QAAQ9I,GAAOgG,IAAQ3G,IAAQ0J,SAAS/C,KA3CSgD,CAAUtC,EAAKuB,EAAIgB,OAC5DJ,EAAQ3D,SAAQ0D,GAAM,GACrBC,EAAQ3D,SAAQwD,GAAO,GAC5B,IAAIT,EAAM,CAACvB,IAAKA,EAAKwB,KAAMW,GAC3BN,EAAMjH,KAAK2G,KAETW,GAAKJ,EAAOlH,KAAKiH,GACjBG,GAAMC,EAAMrH,KAAKiH,KAInBI,EAAMzD,QAAQuD,EAAQS,EAAYP,GAAQD,GAAO,GAChDD,EAAQS,EAAYV,GACzB,MAAO,CAACA,OAAQC,EAAOC,KAAMA,GA9DnBS,CAAW1D,EAAOyC,GACXM,OAGbA,EAAOtD,OAAS,EAAGqD,EAMzB,SAAqBC,GACnB,IAEIY,EAFAC,EAAQb,EAAO,GACfnI,EAAQ,GAEZ,IAAK,IAAI4E,EAAM,EAAGA,EAAMoE,EAAMnE,OAAQD,IAAO,CAC3C,IAAIS,EAAO8C,EAAO1H,IAAI4E,GAAgBA,EAAKT,GAAKyB,KAChD,GAA2B,GAAvBjH,IAAEqH,KAAKpB,GAAMR,OACf7E,EAAMiB,KAAK+H,EAAMpE,IACjBmE,EAAU,SACL,CACAA,IAASA,EAAU,CAACE,MAAM,EAAM5C,IAAK,GAAIwB,KAAM,IAAK7H,EAAMiB,KAAK8H,IACpE,IAAIP,EAAUL,EAAO1H,IAAI4E,IAAgB,CAACgB,IAAKhB,EAAKT,GAAKyB,IAAKwB,KAAMxC,EAAKT,GAAKiD,QAC9EkB,EAAQlB,KAAK5G,KAAKuH,IAgBtB,OAbYpJ,IAAE6H,OAAOjH,EAAOqG,GAAeA,EAAI4C,MACzCtI,QAAQsI,IACZ,IAAID,EAAQC,EAAKpB,KAAK,GAClBM,EAAS,GACb,IAAK,IAAIvD,EAAM,EAAGA,EAAMoE,EAAMnE,OAAQD,IAAO,CAC3C,IAAIsD,EAAQe,EAAKpB,KAAKpH,IAAIyI,GAAiBA,EAAMtE,IACjDuD,EAAOlH,KAAKiH,GAEde,EAAKd,OAASA,EACd,IAAID,EAAQC,EAAO,GACnBc,EAAK5C,IAAM6B,EAAMzH,IAAI4F,GAAcA,EAAIA,KAAMhG,KAAKpB,KAG7Ce,EAlCwBmJ,CAAYhB,GACjB,GAAjBA,EAAOtD,SAAaqD,EAAQC,EAAO,IAC5C,OAAOD,EAnDSkB,CAFFhK,IAAE6G,QAAQwB,GAEUrC,GAG9B,OADAF,EAAMgD,MAAQA,EACPhD,IA2Gb,SAAS2D,EAAYV,GACnB,IAAIkB,EAAMjK,IAAEiK,IAAIlB,EAAO1H,IAAIyH,GAAmB9I,IAAEkK,IAAIpB,EAAMzH,IAAI8I,GAAoBA,EAAQ1B,KAAKhD,OAAS0E,EAAQlD,IAAIxB,OAAS,IAAMqD,EAAMrD,SAErI2E,EAAWpK,IAAE6H,OAAOkB,EAAQD,GAAkB9I,IAAEkK,IAAIpB,EAAMzH,IAAI8I,GAAoBA,EAAQ1B,KAAKhD,OAAS0E,EAAQlD,IAAIxB,OAAS,IAAMqD,EAAMrD,QAAUwE,EAAM,GAUzJI,EAAMrK,IAAEqK,IAAID,EAAS/I,IAAIyH,GAAmBA,EAAMrD,SAGtD,OADiBzF,IAAE6H,OAAOuC,EAAUtB,GAAkBA,EAAMrD,QAAU4E,GA6BxE,IAAIC,EAAQ,GACRC,EAAW,GACXC,EAAK,GAEF,SAASC,EAAUC,GACxBvK,EAAI,QAASuK,GACbA,EAAWvH,EAAKsB,QAAQkG,UAAWD,GACnC,IAAIE,EAAQvH,EAAKwH,YAAY,YAAc,CAACC,IAAKJ,IAI7CK,EA7JN,SAAmBL,EAAUE,GAC3B,IAAII,EAAO,GACPC,EAAS,GAwBb,OAvBAL,EAAMrJ,QAAQ2J,IACZ,IAAIC,EAAQhI,EAAKsB,QAAQiG,EAAUQ,GAE/B/J,EADOiC,EAAIgI,aAAaD,EAAM,QAAQtK,OAC1BG,MAAM,OACtBG,EAAOnB,IAAE+B,QAAQZ,IACZI,QAAQ,CAACD,EAAKkE,KACjB,IAAI5E,EAoBV,SAAkBU,GAChB,IAAIV,EAAQU,EAAIT,OAEhB,OADAD,EAAQA,EAAMC,OAAOC,QAAQ,MAAO,IAtBpBuK,CAAS/J,GAETgK,IAAM1K,EAAOJ,GACnBe,QAAQgK,IACZA,EAAKhK,QAAQU,IACPA,EAAKC,MAAQ1B,GACPyB,EAAKN,KAAKX,MAAM,KACtBO,QAAQiK,IACVA,EAAKA,EAAG1K,QAAQoC,EAAQ,IACpB+H,EAAOO,KACXR,EAAKnJ,KAAK2J,GACVP,EAAOO,IAAM,aAMhBR,EAmIGS,CAAUf,EAHpBE,EAAQ5K,IAAEqH,KAAKuD,IAIfzK,EAAI,MAAO4K,EAAItF,QACf,IAAIiG,EAAUX,EAAI1J,IAAImK,IAAc,CAACjL,IAAKiL,KAC1CE,EAAUA,EAAQjF,MAAM,EAAG,GAC3BtG,EAAI,MAAOuL,GAEXC,EAASD,GAGX,SAASC,EAASD,GAChB,IAAIE,EAAKlI,EAAKmI,KAAK9L,IAAI2L,GACnBI,EAAKpI,EAAKqI,GAAGhM,IAAIiM,EAAOC,GACvBC,EAAWxI,EAAKyI,QAAQpM,IAC3B,SAAUqM,EAAOC,EAAKC,GACpBzG,EAASuG,GACNtH,KAAK,SAASgB,GACbwG,EAAG,KAAMxG,OAQjBpC,EAAK6I,KAAKX,EAAIM,EAAUJ,EAAI,SAAUjD,GACpC,GAAIA,EAAK,OAAO3I,QAAQsM,MAAM,cAAe3D,GAC7C3I,QAAQC,IAAI,yBAIhB,SAAS6L,EAAOpG,EAAMyG,EAAKC,GAGzB,GADAnM,EAAI,WAAYyF,IACXA,EAAKkD,MAAO,OAAOwD,IACxB1G,EAAKkD,MAAMvH,QAAQ0F,IACbA,EAAIwB,KAAKhD,OAAQ6E,EAAMzI,KAAKoF,EAAIA,KAC/BuD,EAAG3I,KAAKoF,EAAIA,OAEnBqF,IAGF,SAASL,EAAOK,GAId,GAFA9B,EAAKxK,IAAEqH,KAAKmD,GACZF,EAAQtK,IAAEqH,KAAKiD,GACXC,EAAS9E,QAAU6E,EAAM7E,OAAS,OAAOtF,EAAI,eAAgBmK,GAGjE,GAFKC,EAAS9E,OAAS6E,EAAM7E,OAC7BtF,EAAI,eAAgBmK,EAAM7E,OAAQ,KAAM+E,GACpCA,EAAG/E,OAAQ,CAEbkG,EADcnB,EAAGnJ,IAAImJ,IAAc,CAACjK,IAAKiK,WAGzCrK,EAAI,mBAsBR,IAAIsM,EAAY,IACZC,EAAS,eCtab,MAAMnJ,EAAW9D,EAAQ,GAEnBU,EAAMD,QAAQC,IAmBpB,GAAiB,eAAbwM,EAAI3O,KAAuB,CAC7B,MAAM4O,EAAehK,MAAIiK,QAAQ,YACjCjK,MAAIkK,QAAQ,cAAeF,MAAiBD,EAAI3O,SAGlD4E,MAAIsC,GAAG,QAAS,KAlBW,MAGzB,MAAM6H,EAAQ,CAAC5K,EAAiBY,EAAkBD,EAAmBE,GACjE2J,EAAI3O,KAGRgP,OAAKC,mBAAmBD,OAAKE,kBAAkBH,KAY/CE,GAaA,MAAME,EAAM,IAAI3K,gBANL,CAAC4K,eAAgB,CAC1BC,iBAAiB,KAOnB,IAAIC,EAAY/J,EAASjF,IAAI,cAAgB6O,EAAII,YACjDD,EAAUE,GAAK,GACfrN,EAAI,YAAamN,GAEjBH,EAAIM,UAAUH,GAEdH,EAAIO,QACFC,IAAIC,OAAO,CACTC,SAAU1K,IAAKlC,KAAK0J,UAAW,YAC/B3G,SAAU,QACV8J,SAAS,KAII,gBAAbnB,EAAI3O,MACNmP,EAAIY,eAGNZ,EAAIzK,YAAYwC,GAAG,kBAAmB,KACpC,IAAI8I,EAAOvO,EAAQ,IACfzB,EAAOgQ,EAAKhQ,KACZiQ,EAAUD,EAAKC,QAEnBd,EAAIzK,YAAYC,KAAK,UAAWsL,GAChCd,EAAIe,SAAS,CAAClQ,EAAM,KAAMiQ,GAAShN,KAAK,QAG1CkM,EAAIjI,GAAG,SAAU,WACfiI,EAAIzK,YAAYC,KAAK,YAGvBwK,EAAIjI,GAAG,QAAS,KACd3B,EAASmC,IAAI,YAAayH,EAAII,eAKhCY,iBAAeC,SAAS,2BAA4B,IAAMjB,EAAIkB,UAG9D,MAAMC,EAAQ1L,MAAI2L,aACZjK,EAAQ1B,MAAIiK,QAAQ,YAC1BtJ,EAASmC,IAAI,QAAS4I,GACtB/K,EAASmC,IAAI,QAASpB,GDjBjB,SAAgBA,GACrB,IAAIkK,EAAYrL,EAAKsB,QAAQH,EAAO,SACpClB,EAAIqL,cAAcD,GAClB,IAAInJ,EAAM9B,EAASjF,IAAI,OACvB6B,EAAI,mBAAoBkF,GACxB1B,EAAM,GAIN0B,EAAI9D,QAAQ,CAACiI,EAAMhE,KACjB,IAAKgE,EAAKjE,OAAQ,OAClB,IAAImJ,EAAQvL,EAAKsB,QAAQH,EAAO,QAASkF,EAAKjF,OAC1CoK,EAAQ,IAAInL,EAAQkL,GACxBC,EAAMpK,MAAQiF,EAAKjF,MACnBoK,EAAMhG,OAASnD,EAEf7B,EAAI9B,KAAK8M,KAEXxO,EAAI,UCCJyO,CAAOtK,GAEPuK,UAAQ3J,GAAG,WAAY,CAAC4J,EAAOhJ,KAC7BD,EAASC,GACNhB,KAAK,SAASgB,GACbgJ,EAAMC,OAAOpM,KAAK,YAAamD,OAIrC+I,UAAQ3J,GAAG,YAAa,CAAC4J,EAAOE,QAOhCH,UAAQ3J,GAAG,gBAAiB,CAAC4J,EAAOE,MDiU/B,SAAmBA,GACxB7O,EAAI,gBAAiB6O,GACrB,IAAIhH,EAAKhI,IAAEiP,KAAKtL,EAAKqE,GAAcA,EAAGzD,OAASyK,GAE/C,OADA7O,EAAI,YAAa6H,EAAGzD,OACbyD,EAAGG,QAAQ,CAChBC,cAAc,EACdqE,SAAUA,EACVC,OAAQA,IACP5H,KAAK,SAAUuD,GAChB,IAAI/D,EAAQf,EAASjF,IAAI,SACrBmK,EAAOJ,EAAIlH,KAAKE,IAAIC,GAAeA,EAAIkH,KACvC0G,EAAM,GACVzG,EAAKlH,QAAQiH,IACX,IAAIlC,EAAOkC,EAAI2G,IACXC,EAAO5G,EAAIC,KAAKpH,IAAIqH,GAAgBA,EAAK0G,MACzCC,EAAMrP,IAAE6G,QAAQuI,GAAMnO,KAAK,KAG3BV,EAAM,CAAC+F,EAFE+I,EAAIrO,MAAM,KACHyE,OAAS,EAAK6J,KAAKC,UAAUF,GAAOA,GAChCpO,KAAK,KAC7BV,EAAM,CAACA,EAAK,MAAMU,KAAK,IACvBiO,GAAO3O,IAET,IAAIiP,EAAW,CAACR,EAAS,OAAO/N,KAAK,KACjCwO,EAAWtM,EAAKsB,QAAQH,EAAOkL,GACnCpM,EAAIsM,UAAUD,EAAUP,EAAK,SAASrG,GAEpC,OADA3I,QAAQC,IAAI,wBACL,OC1VTwP,CAAUX,GACPlK,KAAK,SAAUuD,GACVA,GAAYlI,EAAI,OAAQkI,GAC5ByG,EAAMC,OAAOpM,KAAK,YAAY,KAC7BiG,MAAM,SAAUC,GACjB3I,QAAQC,IAAI,MAAO0I,GACnBiG,EAAMC,OAAOpM,KAAK,YAAY,OAIpCkM,UAAQ3J,GAAG,iBAAkB,CAAC4J,EAAOpE,KACnCD,EAAUC,KAGZmE,UAAQ3J,GAAG,cAAe,CAAC4J,EAAOhJ,KDzF3BhC,EAAS8L,gBACbhH,MAAM,SAASC,GAEd,MADA1I,EAAI,mBAAoB0I,GAClB,IAAIP,MAAMO,KCyFf/D,KAAK,SAAS+K,GACb1P,EAAI,mBAAoB0P,GACxBA,EAAO7P,IAAE6H,OAAOgI,EAAMtL,GAA6B,KAAZA,EAAM,IAC7CuK,EAAMC,OAAOpM,KAAK,mBAAoBkN,KACrCjH,MAAM,SAAUC,GAEjBiG,EAAMC,OAAOpM,KAAK,oBAAoB,OAI5CkM,UAAQ3J,GAAG,YAAa,CAAC4J,EAAOvK,KAC9BrE,QAAQC,IAAI,cAAeoE,GACXpB,IAAKsB,QAAQH,EAAO,QAASC,GAC7CF,EAAUC,EAAOC,GACdO,KAAK,SAAUuD,GACdlI,EAAI,oBAAqBkI,GACzByG,EAAMC,OAAOpM,KAAK,kBAAkB,KACnCiG,MAAM,SAAUC,GACjBiG,EAAMC,OAAOpM,KAAK,kBAAkB,OAI1CkM,UAAQ3J,GAAG,YAAa,CAAC4J,EAAOpE,MDR3B,SAAmBpG,GACxB,IAAIkK,EAAYrL,EAAKsB,QAAQH,EAAO,SACpCnE,EAAI,WAAYqO,GAChB,IACEpL,EAAI0M,WAAWtB,GACfpL,EAAIqL,cAAcD,GAClBjL,EAASmC,IAAI,MAAO,IACpB,MAAOmD,GACP1I,EAAI,sBAAuB0I,ICC3BkH,CAAUzL,OAOd1B,MAAIsC,GAAG,oBAAqB,KAC1BtC,MAAIC","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","module.exports = require(\"electron\");","module.exports = require(\"lodash\");","//\n\nexport const tibsyms = {\n  tsek: '་'\n  // connective: 'འི',\n  // subordinative: 'ར', // ladon\n  // narrative: 'འོ',\n  // interrog: 'འམ',\n  // coupling: 'འི',\n  // ergative: 'ས',\n  // concessive: 'འང'\n}\n\nexport const tibsuff = ['འི', 'ར', 'འོ', 'འམ', 'འི', 'ས', 'འང']\n","module.exports = require(\"path\");","module.exports = require(\"electron-settings\");","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _message = _interopRequireDefault(require(\"./message\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _ = require('lodash');\n\nvar log = console.log;\n\nvar debug = require('debug')('app');\n\nvar d = debug; // https://iso639-3.sil.org/code_tables/639/data --> three letter codes\n// punctuation \\u002E\\u002C\\u0021\\u003A\\u003B\\u00B7 - \\u0020\\u0027 - ... middle dot, - space, apostrophe\n// parens ()[]{-/\n// \\u0028\\u0029\\u005B\\u005D\\u007B\\u007D\\u002D\\u002F\n// greek 0370-03FF 1F00–1FFF\n// diactitic 0300-036F\n// tibetan shad - ། U+0F0D : TIBETAN MARK SHAD {shey} // punctuation\n// common punctuation in this version of sband\n\nvar puncts = \"([.,!:;\\xB7\\u0F0D])\"; // san - sansktit\n\nvar coderanges = {\n  'zho': \"([\\u4E00-\\u9FFF]+)\",\n  'tib': \"([\\u0F00-\\u0FFF]+)\",\n  'grc': \"([\\u0370-\\u03FF\\u1F00-\\u1FFF\\u0300-\\u036F' ]+)\" // note: grc includes space - \\u0020\n\n};\n\nvar _default = function _default(str, code) {\n  var re = new RegExp(coderanges[code]);\n  if (!re.test(str)) return;\n  var clean = str.trim().replace(/᾽/g, \"\\'\");\n  var wopunct = clean.split(\"'\").join('');\n  if (!re.test(wopunct)) return;\n  var rep = new RegExp(puncts);\n  var rows = clean.replace(/\\r?\\n+/, '\\n').split('\\n');\n  var rclauses = rows.map(function (row) {\n    return row.split(rep);\n  });\n  var spans = [];\n  rows.forEach(function (row) {\n    var spns = [];\n    var rclauses = row.split(rep);\n    rclauses.forEach(function (rclause) {\n      if (rep.test(rclause)) {\n        var spn = {\n          text: rclause,\n          punct: true\n        };\n        spns.push(spn);\n      } else {\n        var clauses = rclause.split(re);\n        clauses = _.compact(clauses);\n        clauses.forEach(function (clause) {\n          clause = clause.trim();\n          if (!clause) return;\n          var lang = re.test(clause) ? true : false;\n          var span = {\n            text: clause\n          };\n          if (lang) span.lang = code; // span[code] = true\n          // if (lang) { }\n\n          spns.push(span);\n        });\n      }\n    });\n    spans.push(spns);\n  });\n  return spans;\n};\n\nexports.default = _default;","module.exports = require(\"debug\");","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _default = function _default() {\n  return \"new message\";\n};\n\nexports.default = _default;","module.exports = require(\"electron-is-dev\");","module.exports = require(\"pouchdb\");","module.exports = require(\"url\");","module.exports = require(\"request\");","module.exports = require(\"fs-extra\");","module.exports = require(\"glob-fs\");","module.exports = require(\"pouchdb-load\");","module.exports = require(\"highland\");","module.exports = require(\"mississippi\");","module.exports = require(\"csv2\");","module.exports = require(\"node-couchdb\");","import { app, BrowserWindow } from \"electron\";\n\nexport const libMenuTemplate = {\n  label: \"File\",\n  submenu: [\n    {  label: \"Home\",\n       accelerator: \"CmdOrCtrl+L\",\n       click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'home') } },\n    { label: \"Quit\",\n      accelerator: \"CmdOrCtrl+Q\",\n      click: () => {\n        app.quit();\n      }\n    }\n  ]\n}\n","import { app, BrowserWindow } from \"electron\";\n\nexport const aboutMenuTemplate = {\n  label: \"About\",\n  submenu: [\n    { label: \"About Pecha.js\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'about') } },\n    { label: \"Code and Download\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'code') } },\n    { label: \"License\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'license') } },\n    { label: \"Contacts\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'contacts') } },\n    { label: \"Acknowledgements\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'acknowledgements') } }\n  ]\n};\n","import { app, BrowserWindow } from \"electron\";\n\nexport const dictMenuTemplate = {\n  label: \"Dict\",\n  submenu: [\n    { label: \"Clone dicts from server\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'clonedicts') } },\n    { label: \"Arrange local dicts\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'activedicts') } },\n    { label: \"Create CSV from some texts\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'localdict') } },\n    { label: \"Import form CSV\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'csv') } },\n    { label: \"Publish new dictionary (disabled)\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'publish') } },\n    { label: \"Cleanup DBs completely\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'cleanup') } }\n  ]\n};\n","import { app, BrowserWindow } from \"electron\";\n\nexport const helpMenuTemplate = {\n  label: \"Help\",\n  submenu: [\n    { label: \"hot keys\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'help') } },\n    { label: \"Toggle DevTools\",\n      accelerator: \"Alt+CmdOrCtrl+I\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().toggleDevTools();\n      }\n    }\n  ]\n};\n","import _ from 'lodash'\nimport { tibsyms, tibsuff } from \"../lib/tibetan_data\";\n\nconst log = console.log\nconst tsek = tibsyms.tsek\n\nexport function totalKeys(pdchs) {\n  let mainKeys = _.uniq(_.flatten(pdchs))\n  let added = []\n  mainKeys.forEach(seg=>{\n    tibsuff.forEach(syl=>{\n      let resyl = new RegExp(syl+'$')\n      let poss = seg.replace(resyl, '')\n      if (seg != poss) added.push(poss)\n    })\n  })\n  return {main: mainKeys, added: added}\n  // let keys = segs.concat(added)\n  // return _.uniq(keys)\n  // return _.uniq(_.flatten(pdchs))\n}\n\nexport function segmenter(str) {\n  let segs = str.split(tsek)\n  // let depth = (segs.length < 10) ? 10 : 2\n  // let depth = (segs.length > 10) ? 7 : 100\n  let depth = 4\n  // log('SEGS', segs)\n  let old = str\n  let size = segs.length\n  let pdchs = [[segs]]\n  function rec(segs, pdch) {\n    // log('PDCH', pdch)\n    let flakes = scrape(segs)\n    flakes.forEach(flake => {\n      pdch.push(flake.head)\n      pdch.push(flake.tail)\n      // pdch = pdch.concat(flake.head)\n      // pdch = pdch.concat(flake.tail)\n      if (_.flatten(pdch).join(tsek) == old) {\n        pdchs.push(_.clone(pdch))\n        pdch.pop()\n      }\n      if (pdch.length < depth) rec(flake.tail, pdch) // three parts for now !\n      // rec(flake.tail, pdch)\n      pdch.pop()\n    })\n  }\n  rec(segs, [])\n  let cleans = []\n  pdchs.forEach(pdch=> {\n    let clean = []\n    pdch.forEach(seg=>{\n      clean.push(seg.join(tsek))\n    })\n    cleans.push(clean)\n  })\n  return cleans\n}\n\nexport function scrape(segs) {\n  // log('SEGS', segs)\n  let head, tail\n  let flakes = []\n  for (let idx = 1; idx < segs.length + 1; idx++) {\n    head = segs.slice(0, idx)\n    tail = segs.slice(idx)\n    let flake = {head: head, tail: tail}\n    if (tail.length) flakes.push(flake)\n  }\n  return flakes.reverse()\n}\n\n// export function segmenter_(str) {\n//   let old = str\n//   let pdchs = [[str]]\n//   function rec(str, pdch) {\n//     // log('PDCH', pdch)\n//     let flakes = scrape(str)\n//     flakes.forEach(flake => {\n//       pdch.push(flake.head)\n//       pdch.push(flake.tail)\n//       if (pdch.join(tsek) == old) {\n//         pdchs.push(_.clone(pdch))\n//         pdch.pop()\n//       }\n//       if (pdch.length < 5) rec(flake.tail, pdch) // three parts for now !\n//       // rec(flake.tail, pdch)\n//       pdch.pop()\n//     })\n//   }\n//   rec(str, [])\n//   return pdchs\n// }\n\n// export function scrape_(str) {\n//   let segs = str.split(tsek)\n//   let head, tail\n//   let flakes = []\n//   for (let idx = 1; idx < segs.length + 1; idx++) {\n//     head = segs.slice(0, idx).join(tsek)\n//     tail = segs.slice(idx).join(tsek)\n//     let flake = {head: head, tail: tail}\n//     if (tail) flakes.push(flake)\n//   }\n//   return flakes.reverse()\n// }\n\n// export function totalKeys_(pdchs) {\n//   let segs = _.uniq(_.flatten(pdchs))\n//   let added = []\n//   segs.forEach(seg=>{\n//     tibsyls.forEach(syl=>{\n//       let resyl = new RegExp(syl+'$')\n//       let poss = seg.replace(resyl, '')\n//       if (seg != poss) added.push(poss)\n//     })\n//   })\n//   let keys = segs.concat(added)\n//   return _.uniq(keys)\n// }\n","//\n\nimport _ from 'lodash'\nimport sband from '../../../../sband'\nimport { segmenter, totalKeys } from \"./segmenter\";\nimport { tibsyms, tibsuff } from \"../lib/tibetan_data\";\nconst tsek = tibsyms.tsek\nlet retsek = new RegExp(tsek+'$')\n\nconst request = require('request')\nconst path = require('path')\nconst fse = require('fs-extra')\nlet glob = require('glob-fs')({ gitignore: true })\n\nconst isDev = require('electron-is-dev')\nconst settings = require('electron-settings')\nconst PouchDB = require('pouchdb')\nPouchDB.plugin(require('pouchdb-load'));\n\nconst log = console.log\nlet debug = require('debug')\n// let log = debug('app')\n// let d = debug('app')\nlet H = require('highland');\nlet miss = require('mississippi');\nlet csv2 = require('csv2');\n\n\nlet code = 'tib'\nlet dbs = []\nlet test = 'ཀྱི་བསླབ་པ'\nlet test2 = 'ཀྱི་བསླབ་པ་དང'\nlet rekuku = /༈/\n\nconst NodeCouchDb = require('node-couchdb');\nconst couch = new NodeCouchDb()\n\nconst diglossa = new NodeCouchDb({\n  host: 'diglossa.org',\n  protocol: 'http',\n  port: 5984,\n  auth: {\n    user: 'guest',\n    pass: 'guest'\n  }\n})\n\nexport function remoteDicts() {\n  return diglossa.listDatabases()\n    .catch(function(err) {\n      log('REMOTE DICTS ERR', err)\n      throw new Error(err)\n    })\n}\n\nexport function replicate(upath, dname) {\n  let localpath = path.resolve(upath, 'pouch', dname)\n  let localDB = new PouchDB(localpath)\n  let dumppath = ['http://diglossa.org/dump-', dname].join('')\n  let remotepath = ['http://diglossa.org:5984/', dname].join('')\n  log('REPLICATE START', localpath, remotepath)\n\n  return localDB.load(dumppath)\n    .then(function() {\n      let opts = { live: true, retry: true }\n      log('P: REPL DONE before sync')\n      localDB.sync(remotepath, opts)\n        .on('change', onSyncChange)\n        // .on('paused', onSyncPaused)\n        .on('error', onSyncError)\n        // .on('complete', function(dname, localDB) {\n        //   log('P: REPL __COMPLETE__START, dname', dname)\n        //   localDB.dname = dname\n        //   dbs.push(localDB)\n        //   let cfg = XXX setCfg()\n        //   log('P: REPL __COMPLETE__, new cfg', cfg)\n        // })\n      dbs.push(localDB)\n      let cfg = setCfg(upath, dname, remotepath)\n      log('P: REPL __COMPLETE__, new cfg', cfg)\n    })\n}\n\nfunction onSyncChange(data) { log('onSyncChange', data) }\nfunction onSyncPaused() { log('onSyncPaused') }\nfunction onSyncError() { log('onSyncError') }\n\nexport function setDBs(upath) {\n  let pouchpath = path.resolve(upath, 'pouch')\n  fse.ensureDirSync(pouchpath)\n  let cfg = settings.get('cfg')\n  log('setting dbs, cfg', cfg)\n  dbs = []\n  // let dbnames = _.compact(cfg.map(dict => { return (dict.active) ? dict.name : null }))\n  // log('setDBNS', dbnames)\n  let opts = { live: true, retry: true }\n  cfg.forEach((dict, idx) => {\n    if (!dict.active) return\n    let dpath = path.resolve(upath, 'pouch', dict.dname)\n    let pouch = new PouchDB(dpath)\n    pouch.dname = dict.dname\n    pouch.weight = idx\n    // pouch.sync(dict.remotepath, opts) // cannot read preperty once of undefined\n    dbs.push(pouch)\n  })\n  log('DBS ok')\n  // return dbnames\n}\n\nfunction setCfg(upath, dname, remotepath) {\n  let cfg = settings.get('cfg') || []\n  if (!dname) return cfg\n  let newdict = {dname: dname, sync: remotepath, active: true, idx: cfg.length}\n  cfg.push(newdict)\n  settings.set('cfg', cfg)\n  log('== setCFG ==', cfg)\n  return cfg\n}\n\n// function setCfg_(upath) {\n//   log('P: setCfg start')\n//   let pouchpath = path.resolve(upath, 'pouch')\n//   fse.ensureDirSync(pouchpath)\n//   let fns = fse.readdirSync(pouchpath)\n//   // log('FNS', fns)\n//   let oldcfg = settings.get('cfg') || []\n//   // log('OLDCFG', oldcfg)\n//   let cfg = []\n//   fns.forEach((dn, idx) => {\n//     let old = _.find(oldcfg, dict=> {return dict.name == dn })\n//     // log('OLD', old)\n//     if (old) cfg.push(old)\n//     else {\n//       let newdict = {name: dn, active: true, idx: 100+idx}\n//       cfg.push(newdict)\n//     }\n//   })\n//   cfg = _.sortBy(cfg, 'idx')\n//   cfg.forEach((dict, idx)=> { dict.idx = idx })\n//   settings.set('cfg', cfg)\n//   log('== setCFG ==', cfg)\n//   return cfg\n// }\n\n// export function initDBs(upath) {\n//   let cfg = settings.get('cfg')\n//   setDBs(upath, cfg)\n// }\n\nexport function infoDB(localpath) {\n  let localDB = new PouchDB(localpath)\n  return localDB.info()\n}\n\nexport function cleanupDB(upath) {\n  let pouchpath = path.resolve(upath, 'pouch')\n  log('CLEAN UP', pouchpath)\n  try {\n    fse.removeSync(pouchpath)\n    fse.ensureDirSync(pouchpath)\n    settings.set('cfg', [])\n  } catch (err) {\n    log('ERR re-creating DBs', err)\n    // app.quit()\n  }\n}\n\nexport function queryDBs (query) {\n  // log('QUERY->', query.str)\n  let clean = query.str.replace(rekuku, '')\n\n  let pdchs = segmenter(query.str)\n  let keys\n  let keyres = totalKeys(pdchs)\n  if (query.compound) keys = _.filter(keyres.main, key=> { return key != query.str})\n  else keys =  _.uniq(keyres.main.concat(keyres.added))\n  // log('KEYS->', keys.length)\n  let dnames = dbs.map(db=> { return db.dname })\n  log('QUERY DNAMES', dnames)\n\n  return Promise.all(dbs.map(function (db) {\n    return db.allDocs({\n      keys: keys,\n      include_docs: true\n    })\n      .then(function (res) {\n        if (!res || !res.rows) throw new Error('no dbn result')\n        let rdocs = _.compact(res.rows.map(row => { return row.doc }))\n        let docs = _.flatten(_.compact(rdocs.map(rdoc => { return rdoc.docs })))\n        docs.forEach(doc => { doc.dname = db.dname, doc.weight = db.weight })\n        // log('DOCS->', docs.length)\n        return docs\n      })\n      .catch(function (err) {\n        console.log('ERR GET DBs', err)\n      })\n  }))\n    .then(function (res) {\n      // log('======RES', res.length)\n      let docs =_.flatten(res)\n      // log('======DOCS', docs.length)\n      let chain = compactDocs(docs, pdchs)\n      // log('======CHAIN', chain)\n      query.chain = chain\n      return query\n      // return chain\n    })\n}\n\nfunction selectTib(datapath, files) {\n  let tibs = []\n  let tibkey = {}\n  files.forEach(file => {\n    let fpath = path.resolve(datapath, file)\n    let text = fse.readFileSync(fpath,'utf8').trim()\n    let rows = text.split('\\n')\n    rows = _.compact(rows)\n    rows.forEach((row, idx)=> {\n      let clean = cleanStr(row)\n      // if (idx > 0) return\n      let gpars = sband(clean, code)\n      gpars.forEach(gpar=> {\n        gpar.forEach(span=> {\n          if (span.lang != code) return\n          let wfs = span.text.split(' ')\n          wfs.forEach(wf=> {\n            wf = wf.replace(retsek, '')\n            if (tibkey[wf]) return\n            tibs.push(wf)\n            tibkey[wf] = true\n          })\n        })\n      })\n    })\n  })\n  return tibs\n}\n\nfunction cleanStr(row) {\n  let clean = row.trim()\n  clean = clean.trim().replace(/\\.$/, '')\n  return clean\n}\n\n// let query = {keys: keys, pdchs: pdchs, compound: compound, lastsek: lastsek}\nexport function compactDocs(docs, pdchs) {\n  let res = makeChains(pdchs, docs)\n  let chains = res.chains\n  // log('FULL, CHAINS', res.full, chains.length, chains)\n  let chain\n  if (chains.length > 1) chain = commonParts(chains)\n  else if (chains.length == 1) chain = chains[0]\n  return chain\n}\n\n\nfunction commonParts(chains) {\n  let first = chains[0]\n  let clean = []\n  let ambitmp\n  for (let idx = 0; idx < first.length; idx++) {\n    let segs = chains.map(segs=> { return segs[idx].seg })\n    if (_.uniq(segs).length == 1) {\n      clean.push(first[idx])\n      ambitmp = null\n    } else {\n      if (!ambitmp) ambitmp = {ambi: true, seg: '', docs: []}, clean.push(ambitmp)\n      let segdocs = chains.map(segs=> { return {seg: segs[idx].seg, docs: segs[idx].docs}  })\n      ambitmp.docs.push(segdocs)\n    }\n  }\n  let ambis = _.filter(clean, seg=> { return seg.ambi })\n  ambis.forEach(ambi=>{\n    let first = ambi.docs[0]\n    let chains = []\n    for (let idx = 0; idx < first.length; idx++) {\n      let chain = ambi.docs.map(adocs=> { return adocs[idx] })\n      chains.push(chain)\n    }\n    ambi.chains = chains\n    let chain = chains[0]\n    ambi.seg = chain.map(seg=>{ return seg.seg}).join(tsek)\n  })\n  // log('___AMBIS___', ambis)\n  return clean\n}\n\nfunction makeChains(pdchs, docs) {\n  let chains = []\n  let fulls = []\n  pdchs.forEach(segs=>{\n    let chain = []\n    let any = false\n    let full = true\n    segs.forEach(seg=>{\n      let segdocs = _.filter(docs, doc => { return startWith(seg, doc.dict) })\n      if (segdocs.length) any = true\n      if (!segdocs.length) full = false\n      let doc = {seg: seg, docs: segdocs}\n      chain.push(doc)\n    })\n    if (any) chains.push(chain)\n    if (full) fulls.push(chain)\n  })\n  // здесь full только для справки, убрать!!!\n  let bests, full\n  if (fulls.length) bests = selectBests(fulls), full = true\n  else bests = selectBests(chains)\n  return {chains: bests, full: full}\n}\n\nfunction selectBests(chains) {\n  let max = _.max(chains.map(chain => {  return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length } ) )\n  // log('MAX', max)\n  let longests = _.filter(chains, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length >= max - 1 })\n  // longests = _.sortBy(longests, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length }).reverse()\n  // log('LNGST', longests)\n  // return longests\n\n  // // квадраты - выберет более равномерное деление, да, но отбросит тоже хорошие\n  // let max = _.max(chains.map(chain => {  return _.sum(chain.map(segment => { return segment.docs.length ? Math.pow(segment.seg.length, 2) : 0 }))/chain.length } ) )\n  // // log('MAX', max)\n  // let longests = _.filter(chains, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? Math.pow(segment.seg.length, 2) : 0 }))/chain.length >= max - 10 })\n\n  let min = _.min(longests.map(chain => {  return chain.length } ) )\n  // log('MIN', min)\n  let shortests  = _.filter(longests, chain => { return chain.length == min })\n  return shortests\n  // let maxlong = _.max(longests.map(chain => {  return chain.length } ) )\n  // // log('maxlong', maxlong)\n  // longests  = _.filter(longests, chain => { return chain.length == maxlong })\n  // return longests\n}\n\nfunction startWith(str, head) {\n  if (str == head) return true\n  let reh = new RegExp('^' + head)\n  let tail = str.replace(reh, '')\n  return (str != tail && tibsuff.includes(tail)) ?  true : false\n}\n\nfunction fullChains(chains) {\n  let fulls = []\n  chains.forEach(segs => {\n    let full = true\n    segs.forEach(seg => {\n      if (!seg.docs.length) full = false\n    })\n    if (full) fulls.push(segs)\n  })\n  return fulls\n}\n\n// =====================\n\nlet dicts = []\nlet tmpdicts = []\nlet qs = []\n\nexport function localDict(datapath) {\n  log('LOCAL', datapath)\n  datapath = path.resolve(__dirname, datapath)\n  let files = glob.readdirSync('**/*\\.tib*', {cwd: datapath})\n  files = _.uniq(files)\n  // log('LOCAL DICT', datapath)\n  // log('F', files)\n  let wfs = selectTib(datapath, files)\n  log('WFS', wfs.length)\n  let queries = wfs.map(wf=> { return {str: wf}})\n  queries = queries.slice(0, 3)\n  log('QS2', queries)\n\n  recQuery(queries)\n}\n\nfunction recQuery(queries) {\n  let rs = miss.from.obj(queries)\n  let ws = miss.to.obj(write, flush)\n  let  streamDB = miss.through.obj( // TODO parallel\n    function (chunk, enc, cb) {\n      queryDBs(chunk)\n        .then(function(query) {\n          cb(null, query)\n        })\n    },\n    // function (cb) {\n    //   cb(null, 'ONE LAST BIT OF UPPERCASE')\n    // }\n  )\n\n  miss.pipe(rs, streamDB, ws, function (err) {\n    if (err) return console.error('Copy error!', err)\n    console.log('Copied successfully')\n  })\n}\n\nfunction write (data, enc, cb) {\n  // log('writing', JSON.stringify(data))\n  log('_dbres_:', data)\n  if (!data.chain) return cb()\n  data.chain.forEach(seg=> {\n    if (seg.docs.length) dicts.push(seg.seg)\n    else qs.push(seg.seg)\n  })\n  cb()\n}\n\nfunction flush (cb) {\n  // i am called before finish is emitted\n  qs = _.uniq(qs)\n  dicts = _.uniq(dicts)\n  if (tmpdicts.length == dicts.length)  return log('__VERY END__', dicts)\n  else tmpdicts.length = dicts.length\n  log('FLUSH: DICTS', dicts.length, 'QS', qs)\n  if (qs.length) {\n    let queries = qs.map(qs=> { return {str: qs}})\n    recQuery(queries)\n  } else {\n    log('____THE END____')\n  }\n}\n\n// потом в рекурсию\n// function localQueries(queries) {\n//   queries.forEach(query=> {\n//     queryDBs (query)\n//   })\n// }\n\n// =============== CSV\n\nexport function importCSV(csvname) {\n  log('IMPORT CSV', csvname)\n\n  // добавить обработку # сомментариев\n  fse.createReadStream(csvname)\n      .pipe(csv2())\n      .on('data', console.log)\n}\n\nlet startkey =  'ཀ'\nlet endkey = '\\ufff0'\n\nexport function exportCSV(csvname) {\n  log('export to CSV', csvname)\n  let db = _.find(dbs, db=> { return db.dname == csvname })\n  log('export DB', db.dname)\n  return db.allDocs({\n    include_docs: true,\n    startkey: startkey,\n    endkey: endkey\n  }).then(function (res) {\n    let upath = settings.get('upath')\n    let docs = res.rows.map(row=> { return row.doc })\n    let csv = ''\n    docs.forEach(doc=> {\n      let head = doc._id\n      let trns = doc.docs.map(rdoc=> { return rdoc.trns })\n      let trn = _.flatten(trns).join(';')\n      let commas = trn.split(',')\n      let value = (commas.length > 1) ? JSON.stringify(trn) : trn\n      let str = [head, value].join(',')\n      str = [str, '\\n'].join('')\n      csv += str\n    })\n    let filename = [csvname, 'csv'].join('.')\n    let filepath = path.resolve(upath, filename)\n    fse.writeFile(filepath, csv, function(err) {\n      console.log(\"The file was saved!\");\n      return true\n    })\n  })\n}\n","// This is main process of Electron, started as first thing when your\n// app starts. It runs through entire life of your application.\n// It doesn't have any windows which you can see on screen, but we can open\n// window from here.\n\nimport _ from 'lodash'\nimport path from \"path\";\nimport url from \"url\"\nimport { app, BrowserWindow, Menu, ipcMain, globalShortcut } from \"electron\"\nimport { libMenuTemplate } from \"./menu/lib_menu_template\"\nimport { aboutMenuTemplate } from \"./menu/about_menu_template\"\nimport { dictMenuTemplate } from \"./menu/dict_menu_template\"\nimport { helpMenuTemplate } from \"./menu/help_menu_template\"\n\nimport { setDBs, replicate, infoDB, remoteDicts, queryDBs, localDict, importCSV, exportCSV, cleanupDB } from \"./dbs/pouch\"\n\nimport { devMenuTemplate } from \"./menu/dev_menu_template\"\nimport { editMenuTemplate } from \"./menu/edit_menu_template\"\n// import createWindow from \"./helpers/window\"\nconst settings = require('electron-settings')\n// const windowStateKeeper = require('electron-window-state')\nconst log = console.log\n\n// Special module holding environment variables which you declared\n// in config/env_xxx.json file.\nimport env from \"env\"\n\nconst setApplicationMenu = () => {\n  // const menus = [libMenuTemplate, fileMenuTemplate, aboutMenuTemplate, authMenuTemplate, helpMenuTemplate]\n  // const menus = [libMenuTemplate, aboutMenuTemplate, helpMenuTemplate]\n  const menus = [libMenuTemplate, dictMenuTemplate, aboutMenuTemplate, helpMenuTemplate]\n  if (env.name !== \"production\") {\n    // menus.push(devMenuTemplate)\n  }\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus))\n}\n\n// Save userData in separate folders for each environment.\n// Thanks to this you can use production and development versions of the app\n// on same machine like those are two separate apps.\nif (env.name !== \"production\") {\n  const userDataPath = app.getPath(\"userData\")\n  app.setPath(\"userData\", `${userDataPath} (${env.name})`)\n}\n\napp.on(\"ready\", () => {\n  setApplicationMenu()\n\n  // let mainWindowState = windowStateKeeper({\n  //   defaultWidth: 1000,\n  //   defaultHeight: 800\n  // })\n\n  let opts = {webPreferences: {\n    nodeIntegration: true\n  }}\n\n  // Object.assign(opts, winBounds)\n\n  const win = new BrowserWindow(opts)\n\n  let winBounds = settings.get('winBounds') || win.getBounds()\n  winBounds.y -= 21\n  log('winBounds', winBounds)\n\n  win.setBounds(winBounds)\n\n  win.loadURL(\n    url.format({\n      pathname: path.join(__dirname, \"app.html\"),\n      protocol: \"file:\",\n      slashes: true\n    })\n  )\n\n  if (env.name === \"development\") {\n    win.openDevTools()\n  }\n\n  win.webContents.on('did-finish-load', () => {\n    let pckg = require('../package.json')\n    let name = pckg.name\n    let version = pckg.version\n    // let aversion = pckg.dependencies.antrax.replace('^', '')\n    win.webContents.send('version', version )\n    win.setTitle([name, 'v.', version].join(' '))\n  })\n\n  win.on('resize', function () {\n    win.webContents.send('reload')\n  })\n\n  win.on('close', () => {\n    settings.set('winBounds', win.getBounds())\n  })\n\n  // globalShortcut.register('CommandOrControl+R', () => win.webContents.send('reread'))\n  // globalShortcut.register('CommandOrControl+R', () => win.reload())\n  globalShortcut.register('CommandOrControl+Shift+R', () => win.reload())\n  // globalShortcut.register('CommandOrControl+R', () => win.reload())\n\n  const apath = app.getAppPath()\n  const upath = app.getPath(\"userData\")\n  settings.set('apath', apath)\n  settings.set('upath', upath)\n\n  setDBs(upath)\n\n  ipcMain.on('queryDBs', (event, query) => {\n    queryDBs(query)\n      .then(function(query) {\n        event.sender.send('replayDBs', query)\n      })\n  })\n\n  ipcMain.on('importcsv', (event, csvname) => {\n    // importCSV(csvname)\n      // .then(function(res) {\n      //   // event.sender.send('XXX', res)\n      // })\n  })\n\n  ipcMain.on('export-to-csv', (event, csvname) => {\n    exportCSV(csvname)\n      .then(function (res) {\n        if (res)        log('DOCS', res)\n        event.sender.send('csvReply', true)\n      }).catch(function (err) {\n        console.log('ERR', err);\n        event.sender.send('csvReply', false)\n      });\n  })\n\n  ipcMain.on('queryLocalDict', (event, datapath) => {\n    localDict(datapath)\n  })\n\n  ipcMain.on('remoteDicts', (event, query) => {\n    // log('B: REMOTE DICTS START')\n    remoteDicts()\n      .then(function(rdbs) {\n        log('B: REMOTE DICTS:', rdbs)\n        rdbs = _.filter(rdbs, dname=> { return dname[0] != '_' })\n        event.sender.send('remoteDictsReply', rdbs)\n      }).catch(function (err) {\n        // log('B: REMOTE DICTS ERR')\n        event.sender.send('remoteDictsReply', false)\n      });\n  })\n\n  ipcMain.on('replicate', (event, dname) => {\n    console.log('B:REPLICATE', dname)\n    let localpath = path.resolve(upath, 'pouch', dname)\n    replicate(upath, dname)\n      .then(function (res) {\n        log('B: replicate done', res)\n        event.sender.send('replicateReply', true)\n      }).catch(function (err) {\n        event.sender.send('replicateReply', false)\n      });\n  })\n\n  ipcMain.on('cleanupDB', (event, datapath) => {\n    cleanupDB(upath)\n  })\n\n\n\n})\n\napp.on(\"window-all-closed\", () => {\n  app.quit()\n})\n"],"sourceRoot":""}