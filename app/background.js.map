{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"lodash\"","webpack:///./src/lib/tibetan_data.js","webpack:///external \"path\"","webpack:///external \"speckled-band\"","webpack:///external \"electron-settings\"","webpack:///external \"electron-is-dev\"","webpack:///external \"fs-extra\"","webpack:///external \"pouchdb\"","webpack:///external \"pouchdb-load\"","webpack:///external \"url\"","webpack:///external \"mississippi\"","webpack:///external \"fast-csv\"","webpack:///external \"stream\"","webpack:///external \"glob\"","webpack:///external \"pouch-remote-stream\"","webpack:///external \"debug\"","webpack:///external \"csv2\"","webpack:///external \"node-couchdb\"","webpack:///./src/menu/lib_menu_template.js","webpack:///./src/menu/about_menu_template.js","webpack:///./src/menu/dict_menu_template.js","webpack:///./src/menu/help_menu_template.js","webpack:///./src/dbs/segmenter.js","webpack:///./src/dbs/csv2pouch.js","webpack:///./src/dbs/pouch.js","webpack:///./src/background.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__webpack_exports__","tibsyms","tibsuff","tsek","libMenuTemplate","label","submenu","accelerator","click","BrowserWindow","getFocusedWindow","webContents","send","app","quit","aboutMenuTemplate","dictMenuTemplate","helpMenuTemplate","toggleDevTools","console","log","fse","miss","csv","path","PouchDB","stream","retsek","RegExp","glob","settings","plugin","Remote","adapter","dbs","code","startkey","endkey","NodeCouchDb","diglossa","host","protocol","port","auth","user","pass","onSyncChange","data","onSyncError","ensureCfg","upath","cfg","forEach","dict","idx","active","dpath","resolve","dname","pouch","weight","push","map","db","setDBs","set","pouchpath","ensureDirSync","setCfg","_","find","newdict","length","queryDBs","query","keys","pdchs","str","segs","split","depth","old","rec","pdch","head","tail","flakes","slice","flake","reverse","scrape","flatten","join","clone","pop","cleans","clean","seg","segmenter","keyres","mainKeys","uniq","added","syl","resyl","poss","replace","main","totalKeys","compound","filter","concat","Promise","all","allDocs","include_docs","then","res","rows","Error","rdocs","compact","row","doc","docs","rdoc","catch","err","chain","chains","bests","full","fulls","any","segdocs","reh","includes","startWith","selectBests","makeChains","ambitmp","first","ambi","adocs","commonParts","compactDocs","max","sum","segment","longests","min","localDictPath","dicts","scanLocalDict","datapath","dictpath","__dirname","cwd","nodir","files","queries","tibs","tibkey","fname","fpath","readFileSync","trim","cleanStr","gpars","sband","gpar","span","lang","text","wf","selectTib","removeSync","aquery","sec","appendFile","saveChunk","recQuery","decide","importCSV","jsonpath","cb","readJson","manifest","dbpath","descr","readJsonSync","_id","dirpath","parse","dir","csvpath","rs","createReadStream","csvStream","comment","ignoreEmpty","on","row2doc","through","obj","enc","trns","emptyDirSync","buff","pouchPushStream","Writable","constructor","options","super","this","_write","chunk","encoding","next","bulkDocs","objectMode","highWaterMark","pipe","put","csv2pouch","csvDB","delCfg","env","userDataPath","getPath","setPath","menus","Menu","setApplicationMenu","buildFromTemplate","win","webPreferences","nodeIntegration","winBounds","getBounds","y","setBounds","loadURL","url","format","pathname","slashes","openDevTools","pckg","version","setTitle","globalShortcut","register","reload","apath","getAppPath","ipcMain","event","info","infoDB","sender","csvname","trn","JSON","stringify","filename","filepath","manipath","writeFile","writeJson","error","exportCSV","listDatabases","dnames","remotepath","db_name","size","doc_count","rdbs","localpath","localDB","dumppath","load","sync","live","retry","replicate","cleanupDB"],"mappings":"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","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","module.exports = require(\"electron\");","module.exports = require(\"lodash\");","//\n\nexport const tibsyms = {\n  tsek: '་'\n  // connective: 'འི',\n  // subordinative: 'ར', // ladon\n  // narrative: 'འོ',\n  // interrog: 'འམ',\n  // coupling: 'འི',\n  // ergative: 'ས',\n  // concessive: 'འང'\n}\n\nexport const tibsuff = ['འི', 'ར', 'འོ', 'འམ', 'འི', 'ས', 'འང']\n","module.exports = require(\"path\");","module.exports = require(\"speckled-band\");","module.exports = require(\"electron-settings\");","module.exports = require(\"electron-is-dev\");","module.exports = require(\"fs-extra\");","module.exports = require(\"pouchdb\");","module.exports = require(\"pouchdb-load\");","module.exports = require(\"url\");","module.exports = require(\"mississippi\");","module.exports = require(\"fast-csv\");","module.exports = require(\"stream\");","module.exports = require(\"glob\");","module.exports = require(\"pouch-remote-stream\");","module.exports = require(\"debug\");","module.exports = require(\"csv2\");","module.exports = require(\"node-couchdb\");","import { app, BrowserWindow } from \"electron\";\n\nexport const libMenuTemplate = {\n  label: \"File\",\n  submenu: [\n    {  label: \"Home\",\n       accelerator: \"CmdOrCtrl+L\",\n       click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'home') } },\n    { label: \"Quit\",\n      accelerator: \"CmdOrCtrl+Q\",\n      click: () => {\n        app.quit();\n      }\n    }\n  ]\n}\n","import { app, BrowserWindow } from \"electron\";\n\nexport const aboutMenuTemplate = {\n  label: \"About\",\n  submenu: [\n    { label: \"About Pecha.js\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'about') } },\n    { label: \"Code and Download\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'code') } },\n    { label: \"License\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'license') } },\n    { label: \"Contacts\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'contacts') } },\n    { label: \"Acknowledgements\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'acknowledgements') } }\n  ]\n};\n","import { app, BrowserWindow } from \"electron\";\n\nexport const dictMenuTemplate = {\n  label: \"Dict\",\n  submenu: [\n    { label: \"Clone dicts from server\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'clonedicts') } },\n    { label: \"Import form CSV\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'csv') } },\n    { label: \"Arrange local dicts\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'activedicts') } },\n    { label: \"Create CSV from some texts\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'localdict') } },\n    { label: \"Publish new dictionary (disabled)\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'publish') } },\n    { label: \"Cleanup DBs completely\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'cleanup') } }\n  ]\n};\n","import { app, BrowserWindow } from \"electron\";\n\nexport const helpMenuTemplate = {\n  label: \"Help\",\n  submenu: [\n    { label: \"hot keys\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'help') } },\n    { label: \"Toggle DevTools\",\n      accelerator: \"Alt+CmdOrCtrl+I\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().toggleDevTools();\n      }\n    }\n  ]\n};\n","import _ from 'lodash'\nimport { tibsyms, tibsuff } from \"../lib/tibetan_data\";\n\nconst log = console.log\nconst tsek = tibsyms.tsek\n\nexport function totalKeys(pdchs) {\n  let mainKeys = _.uniq(_.flatten(pdchs))\n  let added = []\n  mainKeys.forEach(seg=>{\n    tibsuff.forEach(syl=>{\n      let resyl = new RegExp(syl+'$')\n      let poss = seg.replace(resyl, '')\n      if (seg != poss) added.push(poss)\n    })\n  })\n  return {main: mainKeys, added: added}\n  // let keys = segs.concat(added)\n  // return _.uniq(keys)\n  // return _.uniq(_.flatten(pdchs))\n}\n\nexport function segmenter(str) {\n  let segs = str.split(tsek)\n  // let depth = (segs.length < 10) ? 10 : 2\n  // let depth = (segs.length > 10) ? 7 : 100\n  let depth = 4\n  // log('SEGS', segs)\n  let old = str\n  let size = segs.length\n  let pdchs = [[segs]]\n  function rec(segs, pdch) {\n    // log('PDCH', pdch)\n    let flakes = scrape(segs)\n    flakes.forEach(flake => {\n      pdch.push(flake.head)\n      pdch.push(flake.tail)\n      // pdch = pdch.concat(flake.head)\n      // pdch = pdch.concat(flake.tail)\n      if (_.flatten(pdch).join(tsek) == old) {\n        pdchs.push(_.clone(pdch))\n        pdch.pop()\n      }\n      if (pdch.length < depth) rec(flake.tail, pdch) // three parts for now !\n      // rec(flake.tail, pdch)\n      pdch.pop()\n    })\n  }\n  rec(segs, [])\n  let cleans = []\n  pdchs.forEach(pdch=> {\n    let clean = []\n    pdch.forEach(seg=>{\n      clean.push(seg.join(tsek))\n    })\n    cleans.push(clean)\n  })\n  return cleans\n}\n\nexport function scrape(segs) {\n  // log('SEGS', segs)\n  let head, tail\n  let flakes = []\n  for (let idx = 1; idx < segs.length + 1; idx++) {\n    head = segs.slice(0, idx)\n    tail = segs.slice(idx)\n    let flake = {head: head, tail: tail}\n    if (tail.length) flakes.push(flake)\n  }\n  return flakes.reverse()\n}\n\n// export function segmenter_(str) {\n//   let old = str\n//   let pdchs = [[str]]\n//   function rec(str, pdch) {\n//     // log('PDCH', pdch)\n//     let flakes = scrape(str)\n//     flakes.forEach(flake => {\n//       pdch.push(flake.head)\n//       pdch.push(flake.tail)\n//       if (pdch.join(tsek) == old) {\n//         pdchs.push(_.clone(pdch))\n//         pdch.pop()\n//       }\n//       if (pdch.length < 5) rec(flake.tail, pdch) // three parts for now !\n//       // rec(flake.tail, pdch)\n//       pdch.pop()\n//     })\n//   }\n//   rec(str, [])\n//   return pdchs\n// }\n\n// export function scrape_(str) {\n//   let segs = str.split(tsek)\n//   let head, tail\n//   let flakes = []\n//   for (let idx = 1; idx < segs.length + 1; idx++) {\n//     head = segs.slice(0, idx).join(tsek)\n//     tail = segs.slice(idx).join(tsek)\n//     let flake = {head: head, tail: tail}\n//     if (tail) flakes.push(flake)\n//   }\n//   return flakes.reverse()\n// }\n\n// export function totalKeys_(pdchs) {\n//   let segs = _.uniq(_.flatten(pdchs))\n//   let added = []\n//   segs.forEach(seg=>{\n//     tibsyls.forEach(syl=>{\n//       let resyl = new RegExp(syl+'$')\n//       let poss = seg.replace(resyl, '')\n//       if (seg != poss) added.push(poss)\n//     })\n//   })\n//   let keys = segs.concat(added)\n//   return _.uniq(keys)\n// }\n","//\n\nconst log = console.log\nconst fse = require('fs-extra')\nconst miss = require('mississippi')\nconst csv = require(\"fast-csv\");\nconst path = require('path')\nconst PouchDB = require('pouchdb')\nconst stream = require(\"stream\")\n\nlet tsek = '་'\nlet retsek = new RegExp(tsek+'$')\n\nexport function csv2pouch(jsonpath, dbpath) {\n  let descr = fse.readJsonSync(jsonpath)\n  descr._id = 'description'\n  let dirpath = path.parse(jsonpath).dir\n  // let name = path.parse(jsonpath).name\n  // let csvname = [path.parse(jsonpath).name, 'csv'].join('.')\n  let csvpath = path.resolve(dirpath, descr.path)\n  let rs = fse.createReadStream(csvpath);\n\n  let csvopts = {\n    comment: '#',\n    trim: true,\n    ignoreEmpty: true\n  }\n\n  let csvStream = csv(csvopts)\n      .on(\"end\", function(){\n        // log(\"CSV end\");\n      });\n\n  const row2doc = miss.through.obj(\n    function (row, enc, cb) {\n      let dict = row[0].replace(retsek, '')\n      let mdoc = {dict: dict, trns: row.slice(1).join('').trim().split('; ') }\n      let doc = {_id: dict, docs: [mdoc] }\n      cb(null, doc)\n    }\n  )\n\n  // let dbpath = path.resolve(dirpath, 'db-stream')\n  // let ws = fse.createWriteStream(dbpath)\n\n  fse.emptyDirSync(dbpath)\n  let db = new PouchDB(dbpath)\n\n  let streamopts = {\n    objectMode: true,\n    highWaterMark: 3\n  }\n\n  let buff = []\n\n  class myWritable extends stream.Writable {\n    constructor(options){\n      super(options)\n      this.buff = []\n    }\n\n    _write(chunk, encoding, next){\n      if (buff.length < 2) {\n        buff.push(chunk)\n        next()\n      } else {\n        buff.push(chunk)\n        db.bulkDocs(buff)\n          .then(function(res) {\n            buff = []\n            next()\n          })\n          .catch(function (err) {\n            next(err, null)\n          });\n      }\n    }\n  }\n\n  let pouchPushStream = new myWritable(streamopts)\n\n  return rs.pipe(csvStream).pipe(row2doc).pipe(pouchPushStream)\n    .on('finish', function (err) {\n      return db.bulkDocs(buff)\n        .then(function() {\n          db.put(descr)\n        })\n        .catch(function (err) {\n          log('PUT DESCR ERR', err)\n        });\n\n    })\n    .on('error', function(err) {\n      log('__stream final_err', err)\n    })\n}\n","//\n\nimport _ from 'lodash'\n// import sband from '../../../../sband'\nimport sband from \"speckled-band\"\nimport { segmenter, totalKeys } from \"./segmenter\";\nimport { tibsyms, tibsuff } from \"../lib/tibetan_data\";\nimport { csv2pouch } from './csv2pouch'\n\nconst tsek = tibsyms.tsek\nlet retsek = new RegExp(tsek+'$')\n\n// const JSON = require('json5')\n// require('json5/lib/register')\n\n// const request = require('request')\nconst path = require('path')\nconst fse = require('fs-extra')\nlet glob = require(\"glob\")\n\nconst isDev = require('electron-is-dev')\nconst settings = require('electron-settings')\nlet PouchDB = require('pouchdb')\nlet load = require('pouchdb-load');\nPouchDB.plugin(require('pouchdb-load'));\n\nlet Remote = require('pouch-remote-stream');\nPouchDB.adapter('remote', Remote.adapter);\n\nconst log = console.log\nlet debug = require('debug')\n// let d = debug('app')\n// let miss = require('mississippi');\nlet csv2 = require('csv2');\n\nlet dbs = []\nlet code = 'tib'\nlet startkey =  'ཀ'\nlet endkey = '\\ufff0'\n// let csvDB\n\nconst NodeCouchDb = require('node-couchdb');\nconst couch = new NodeCouchDb()\n\nconst diglossa = new NodeCouchDb({\n  host: 'diglossa.org',\n  protocol: 'http',\n  port: 5984,\n  auth: {\n    user: 'guest',\n    pass: 'guest'\n  }\n})\n\nexport function remoteDicts() {\n  return diglossa.listDatabases()\n    .then(function(dnames) {\n      return Promise.all(dnames.map(function(dname) {\n        let remotepath = ['http://diglossa.org:5984/', dname].join('')\n        let remoteDB = new PouchDB(remotepath)\n        return remoteDB.info()\n      })).then(function(res) {\n        let dbinfo = res.map(info=> { return {dname: info.db_name, size: info.doc_count} })\n        return dbinfo\n      })\n    })\n}\n\nexport function replicate(upath, dname) {\n  let localpath = path.resolve(upath, 'pouch', dname)\n  let localDB = new PouchDB(localpath)\n  let dumppath = ['http://diglossa.org/dump-', dname].join('')\n  let remotepath = ['http://diglossa.org:5984/', dname].join('')\n\n  return localDB.load(dumppath)\n    .then(function() {\n      let opts = { live: true, retry: true }\n      localDB.sync(remotepath, opts)\n        .on('change', onSyncChange)\n        .on('error', onSyncError)\n      localDB.dname = dname\n      dbs.push(localDB)\n      // let dnames = dbs.map(db=>{ return db.dname })\n      setCfg(dname)\n    })\n}\n\nfunction onSyncChange(data) {  } // log('onSyncChange', data)\nfunction onSyncError() { log('onSyncError') }\n\nfunction setDBs(cfg) {\n  let upath = settings.get('upath')\n  cfg.forEach((dict, idx) => {\n    if (!dict.active) return\n    let dpath = path.resolve(upath, 'pouch', dict.dname)\n    let pouch = new PouchDB(dpath)\n    pouch.dname = dict.dname\n    pouch.weight = idx\n    dbs.push(pouch)\n  })\n  let dnames = dbs.map(db=>{ return db.dname })\n  return dnames\n}\n\nexport function ensureCfg(upath) {\n  let cfg = settings.get('cfg')\n  if (cfg) {\n    setDBs(cfg)\n  } else {\n    cfg = []\n    settings.set('cfg', cfg)\n    let pouchpath = path.resolve(upath, 'pouch')\n    fse.ensureDirSync(pouchpath)\n  }\n}\n\nfunction setCfg(dname) {\n  let upath = settings.get('upath')\n  let cfg = settings.get('cfg')\n  let check = _.find(cfg, dict=> { return dict.dname == dname })\n  if (check) return cfg\n  let newdict = {dname: dname, active: true, idx: cfg.length} // sync: remotepath,\n  cfg.push(newdict)\n  settings.set('cfg', cfg)\n  return cfg\n}\n\nfunction delCfg(dname) {\n  let upath = settings.get('upath')\n  let cfg = settings.get('cfg')\n  cfg = _.filter(cfg, dict=> { return dict.dname != dname})\n  settings.set('cfg', cfg)\n  return cfg\n}\n\nexport function infoDB(dname) {\n  let upath = settings.get('upath')\n  let localpath = path.resolve(upath, 'pouch', dname)\n  let db = _.find(dbs, db=> { return db.dname == dname })\n  db.info()\n    .then(function(info) {\n      log('INFO', info)\n    })\n\n}\n\nexport function cleanupDB(upath, cb) {\n  let pouchpath = path.resolve(upath, 'pouch')\n  try {\n    dbs = []\n    fse.removeSync(pouchpath)\n    fse.ensureDirSync(pouchpath)\n    settings.set('cfg', [])\n    cb(true)\n  } catch (err) {\n    console.log('ERR re-creating DBs', err)\n    cb(false)\n    // app.quit()\n  }\n}\n\nexport function queryDBs (query) {\n  let pdchs = segmenter(query.str)\n  let keys\n  let keyres = totalKeys(pdchs)\n  if (query.compound) keys = _.filter(keyres.main, key=> { return key != query.str})\n  else keys =  _.uniq(keyres.main.concat(keyres.added))\n  let dnames = dbs.map(db=> { return db.dname })\n\n  return Promise.all(dbs.map(function (db) {\n    return db.allDocs({\n      keys: keys,\n      include_docs: true\n    })\n      .then(function (res) {\n        if (!res || !res.rows) throw new Error('no dbn result')\n        let rdocs = _.compact(res.rows.map(row => { return row.doc }))\n        let docs = _.flatten(_.compact(rdocs.map(rdoc => { return rdoc.docs })))\n        docs.forEach(doc => { doc.dname = db.dname, doc.weight = db.weight })\n        return docs\n      })\n      .catch(function (err) {\n        console.log('ERR GET DBs', err)\n      })\n  }))\n    .then(function (res) {\n      let docs =_.flatten(res)\n      let chain = compactDocs(docs, pdchs)\n      query.chain = chain\n      return query\n    })\n}\n\nfunction selectTib(datapath, files) {\n  let tibs = []\n  let tibkey = {}\n  files.forEach(fname => {\n    let fpath = path.resolve(datapath, fname)\n    if (fname == 'localDict.csv' || fname == 'unprocessed.csv') return\n    let text = fse.readFileSync(fpath,'utf8').trim()\n    let rows = text.split('\\n')\n    rows = _.compact(rows)\n    rows.forEach((row, idx)=> {\n      let clean = cleanStr(row)\n      // if (idx > 0) return\n      let gpars = sband(clean, code)\n      if (!gpars) return\n      gpars.forEach(gpar=> {\n        gpar.forEach(span=> {\n          if (span.lang != code) return\n          let wfs = span.text.split(' ')\n          wfs.forEach(wf=> {\n            wf = wf.replace(retsek, '')\n            if (tibkey[wf]) return\n            tibs.push(wf)\n            tibkey[wf] = true\n          })\n        })\n      })\n    })\n  })\n  return tibs\n}\n\nfunction cleanStr(row) {\n  let clean = row.trim()\n  clean = clean.trim().replace(/\\.$/, '')\n  return clean\n}\n\n// let query = {keys: keys, pdchs: pdchs, compound: compound, lastsek: lastsek}\nexport function compactDocs(docs, pdchs) {\n  let res = makeChains(pdchs, docs)\n  let chains = res.chains\n  // log('FULL, CHAINS', res.full, chains.length, chains)\n  let chain\n  if (chains.length > 1) chain = commonParts(chains)\n  else if (chains.length == 1) chain = chains[0]\n  return chain\n}\n\n\nfunction commonParts(chains) {\n  let first = chains[0]\n  let clean = []\n  let ambitmp\n  for (let idx = 0; idx < first.length; idx++) {\n    let segs = chains.map(segs=> { return segs[idx].seg })\n    if (_.uniq(segs).length == 1) {\n      clean.push(first[idx])\n      ambitmp = null\n    } else {\n      if (!ambitmp) ambitmp = {ambi: true, seg: '', docs: []}, clean.push(ambitmp)\n      let segdocs = chains.map(segs=> { return {seg: segs[idx].seg, docs: segs[idx].docs}  })\n      ambitmp.docs.push(segdocs)\n    }\n  }\n  let ambis = _.filter(clean, seg=> { return seg.ambi })\n  ambis.forEach(ambi=>{\n    let first = ambi.docs[0]\n    let chains = []\n    for (let idx = 0; idx < first.length; idx++) {\n      let chain = ambi.docs.map(adocs=> { return adocs[idx] })\n      chains.push(chain)\n    }\n    ambi.chains = chains\n    let chain = chains[0]\n    ambi.seg = chain.map(seg=>{ return seg.seg}).join(tsek)\n  })\n  return clean\n}\n\nfunction makeChains(pdchs, docs) {\n  let chains = []\n  let fulls = []\n  pdchs.forEach(segs=>{\n    let chain = []\n    let any = false\n    let full = true\n    segs.forEach(seg=>{\n      let segdocs = _.filter(docs, doc => { return startWith(seg, doc.dict) })\n      if (segdocs.length) any = true\n      if (!segdocs.length) full = false\n      let doc = {seg: seg, docs: segdocs}\n      chain.push(doc)\n    })\n    if (any) chains.push(chain)\n    if (full) fulls.push(chain)\n  })\n  // здесь full только для справки, убрать!!!\n  let bests, full\n  if (fulls.length) bests = selectBests(fulls), full = true\n  else bests = selectBests(chains)\n  return {chains: bests, full: full}\n}\n\nfunction selectBests(chains) {\n  let max = _.max(chains.map(chain => {  return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length } ) )\n  let longests = _.filter(chains, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length >= max - 1 })\n  // let max = _.max(chains.map(chain => {  return _.sum(chain.map(segment => { return segment.docs.length ? Math.pow(segment.seg.length, 2) : 0 }))/chain.length } ) )\n  // let longests = _.filter(chains, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? Math.pow(segment.seg.length, 2) : 0 }))/chain.length >= max - 10 })\n\n  let min = _.min(longests.map(chain => {  return chain.length } ) )\n  let shortests  = _.filter(longests, chain => { return chain.length == min })\n  return shortests\n}\n\nfunction startWith(str, head) {\n  if (str == head) return true\n  let reh = new RegExp('^' + head)\n  let tail = str.replace(reh, '')\n  return (str != tail && tibsuff.includes(tail)) ?  true : false\n}\n\nfunction fullChains(chains) {\n  let fulls = []\n  chains.forEach(segs => {\n    let full = true\n    segs.forEach(seg => {\n      if (!seg.docs.length) full = false\n    })\n    if (full) fulls.push(segs)\n  })\n  return fulls\n}\n\n// ===================== generate Local Dict\n\nlet localDictPath\nlet dicts = []\nexport function scanLocalDict(datapath) {\n  let dictpath = path.resolve(__dirname, datapath)\n  let files = []\n  // let pattern = '**/*\\.tib*'\n  let pattern = '**/*'\n  let options = {cwd: dictpath, nodir: true}\n  glob(pattern, options, function(err, files) {\n    let wfs = selectTib(dictpath, files)\n    let queries = wfs.map(wf=> { return {str: wf}})\n    // queries = queries.slice(0, 10)\n\n    let csvname = 'localDict.csv'\n    localDictPath = path.resolve(dictpath, csvname)\n    fse.removeSync(localDictPath)\n\n    return queries.forEach(query=> {\n      recQuery(query)\n        .catch(function(err) {\n          console.log('Q-ERR', err)\n        })\n    })\n  })\n}\n\nfunction recQuery(query) {\n  function decide(aquery) {\n    if (!aquery.chain) return dicts\n    aquery.chain.forEach(sec=> {\n      if (sec.docs.length) saveChunk(sec.seg) //dicts.push(sec.seg)\n      else {\n        if (query.str != sec.seg) return recQuery({ str: sec.seg })\n      }\n    })\n  }\n  return queryDBs(query).then(decide);\n}\n\nfunction saveChunk(seg) {\n  let csv = [seg, ', -\\n'].join('')\n  fse.appendFile(localDictPath, csv, function(err) {\n    if (err) console.log('CSVERR', err)\n  })\n}\n\n\n// =============== CSV\n\nexport function importCSV(jsonpath, cb) {\n  let dname, dpath\n  fse.readJson(jsonpath)\n    // .then((manifest) => {\n    //   let upath = settings.get('upath')\n    //   dname = manifest.name\n    //   dpath = path.resolve(upath, 'pouch', dname)\n    //   let csvDB\n    //   if (csvDB) {\n    //     let cfg = settings.get('cfg')\n    //     log('HERE CFG', cfg)\n    //     log('HERE CSV_DB', dname)\n    //     dbs = _.filter(dbs, db=> { return db.dname != dname })\n    //     let dnames = dbs.map(db=> { return db.dname })\n    //     log('HERE DNAMES', dnames)\n    //     delCfg(dname)\n    //     return csvDB.destroy()\n    //   } else {\n    //     log('NO CSVDB')\n    //     return Promise.resolve()\n    //   }\n    // })\n    .then(function(manifest) {\n      let upath = settings.get('upath')\n      dname = manifest.name\n      dpath = path.resolve(upath, 'pouch', dname)\n      return csv2pouch(jsonpath, dpath)\n        .on('finish', function (err) {\n          let csvDB = new PouchDB(dpath)\n          csvDB.dname = dname\n          log('CSV DB NAME =>', csvDB.dname)\n          dbs.push(csvDB)\n          setCfg(dname)\n          let cfg = settings.get('cfg')\n          log('IM CFG', cfg)\n          cb(true)\n        })\n        .on('error', function (err) {\n          console.log('IMPORT .ON ERR', err)\n          dbs = _.filter(dbs, db=> { return db.dname != dname })\n          delCfg(dname)\n          cb(false)\n        })\n    })\n    .catch(function(err) {\n      log('csvDB ERR', err)\n    })\n}\n\nexport function exportCSV(csvname, cb) {\n  let db = _.find(dbs, db=> { return db.dname == csvname })\n  db.allDocs({\n    include_docs: true,\n    startkey: startkey,\n    endkey: endkey\n  }).then(function (res) {\n    let docs = res.rows.map(row=> { return row.doc })\n    let csv = ''\n    docs.forEach(doc=> {\n      let head = doc._id\n      let trns = doc.docs.map(rdoc=> { return rdoc.trns })\n      let trn = _.flatten(trns).join(';')\n      let commas = trn.split(',')\n      let value = (commas.length > 1) ? JSON.stringify(trn) : trn\n      let str = [head, value].join(',')\n      str = [str, '\\n'].join('')\n      csv += str\n    })\n    let upath = settings.get('upath')\n    let filename = [csvname, 'csv'].join('.')\n    let manifest = [csvname, 'json'].join('.')\n    let filepath = path.resolve(upath, filename)\n    let manipath = path.resolve(upath, manifest)\n    fse.writeFile(filepath, csv, function(err) {\n      if (err) log('ERRR', err)\n      if (err) return cb(false)\n      db.get('description')\n        .then(function(doc) {\n          fse.writeJson(manipath, doc)\n            .then(() => {\n              cb(true)\n              // return true\n            })\n            .catch(err => {\n              console.error('JSONERR', err)\n              cb(false)\n              // return false\n            })\n        })\n    })\n  })\n}\n","// This is main process of Electron, started as first thing when your\n// app starts. It runs through entire life of your application.\n// It doesn't have any windows which you can see on screen, but we can open\n// window from here.\n\nimport _ from 'lodash'\nimport path from \"path\";\nimport url from \"url\"\nimport { app, BrowserWindow, Menu, ipcMain, globalShortcut } from \"electron\"\nimport { libMenuTemplate } from \"./menu/lib_menu_template\"\nimport { aboutMenuTemplate } from \"./menu/about_menu_template\"\nimport { dictMenuTemplate } from \"./menu/dict_menu_template\"\nimport { helpMenuTemplate } from \"./menu/help_menu_template\"\n\nimport { ensureCfg, replicate, infoDB, remoteDicts, queryDBs, scanLocalDict, importCSV, exportCSV, cleanupDB } from \"./dbs/pouch\"\n\nimport { devMenuTemplate } from \"./menu/dev_menu_template\"\nimport { editMenuTemplate } from \"./menu/edit_menu_template\"\nconst settings = require('electron-settings')\nconst log = console.log\n\nimport env from \"env\"\n\nconst setApplicationMenu = () => {\n  // const menus = [libMenuTemplate, fileMenuTemplate, aboutMenuTemplate, authMenuTemplate, helpMenuTemplate]\n  const menus = [libMenuTemplate, dictMenuTemplate, aboutMenuTemplate, helpMenuTemplate]\n  if (env.name !== \"production\") {\n    // menus.push(devMenuTemplate)\n  }\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus))\n}\n\n// Save userData in separate folders for each environment.\n// Thanks to this you can use production and development versions of the app\n// on same machine like those are two separate apps.\nif (env.name !== \"production\") {\n  const userDataPath = app.getPath(\"userData\")\n  app.setPath(\"userData\", `${userDataPath} (${env.name})`)\n}\n\napp.on(\"ready\", () => {\n  setApplicationMenu()\n\n  let opts = {webPreferences: {\n    nodeIntegration: true\n  }}\n\n  const win = new BrowserWindow(opts)\n\n  let winBounds = settings.get('winBounds') || win.getBounds()\n  winBounds.y -= 21\n\n  win.setBounds(winBounds)\n\n  win.loadURL(\n    url.format({\n      pathname: path.join(__dirname, \"app.html\"),\n      protocol: \"file:\",\n      slashes: true\n    })\n  )\n\n  if (env.name === \"development\") {\n    win.openDevTools()\n  }\n\n  win.webContents.on('did-finish-load', () => {\n    let pckg = require('../package.json')\n    let name = pckg.name\n    let version = pckg.version\n    win.webContents.send('version', version )\n    win.setTitle([name, 'v.', version].join(' '))\n  })\n\n  win.on('resize', function () {\n    win.webContents.send('reload')\n  })\n\n  win.on('close', () => {\n    settings.set('winBounds', win.getBounds())\n  })\n\n  // globalShortcut.register('CommandOrControl+R', () => win.webContents.send('reread'))\n  // globalShortcut.register('CommandOrControl+Shift+R', () => win.reload())\n  globalShortcut.register('CommandOrControl+R', () => win.reload())\n\n  const apath = app.getAppPath()\n  const upath = app.getPath(\"userData\")\n  settings.set('apath', apath)\n  settings.set('upath', upath)\n\n  ensureCfg(upath)\n\n  ipcMain.on('infoDB', (event, dname) => {\n    infoDB(dname)\n  })\n\n  ipcMain.on('queryDBs', (event, query) => {\n    queryDBs(query)\n      .then(function(query) {\n        event.sender.send('replyDBs', query)\n      })\n  })\n\n  ipcMain.on('importCSV', (event, jsonpath) => {\n    // log('CSVIMPORT', importCSV(jsonpath))\n    importCSV(jsonpath, function(res) {\n      event.sender.send('csvImportReply', res)\n    })\n      // .then(function(rdbs) {\n      //   log('__true')\n      //   event.sender.send('csvImportReply', true)\n      // })\n      // .catch(function (err) {\n      //   log('__false')\n      //   event.sender.send('csvImportReply', false)\n      // });\n\n      // .on('finish', function (err) {\n      //   event.sender.send('csvImportReply', true)\n      // })\n      // .on('error', function (err) {\n      //   event.sender.send('csvImportReply', false)\n      // })\n  })\n\n  ipcMain.on('exportCSV', (event, csvname) => {\n    exportCSV(csvname, function(res) {\n      event.sender.send('csvExportReply', res)\n    })\n  })\n\n  ipcMain.on('scanLocalDict', (event, datapath) => {\n    scanLocalDict(datapath)\n    event.sender.send('scanLocalReply', datapath)\n      // .then(function(res) {\n      // })\n  })\n\n  ipcMain.on('remoteDicts', (event, query) => {\n    remoteDicts()\n      .then(function(rdbs) {\n        rdbs = _.filter(rdbs, dname=> { return dname[0] != '_' })\n        event.sender.send('remoteDictsReply', rdbs)\n      })\n      .catch(function (err) {\n        event.sender.send('remoteDictsReply', false)\n      });\n  })\n\n  ipcMain.on('replicate', (event, dname) => {\n    replicate(upath, dname)\n      .then(function (res) {\n        event.sender.send('replicateReply', true)\n      }).catch(function (err) {\n        event.sender.send('replicateReply', false)\n      });\n  })\n\n  ipcMain.on('cleanupDB', (event, datapath) => {\n    cleanupDB(upath, function(res) {\n      event.sender.send('cleanupReply', res)\n    })\n  })\n\n})\n\napp.on(\"window-all-closed\", () => {\n  app.quit()\n})\n"],"sourceRoot":""}