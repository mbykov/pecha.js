{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"lodash\"","webpack:///external \"path\"","webpack:///external \"fs-extra\"","webpack:///external \"electron-is-dev\"","webpack:///external \"electron-settings\"","webpack:///external \"url\"","webpack:///external \"pouchdb\"","webpack:///external \"node-couchdb\"","webpack:///external \"electron-window-state\"","webpack:///./src/menu/lib_menu_template.js","webpack:///./src/menu/about_menu_template.js","webpack:///./src/menu/dict_menu_template.js","webpack:///./src/menu/help_menu_template.js","webpack:///./src/lib/pouch.js","webpack:///./src/background.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","libMenuTemplate","label","submenu","accelerator","click","BrowserWindow","getFocusedWindow","webContents","send","app","quit","aboutMenuTemplate","dictMenuTemplate","helpMenuTemplate","toggleDevTools","path","fse","settings","log","console","PouchDB","NodeCouchDb","couch","host","protocol","port","auth","user","pass","dbs","createZeroCfg","upath","version","pouchpath","resolve","ensureDirSync","fns","readdirSync","cfg","forEach","dn","idx","cf","active","push","set","windowStateKeeper","env","userDataPath","getPath","setPath","on","menus","Menu","setApplicationMenu","buildFromTemplate","mainWindowState","defaultWidth","defaultHeight","win","x","y","width","height","webPreferences","nodeIntegration","loadURL","url","format","pathname","join","__dirname","slashes","openDevTools","pckg","setTitle","globalShortcut","register","reload","getAppPath","localpath","remotepath","dbnames","_","compact","map","dpath","pouch","dname","weight","setDBs","getCfg","ipcMain","event","dbname","localDB","remoteDB","info","then","replicate","batch_size","timeout","err","res","sender","arg","infoDB","query","keys","Promise","all","db","allDocs","include_docs","rows","Error","rdocs","row","doc","docs","flatten","rdoc","length","catch","queryDBs","listDatabases"],"mappings":"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","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","module.exports = require(\"electron\");","module.exports = require(\"lodash\");","module.exports = require(\"path\");","module.exports = require(\"fs-extra\");","module.exports = require(\"electron-is-dev\");","module.exports = require(\"electron-settings\");","module.exports = require(\"url\");","module.exports = require(\"pouchdb\");","module.exports = require(\"node-couchdb\");","module.exports = require(\"electron-window-state\");","import { app, BrowserWindow } from \"electron\";\n\nexport const libMenuTemplate = {\n  label: \"File\",\n  submenu: [\n    {  label: \"Home\",\n       accelerator: \"CmdOrCtrl+L\",\n       click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'home') } },\n    { label: \"Quit\",\n      accelerator: \"CmdOrCtrl+Q\",\n      click: () => {\n        app.quit();\n      }\n    }\n  ]\n}\n","import { app, BrowserWindow } from \"electron\";\n\nexport const aboutMenuTemplate = {\n  label: \"About\",\n  submenu: [\n    { label: \"What does this program do?\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'about') } },\n    { label: \"Code and Download\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'code') } },\n    { label: \"License\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'license') } },\n    { label: \"Acknowledgements\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'acknowledgements') } }\n  ]\n};\n","import { app, BrowserWindow } from \"electron\";\n\nexport const dictMenuTemplate = {\n  label: \"Dict\",\n  submenu: [\n    { label: \"clone dicts from server\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'clonedicts') } },\n    { label: \"arrange local dicts\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'arrangeDicts') } },\n    { label: \"export CSV to dict\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'csv') } },\n    { label: \"create CSV dict from texts\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'localdict') } },\n    { label: \"upload dict to server (disabled)\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'upload') } },\n    { label: \"cleanup DBs completely\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'cleanupdb') } }\n  ]\n};\n","import { app, BrowserWindow } from \"electron\";\n\nexport const helpMenuTemplate = {\n  label: \"Help\",\n  submenu: [\n    // { label: \"how to create a book\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'howto-create') } },\n    // { label: \"how to create a dictionary\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'howto-dict') } },\n    { label: \"hot keys\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'hotkeys') } },\n    { label: \"Toggle DevTools\",\n      accelerator: \"Alt+CmdOrCtrl+I\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().toggleDevTools();\n      }\n    }\n  ]\n};\n","import _ from 'lodash'\n\n// import { replicate } from \"../../../replicator.js\";\n\nconst path = require('path')\n// const { app } = require('electron') || require('electron').remote\n// const apath = app.getAppPath()\n// const upath = app.getPath(\"userData\")\n// let localpath = path.resolve(upath, 'pouch', 'vasilyev')\n// let remotepath = ['http://localhost:5984', 'vasilyev'].join('/')\n\nconst fse = require('fs-extra')\n// const curl = require('curl')\n\nconst settings = require('electron-settings')\nconst log = console.log\nconst PouchDB = require('pouchdb')\nconst isDev = require('electron-is-dev')\n\nconst NodeCouchDb = require('node-couchdb');\nconst couch = new NodeCouchDb()\nconst diglossa = new NodeCouchDb({\n  host: 'couchdb.external.service',\n  protocol: 'https',\n  port: 6984\n})\nconst couchAuth = new NodeCouchDb({\n  auth: {\n    user: 'login',\n    pass: 'secret'\n  }\n})\n\nlet dbs = []\n\n// а если новая база?\nexport function setDBs(upath) {\n  let cfg = settings.get('cfg')\n  if (!cfg) cfg = createZeroCfg(upath)\n  log('===setDBs CFG===', cfg)\n  let dbnames = _.compact(cfg.map(cf => { return (cf.active) ? cf.name : null }))\n  log('POUCH:DBNS', dbnames)\n  dbnames.forEach((dn, idx) => {\n    let dpath = path.resolve(upath, 'pouch', dn)\n    let pouch = new PouchDB(dpath)\n    pouch.dname = dn\n    pouch.weight = idx\n    dbs.push(pouch)\n  })\n  return dbnames\n}\n\nexport function getCfg(upath) {\n  let cfg = settings.get('cfg')\n  if (!cfg) cfg = createZeroCfg(upath)\n  return cfg\n}\n\nfunction createZeroCfg(upath, version) {\n  let pouchpath = path.resolve(upath, 'pouch')\n  fse.ensureDirSync(pouchpath)\n  let fns = fse.readdirSync(pouchpath)\n  let cfg = []\n  fns.forEach((dn, idx) => {\n    if (dn == 'cfg.json') return\n    let dpath = path.resolve(pouchpath, dn)\n    let cf = {name: dn, active: true, idx: idx}\n    cfg.push(cf)\n  })\n  settings.set('cfg', cfg)\n  // log('__ZERO CFG__', cfg)\n  return cfg\n}\n\nexport function queryDBs (keys) {\n  return Promise.all(dbs.map(function (db) {\n    return db.allDocs({\n      keys: keys,\n      include_docs: true\n    })\n      .then(function (res) {\n        if (!res || !res.rows) throw new Error('no dbn result')\n        let rdocs = _.compact(res.rows.map(row => { return row.doc }))\n        let docs = _.flatten(_.compact(rdocs.map(rdoc => { return rdoc.docs })))\n        if (!docs.length) return []\n        docs.forEach(doc => { doc.dname = db.dname, doc.weight = db.weight })\n        return docs\n      }).catch(function (err) {\n        console.log('ERR GET DBs', err)\n      })\n  }))\n}\n\n// adduser --system --home /opt/couchdb --no-create-home --shell /bin/bash -g couchdb couchdb\n// useradd --system -b /opt/couchdb --shell /bin/bash -g couchdb couchdb\n// sudo -i -u couchdb bin/couchdb\n// lobsang vasilyev\n\nexport function infoDB(localpath) {\n  let localDB = new PouchDB(localpath)\n  return localDB.info()\n}\n\nexport function replicateDB(dbname, cb) {}\n\nexport function cleanupDB(state) {\n  log('CLEAN UP')\n}\n\nexport function replicate(remotepath, localpath) {\n  log('LOCALPATH', localpath)\n  log('REMOTEPATH', remotepath)\n   let localDB = new PouchDB(localpath)\n  // localDB.dname = dbname\n  let remoteDB = new PouchDB(remotepath)\n\n  return localDB.info()\n    .then(function(info) {\n      return PouchDB.replicate(remoteDB, localDB, {\n        // live: true,\n        // retry: true\n        batch_size: 10000,\n        timeout: false\n      }).on('change', function (info) {\n        log('change', info)\n      }).on('paused', function (err) {\n        log('paused', err)\n      }).on('active', function (res) {\n        log('active', res)\n      }).on('denied', function (err) {\n        log('denied', err)\n      }).on('complete', function (info) {\n        log('complete', info)\n      }).on('error', function (err) {\n        log('error', err)\n      })\n    })\n\n  // remoteDB.replicate.to(localDB).then(function (result) {\n  //   log('REPLICATION COMPLETED', result);\n  //   localDB.info()\n  //     .then(function(info) {\n  //           return result\n  //     })\n  // }).catch(function (err) {\n  //   log(err);\n  // })\n}\n\n  // localDB.replicate.from(remoteDB, {batch_size: 1000})\n  //   .on('complete', function (info) {\n  //     log('REPL', info)\n  //     cb(true)\n  //   }).on('error', function (err) {\n  //     // handle error\n  //     log('____ERR', err)\n  //     cb(false)\n  //   })\n\n// {\n//   var rep = PouchDB.replicate(remoteDB, localDB, {\n//     // live: true,\n//     // retry: true\n//   }).on('change', function (info) {\n//     log('change', info)\n//   }).on('paused', function (err) {\n//     log('paused', err)\n//   }).on('active', function (res) {\n//     log('active', res)\n//   }).on('denied', function (err) {\n//     log('denied', err)\n//   }).on('complete', function (info) {\n//     log('complete', info)\n//   }).on('error', function (err) {\n//     log('error', err)\n//   })\n// }\n\nexport function remoteDicts() {\n  return couch.listDatabases()\n    .catch(function(err) {\n      log('REMOTE DICTS ERR', err)\n    })\n}\n","// This is main process of Electron, started as first thing when your\n// app starts. It runs through entire life of your application.\n// It doesn't have any windows which you can see on screen, but we can open\n// window from here.\n\nimport path from \"path\";\nimport url from \"url\"\nimport { app, BrowserWindow, Menu, ipcMain, globalShortcut } from \"electron\"\nimport { libMenuTemplate } from \"./menu/lib_menu_template\"\nimport { aboutMenuTemplate } from \"./menu/about_menu_template\"\nimport { dictMenuTemplate } from \"./menu/dict_menu_template\"\nimport { helpMenuTemplate } from \"./menu/help_menu_template\"\n\nimport { setDBs, getCfg, replicate, infoDB, queryDBs, remoteDicts } from \"./lib/pouch\"\n\nimport { devMenuTemplate } from \"./menu/dev_menu_template\"\nimport { editMenuTemplate } from \"./menu/edit_menu_template\"\n// import createWindow from \"./helpers/window\"\nconst windowStateKeeper = require('electron-window-state')\nconst settings = require('electron-settings')\nconst log = console.log\n\n// Special module holding environment variables which you declared\n// in config/env_xxx.json file.\nimport env from \"env\"\n\nconst setApplicationMenu = () => {\n  // const menus = [libMenuTemplate, fileMenuTemplate, aboutMenuTemplate, authMenuTemplate, helpMenuTemplate]\n  // const menus = [libMenuTemplate, aboutMenuTemplate, helpMenuTemplate]\n  const menus = [libMenuTemplate, dictMenuTemplate, aboutMenuTemplate, helpMenuTemplate]\n  if (env.name !== \"production\") {\n    // menus.push(devMenuTemplate)\n  }\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus))\n}\n\n// Save userData in separate folders for each environment.\n// Thanks to this you can use production and development versions of the app\n// on same machine like those are two separate apps.\nif (env.name !== \"production\") {\n  const userDataPath = app.getPath(\"userData\")\n  app.setPath(\"userData\", `${userDataPath} (${env.name})`)\n}\n\napp.on(\"ready\", () => {\n  setApplicationMenu()\n\n  let mainWindowState = windowStateKeeper({\n    defaultWidth: 1000,\n    defaultHeight: 800\n  })\n\n  const win = new BrowserWindow({\n    'x': mainWindowState.x,\n    'y': mainWindowState.y,\n    'width': mainWindowState.width,\n    'height': mainWindowState.height,\n    webPreferences: {\n      nodeIntegration: true\n    }\n  })\n\n  win.loadURL(\n    url.format({\n      pathname: path.join(__dirname, \"app.html\"),\n      protocol: \"file:\",\n      slashes: true\n    })\n  )\n\n  if (env.name === \"development\") {\n    win.openDevTools()\n  }\n\n  win.webContents.on('did-finish-load', () => {\n    let pckg = require('../package.json')\n    let name = pckg.name\n    let version = pckg.version\n    // let aversion = pckg.dependencies.antrax.replace('^', '')\n    win.webContents.send('version', version )\n    win.setTitle([name, 'v.', version].join(' '))\n  })\n\n  win.on('resize', function () {\n    win.webContents.send('reload')\n  })\n\n\n  globalShortcut.register('CommandOrControl+R', () => win.webContents.send('reread'))\n  // globalShortcut.register('CommandOrControl+R', () => win.reload())\n  globalShortcut.register('CommandOrControl+Shift+R', () => win.reload())\n  // globalShortcut.register('CommandOrControl+R', () => win.reload())\n\n  const apath = app.getAppPath()\n  const upath = app.getPath(\"userData\")\n  let localpath = path.resolve(upath, 'pouch', 'vasilyev')\n  let remotepath = ['http://localhost:5984', 'vasilyev'].join('/')\n  let dbnames = setDBs(upath)\n  console.log('B:dbnames', dbnames)\n  // console.log('APATH', apath, 'UPATH', upath)\n  let cfg = getCfg(upath)\n  console.log('CFG', cfg)\n\n  ipcMain.on('replicate', (event, dbname) => {\n    console.log('B:REPLICATE', dbname)\n    replicate(remotepath, localpath)\n      .then(function(res) {\n        console.log('BB:REPL RES:', res)\n        event.sender.send('replicateReply', res)\n      })\n  })\n\n  ipcMain.on('info', (event, arg) => {\n    let localpath = path.resolve(upath, 'pouch', 'vasilyev')\n    console.log('B:INFO', arg) // prints \"ping\"\n    infoDB(localpath)\n      .then(function(info) {\n        console.log('B: INFO:', info)\n      })\n  })\n\n  // let query = {keys: keys, el: el, pdchs: pdchs, compound: compound}\n  ipcMain.on('queryDBs', (event, query) => {\n    queryDBs(query.keys)\n      .then(function(docs) {\n        query.docs = docs\n        event.sender.send('replayDBs', query)\n      })\n  })\n\n  ipcMain.on('remoteDicts', (event, query) => {\n    remoteDicts()\n      .then(function(dbs) {\n        event.sender.send('remoteDictsReply', dbs)\n      })\n  })\n\n\n})\n\n\n\napp.on(\"window-all-closed\", () => {\n  app.quit()\n})\n"],"sourceRoot":""}