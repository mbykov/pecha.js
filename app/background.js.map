{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"lodash\"","webpack:///./src/lib/tibetan_data.js","webpack:///external \"path\"","webpack:////home/michael/sband/dist/index.js","webpack:///external \"debug\"","webpack:///external \"electron-settings\"","webpack:///external \"electron-is-dev\"","webpack:///external \"pouchdb\"","webpack:///external \"url\"","webpack:///external \"request\"","webpack:///external \"fs-extra\"","webpack:///external \"glob-fs\"","webpack:///external \"pouchdb-load\"","webpack:///external \"highland\"","webpack:///external \"mississippi\"","webpack:///external \"csv2\"","webpack:///external \"node-couchdb\"","webpack:///./src/menu/lib_menu_template.js","webpack:///./src/menu/about_menu_template.js","webpack:///./src/menu/dict_menu_template.js","webpack:///./src/menu/help_menu_template.js","webpack:///./src/dbs/segmenter.js","webpack:///./src/dbs/pouch.js","webpack:///./src/background.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__webpack_exports__","tibsyms","tibsuff","tsek","default","_","coderanges","console","log","zho","tib","grc","str","code","re","RegExp","test","clean","trim","replace","wopunct","split","join","rep","rows","spans","map","row","forEach","spns","rclause","spn","text","punct","push","clauses","compact","clause","span","lang","libMenuTemplate","label","submenu","accelerator","click","BrowserWindow","getFocusedWindow","webContents","send","app","quit","aboutMenuTemplate","dictMenuTemplate","helpMenuTemplate","toggleDevTools","retsek","path","fse","glob","gitignore","settings","PouchDB","plugin","csv2","dbs","startkey","endkey","NodeCouchDb","diglossa","host","protocol","port","auth","user","pass","onSyncChange","data","onSyncError","setCfg","upath","dname","cfg","newdict","active","idx","length","set","queryDBs","query","keys","pdchs","segs","depth","old","rec","pdch","head","tail","flakes","slice","flake","reverse","scrape","flatten","clone","pop","cleans","seg","segmenter","keyres","mainKeys","uniq","added","syl","resyl","poss","main","totalKeys","compound","filter","concat","db","Promise","all","allDocs","include_docs","then","res","Error","rdocs","doc","docs","rdoc","weight","catch","err","chain","chains","bests","full","fulls","any","segdocs","reh","includes","startWith","dict","selectBests","makeChains","ambitmp","first","ambi","adocs","commonParts","compactDocs","max","sum","segment","longests","min","dicts","scanLocalDict","datapath","dictpath","resolve","__dirname","files","readdirSync","cwd","tibs","tibkey","file","fpath","readFileSync","cleanStr","sband","gpar","wf","selectTib","aquery","sec","filepath","csv","appendFile","saveChunk","recQuery","decide","filename","importCSV","jsonpath","cb","readJson","manifest","mpath","parse","dir","mname","csvpath","createReadStream","pipe","on","langs","shift","_id","trns","mdoc","csvname","localpath","localDB","bulkDocs","result","getCSV","error","env","userDataPath","getPath","setPath","menus","Menu","setApplicationMenu","buildFromTemplate","win","webPreferences","nodeIntegration","winBounds","getBounds","y","setBounds","loadURL","url","format","pathname","slashes","openDevTools","pckg","version","setTitle","globalShortcut","register","reload","apath","getAppPath","pouchpath","ensureDirSync","dpath","pouch","setDBs","ipcMain","event","infoDB","sender","find","trn","JSON","stringify","manipath","writeFile","writeJson","exportCSV","listDatabases","dnames","remotepath","info","db_name","size","doc_count","rdbs","dumppath","load","sync","live","retry","replicate","removeSync","cleanupDB"],"mappings":"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","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 30);\n","module.exports = require(\"electron\");","module.exports = require(\"lodash\");","//\n\nexport const tibsyms = {\n  tsek: '་'\n  // connective: 'འི',\n  // subordinative: 'ར', // ladon\n  // narrative: 'འོ',\n  // interrog: 'འམ',\n  // coupling: 'འི',\n  // ergative: 'ས',\n  // concessive: 'འང'\n}\n\nexport const tibsuff = ['འི', 'ར', 'འོ', 'འམ', 'འི', 'ས', 'འང']\n","module.exports = require(\"path\");","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ = require('lodash');\n\nvar log = console.log;\n\nvar debug = require('debug')('app');\n\nvar d = debug; // https://iso639-3.sil.org/code_tables/639/data --> three letter codes\n// punctuation \\u002E\\u002C\\u0021\\u003A\\u003B\\u00B7 - \\u0020\\u0027 - ... middle dot, - space, apostrophe\n// parens ()[]{-/\n// \\u0028\\u0029\\u005B\\u005D\\u007B\\u007D\\u002D\\u002F\n// greek 0370-03FF 1F00–1FFF\n// diactitic 0300-036F\n// tibetan shad - ། U+0F0D : TIBETAN MARK SHAD {shey} // punctuation\n// common punctuation in this version of sband\n\nvar puncts = \"([.,!:;\\xB7\\u0F0D])\"; // san - sansktit\n\nvar coderanges = {\n  'zho': \"([\\u4E00-\\u9FFF]+)\",\n  'tib': \"([\\u0F00-\\u0FFF]+)\",\n  'grc': \"([\\u0370-\\u03FF\\u1F00-\\u1FFF\\u0300-\\u036F' ]+)\" // note: grc includes space - \\u0020\n\n};\n\nvar _default = function _default(str, code) {\n  var re = new RegExp(coderanges[code]);\n  if (!re.test(str)) return;\n  var clean = str.trim().replace(/᾽/g, \"\\'\");\n  var wopunct = clean.split(\"'\").join('');\n  if (!re.test(wopunct)) return;\n  var rep = new RegExp(puncts);\n  var rows = clean.replace(/\\r?\\n+/, '\\n').split('\\n');\n  var rclauses = rows.map(function (row) {\n    return row.split(rep);\n  });\n  var spans = [];\n  rows.forEach(function (row) {\n    var spns = [];\n    var rclauses = row.split(rep);\n    rclauses.forEach(function (rclause) {\n      if (rep.test(rclause)) {\n        var spn = {\n          text: rclause,\n          punct: true\n        };\n        spns.push(spn);\n      } else {\n        var clauses = rclause.split(re);\n        clauses = _.compact(clauses);\n        clauses.forEach(function (clause) {\n          clause = clause.trim();\n          if (!clause) return;\n          var lang = re.test(clause) ? true : false;\n          var span = {\n            text: clause\n          };\n          if (lang) span.lang = code; // span[code] = true\n          // if (lang) { }\n\n          spns.push(span);\n        });\n      }\n    });\n    spans.push(spns);\n  });\n  return spans;\n};\n\nexports.default = _default;","module.exports = require(\"debug\");","module.exports = require(\"electron-settings\");","module.exports = require(\"electron-is-dev\");","module.exports = require(\"pouchdb\");","module.exports = require(\"url\");","module.exports = require(\"request\");","module.exports = require(\"fs-extra\");","module.exports = require(\"glob-fs\");","module.exports = require(\"pouchdb-load\");","module.exports = require(\"highland\");","module.exports = require(\"mississippi\");","module.exports = require(\"csv2\");","module.exports = require(\"node-couchdb\");","import { app, BrowserWindow } from \"electron\";\n\nexport const libMenuTemplate = {\n  label: \"File\",\n  submenu: [\n    {  label: \"Home\",\n       accelerator: \"CmdOrCtrl+L\",\n       click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'home') } },\n    { label: \"Quit\",\n      accelerator: \"CmdOrCtrl+Q\",\n      click: () => {\n        app.quit();\n      }\n    }\n  ]\n}\n","import { app, BrowserWindow } from \"electron\";\n\nexport const aboutMenuTemplate = {\n  label: \"About\",\n  submenu: [\n    { label: \"About Pecha.js\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'about') } },\n    { label: \"Code and Download\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'code') } },\n    { label: \"License\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'license') } },\n    { label: \"Contacts\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'contacts') } },\n    { label: \"Acknowledgements\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'acknowledgements') } }\n  ]\n};\n","import { app, BrowserWindow } from \"electron\";\n\nexport const dictMenuTemplate = {\n  label: \"Dict\",\n  submenu: [\n    { label: \"Clone dicts from server\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'clonedicts') } },\n    { label: \"Arrange local dicts\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'activedicts') } },\n    { label: \"Create CSV from some texts\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'localdict') } },\n    { label: \"Import form CSV\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'csv') } },\n    { label: \"Publish new dictionary (disabled)\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'publish') } },\n    { label: \"Cleanup DBs completely\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'cleanup') } }\n  ]\n};\n","import { app, BrowserWindow } from \"electron\";\n\nexport const helpMenuTemplate = {\n  label: \"Help\",\n  submenu: [\n    { label: \"hot keys\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'help') } },\n    { label: \"Toggle DevTools\",\n      accelerator: \"Alt+CmdOrCtrl+I\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().toggleDevTools();\n      }\n    }\n  ]\n};\n","import _ from 'lodash'\nimport { tibsyms, tibsuff } from \"../lib/tibetan_data\";\n\nconst log = console.log\nconst tsek = tibsyms.tsek\n\nexport function totalKeys(pdchs) {\n  let mainKeys = _.uniq(_.flatten(pdchs))\n  let added = []\n  mainKeys.forEach(seg=>{\n    tibsuff.forEach(syl=>{\n      let resyl = new RegExp(syl+'$')\n      let poss = seg.replace(resyl, '')\n      if (seg != poss) added.push(poss)\n    })\n  })\n  return {main: mainKeys, added: added}\n  // let keys = segs.concat(added)\n  // return _.uniq(keys)\n  // return _.uniq(_.flatten(pdchs))\n}\n\nexport function segmenter(str) {\n  let segs = str.split(tsek)\n  // let depth = (segs.length < 10) ? 10 : 2\n  // let depth = (segs.length > 10) ? 7 : 100\n  let depth = 4\n  // log('SEGS', segs)\n  let old = str\n  let size = segs.length\n  let pdchs = [[segs]]\n  function rec(segs, pdch) {\n    // log('PDCH', pdch)\n    let flakes = scrape(segs)\n    flakes.forEach(flake => {\n      pdch.push(flake.head)\n      pdch.push(flake.tail)\n      // pdch = pdch.concat(flake.head)\n      // pdch = pdch.concat(flake.tail)\n      if (_.flatten(pdch).join(tsek) == old) {\n        pdchs.push(_.clone(pdch))\n        pdch.pop()\n      }\n      if (pdch.length < depth) rec(flake.tail, pdch) // three parts for now !\n      // rec(flake.tail, pdch)\n      pdch.pop()\n    })\n  }\n  rec(segs, [])\n  let cleans = []\n  pdchs.forEach(pdch=> {\n    let clean = []\n    pdch.forEach(seg=>{\n      clean.push(seg.join(tsek))\n    })\n    cleans.push(clean)\n  })\n  return cleans\n}\n\nexport function scrape(segs) {\n  // log('SEGS', segs)\n  let head, tail\n  let flakes = []\n  for (let idx = 1; idx < segs.length + 1; idx++) {\n    head = segs.slice(0, idx)\n    tail = segs.slice(idx)\n    let flake = {head: head, tail: tail}\n    if (tail.length) flakes.push(flake)\n  }\n  return flakes.reverse()\n}\n\n// export function segmenter_(str) {\n//   let old = str\n//   let pdchs = [[str]]\n//   function rec(str, pdch) {\n//     // log('PDCH', pdch)\n//     let flakes = scrape(str)\n//     flakes.forEach(flake => {\n//       pdch.push(flake.head)\n//       pdch.push(flake.tail)\n//       if (pdch.join(tsek) == old) {\n//         pdchs.push(_.clone(pdch))\n//         pdch.pop()\n//       }\n//       if (pdch.length < 5) rec(flake.tail, pdch) // three parts for now !\n//       // rec(flake.tail, pdch)\n//       pdch.pop()\n//     })\n//   }\n//   rec(str, [])\n//   return pdchs\n// }\n\n// export function scrape_(str) {\n//   let segs = str.split(tsek)\n//   let head, tail\n//   let flakes = []\n//   for (let idx = 1; idx < segs.length + 1; idx++) {\n//     head = segs.slice(0, idx).join(tsek)\n//     tail = segs.slice(idx).join(tsek)\n//     let flake = {head: head, tail: tail}\n//     if (tail) flakes.push(flake)\n//   }\n//   return flakes.reverse()\n// }\n\n// export function totalKeys_(pdchs) {\n//   let segs = _.uniq(_.flatten(pdchs))\n//   let added = []\n//   segs.forEach(seg=>{\n//     tibsyls.forEach(syl=>{\n//       let resyl = new RegExp(syl+'$')\n//       let poss = seg.replace(resyl, '')\n//       if (seg != poss) added.push(poss)\n//     })\n//   })\n//   let keys = segs.concat(added)\n//   return _.uniq(keys)\n// }\n","//\n\nimport _ from 'lodash'\nimport sband from '../../../../sband'\nimport { segmenter, totalKeys } from \"./segmenter\";\nimport { tibsyms, tibsuff } from \"../lib/tibetan_data\";\nconst tsek = tibsyms.tsek\nlet retsek = new RegExp(tsek+'$')\n\n// const JSON = require('json5')\n// require('json5/lib/register')\n\nconst request = require('request')\nconst path = require('path')\nconst fse = require('fs-extra')\nlet glob = require('glob-fs')({ gitignore: true })\n\nconst isDev = require('electron-is-dev')\nconst settings = require('electron-settings')\nconst PouchDB = require('pouchdb')\nPouchDB.plugin(require('pouchdb-load'));\n\nconst log = console.log\nlet debug = require('debug')\n// let log = debug('app')\n// let d = debug('app')\nlet H = require('highland');\nlet miss = require('mississippi');\nlet csv2 = require('csv2');\n\nlet dbs = []\nlet code = 'tib'\nlet startkey =  'ཀ'\nlet endkey = '\\ufff0'\n\nconst NodeCouchDb = require('node-couchdb');\nconst couch = new NodeCouchDb()\n\nconst diglossa = new NodeCouchDb({\n  host: 'diglossa.org',\n  protocol: 'http',\n  port: 5984,\n  auth: {\n    user: 'guest',\n    pass: 'guest'\n  }\n})\n\nexport function remoteDicts() {\n  return diglossa.listDatabases()\n    .then(function(dnames) {\n      return Promise.all(dnames.map(function(dname) {\n        let remotepath = ['http://diglossa.org:5984/', dname].join('')\n        let remoteDB = new PouchDB(remotepath)\n        return remoteDB.info()\n      })).then(function(res) {\n        let dbinfo = res.map(info=> { return {dname: info.db_name, size: info.doc_count} })\n        return dbinfo\n      })\n    })\n}\n\nexport function replicate(upath, dname) {\n  let localpath = path.resolve(upath, 'pouch', dname)\n  let localDB = new PouchDB(localpath)\n  let dumppath = ['http://diglossa.org/dump-', dname].join('')\n  let remotepath = ['http://diglossa.org:5984/', dname].join('')\n  // log('REPLICATE START', localpath, remotepath)\n\n  return localDB.load(dumppath)\n    .then(function() {\n      let opts = { live: true, retry: true }\n      log('P: REPL DONE before sync')\n      localDB.sync(remotepath, opts)\n        .on('change', onSyncChange)\n        .on('error', onSyncError)\n      localDB.dname = dname\n      dbs.push(localDB)\n      let dnames = dbs.map(db=>{ return db.dname })\n      // log('P: repl-DNAMES:', dnames)\n      let cfg = setCfg(upath, dname)\n      // log('P: repl - new cfg:', cfg)\n    })\n}\n\nfunction onSyncChange(data) { log('onSyncChange', data) }\nfunction onSyncError() { log('onSyncError') }\n\nexport function setDBs(upath) {\n  let pouchpath = path.resolve(upath, 'pouch')\n  fse.ensureDirSync(pouchpath)\n  let cfg = settings.get('cfg')\n  // log('setting dbs, cfg', cfg)\n  dbs = []\n  // let dbnames = _.compact(cfg.map(dict => { return (dict.active) ? dict.name : null }))\n  // log('setDBNS', dbnames)\n  // let opts = { live: true, retry: true }\n  cfg.forEach((dict, idx) => {\n    if (!dict.active) return\n    let dpath = path.resolve(upath, 'pouch', dict.dname)\n    let pouch = new PouchDB(dpath)\n    pouch.dname = dict.dname\n    pouch.weight = idx\n    // pouch.sync(dict.remotepath, opts) // cannot read preperty once of undefined\n    dbs.push(pouch)\n  })\n  let dnames = dbs.map(db=>{ return db.dname })\n  // log('P: DBS ok:', dnames)\n  // log('P: DBS ok:', cfg)\n  return dnames\n}\n\nfunction setCfg(upath, dname) {\n  let cfg = settings.get('cfg') || []\n  if (!dname) return cfg\n  let newdict = {dname: dname, active: true, idx: cfg.length} // sync: remotepath,\n  cfg.push(newdict)\n  settings.set('cfg', cfg)\n  log('== setCFG ==', cfg)\n  return cfg\n}\n\nexport function infoDB(upath, dname) {\n  let localpath = path.resolve(upath, 'pouch', dname)\n  let localDB = new PouchDB(localpath)\n  localDB.allDocs({\n    include_docs: true,\n    startkey: startkey,\n    endkey: endkey\n  }).then(function (res) {\n    if (!res.rows.length) return\n    let doc = res.rows[0].doc\n    log('INFO-doc', doc)\n    log('INFO-docs', doc.docs)\n  })\n    .catch(function(err) {\n      log('INFO ERR', err)\n    })\n}\n\nexport function cleanupDB(upath, cb) {\n  let pouchpath = path.resolve(upath, 'pouch')\n  log('CLEAN UP', pouchpath)\n  try {\n    dbs = []\n    fse.removeSync(pouchpath)\n    fse.ensureDirSync(pouchpath)\n    settings.set('cfg', [])\n    cb(true)\n  } catch (err) {\n    log('ERR re-creating DBs', err)\n    cb(false)\n    // app.quit()\n  }\n}\n\nexport function queryDBs (query) {\n  let pdchs = segmenter(query.str)\n  let keys\n  let keyres = totalKeys(pdchs)\n  if (query.compound) keys = _.filter(keyres.main, key=> { return key != query.str})\n  else keys =  _.uniq(keyres.main.concat(keyres.added))\n  let dnames = dbs.map(db=> { return db.dname })\n\n  return Promise.all(dbs.map(function (db) {\n    return db.allDocs({\n      keys: keys,\n      include_docs: true\n    })\n      .then(function (res) {\n        if (!res || !res.rows) throw new Error('no dbn result')\n        let rdocs = _.compact(res.rows.map(row => { return row.doc }))\n        let docs = _.flatten(_.compact(rdocs.map(rdoc => { return rdoc.docs })))\n        docs.forEach(doc => { doc.dname = db.dname, doc.weight = db.weight })\n        return docs\n      })\n      .catch(function (err) {\n        console.log('ERR GET DBs', err)\n      })\n  }))\n    .then(function (res) {\n      let docs =_.flatten(res)\n      let chain = compactDocs(docs, pdchs)\n      query.chain = chain\n      return query\n    })\n}\n\nfunction selectTib(datapath, files) {\n  let tibs = []\n  let tibkey = {}\n  files.forEach(file => {\n    let fpath = path.resolve(datapath, file)\n    let text = fse.readFileSync(fpath,'utf8').trim()\n    let rows = text.split('\\n')\n    rows = _.compact(rows)\n    rows.forEach((row, idx)=> {\n      let clean = cleanStr(row)\n      // if (idx > 0) return\n      let gpars = sband(clean, code)\n      gpars.forEach(gpar=> {\n        gpar.forEach(span=> {\n          if (span.lang != code) return\n          let wfs = span.text.split(' ')\n          wfs.forEach(wf=> {\n            wf = wf.replace(retsek, '')\n            if (tibkey[wf]) return\n            tibs.push(wf)\n            tibkey[wf] = true\n          })\n        })\n      })\n    })\n  })\n  return tibs\n}\n\nfunction cleanStr(row) {\n  let clean = row.trim()\n  clean = clean.trim().replace(/\\.$/, '')\n  return clean\n}\n\n// let query = {keys: keys, pdchs: pdchs, compound: compound, lastsek: lastsek}\nexport function compactDocs(docs, pdchs) {\n  let res = makeChains(pdchs, docs)\n  let chains = res.chains\n  // log('FULL, CHAINS', res.full, chains.length, chains)\n  let chain\n  if (chains.length > 1) chain = commonParts(chains)\n  else if (chains.length == 1) chain = chains[0]\n  return chain\n}\n\n\nfunction commonParts(chains) {\n  let first = chains[0]\n  let clean = []\n  let ambitmp\n  for (let idx = 0; idx < first.length; idx++) {\n    let segs = chains.map(segs=> { return segs[idx].seg })\n    if (_.uniq(segs).length == 1) {\n      clean.push(first[idx])\n      ambitmp = null\n    } else {\n      if (!ambitmp) ambitmp = {ambi: true, seg: '', docs: []}, clean.push(ambitmp)\n      let segdocs = chains.map(segs=> { return {seg: segs[idx].seg, docs: segs[idx].docs}  })\n      ambitmp.docs.push(segdocs)\n    }\n  }\n  let ambis = _.filter(clean, seg=> { return seg.ambi })\n  ambis.forEach(ambi=>{\n    let first = ambi.docs[0]\n    let chains = []\n    for (let idx = 0; idx < first.length; idx++) {\n      let chain = ambi.docs.map(adocs=> { return adocs[idx] })\n      chains.push(chain)\n    }\n    ambi.chains = chains\n    let chain = chains[0]\n    ambi.seg = chain.map(seg=>{ return seg.seg}).join(tsek)\n  })\n  return clean\n}\n\nfunction makeChains(pdchs, docs) {\n  let chains = []\n  let fulls = []\n  pdchs.forEach(segs=>{\n    let chain = []\n    let any = false\n    let full = true\n    segs.forEach(seg=>{\n      let segdocs = _.filter(docs, doc => { return startWith(seg, doc.dict) })\n      if (segdocs.length) any = true\n      if (!segdocs.length) full = false\n      let doc = {seg: seg, docs: segdocs}\n      chain.push(doc)\n    })\n    if (any) chains.push(chain)\n    if (full) fulls.push(chain)\n  })\n  // здесь full только для справки, убрать!!!\n  let bests, full\n  if (fulls.length) bests = selectBests(fulls), full = true\n  else bests = selectBests(chains)\n  return {chains: bests, full: full}\n}\n\nfunction selectBests(chains) {\n  let max = _.max(chains.map(chain => {  return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length } ) )\n  // log('MAX', max)\n  let longests = _.filter(chains, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length >= max - 1 })\n  // longests = _.sortBy(longests, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length }).reverse()\n  // log('LNGST', longests)\n  // return longests\n\n  // // квадраты - выберет более равномерное деление, да, но отбросит тоже хорошие\n  // let max = _.max(chains.map(chain => {  return _.sum(chain.map(segment => { return segment.docs.length ? Math.pow(segment.seg.length, 2) : 0 }))/chain.length } ) )\n  // // log('MAX', max)\n  // let longests = _.filter(chains, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? Math.pow(segment.seg.length, 2) : 0 }))/chain.length >= max - 10 })\n\n  let min = _.min(longests.map(chain => {  return chain.length } ) )\n  // log('MIN', min)\n  let shortests  = _.filter(longests, chain => { return chain.length == min })\n  return shortests\n  // let maxlong = _.max(longests.map(chain => {  return chain.length } ) )\n  // // log('maxlong', maxlong)\n  // longests  = _.filter(longests, chain => { return chain.length == maxlong })\n  // return longests\n}\n\nfunction startWith(str, head) {\n  if (str == head) return true\n  let reh = new RegExp('^' + head)\n  let tail = str.replace(reh, '')\n  return (str != tail && tibsuff.includes(tail)) ?  true : false\n}\n\nfunction fullChains(chains) {\n  let fulls = []\n  chains.forEach(segs => {\n    let full = true\n    segs.forEach(seg => {\n      if (!seg.docs.length) full = false\n    })\n    if (full) fulls.push(segs)\n  })\n  return fulls\n}\n\n// ===================== generate Local Dict\n\n// let dicts = []\n// let tmpdicts = []\n// let qs = []\n// let dictpath\n\nlet dicts = []\nexport function scanLocalDict(datapath) {\n  let dictpath = path.resolve(__dirname, datapath)\n  let files = glob.readdirSync('**/*\\.tib*', {cwd: dictpath})\n  files = _.uniq(files)\n\n  // log('FILES', files)\n  let wfs = selectTib(datapath, files)\n  // log('WFS', wfs.length)\n  let queries = wfs.map(wf=> { return {str: wf}})\n  // queries = queries.slice(0, 3)\n\n  return queries.forEach(query=> {\n    recQuery(query)\n      // .then(function(res) {\n      //   log('Q', dicts)\n      // })\n      .catch(function(err) {\n        log('Q-ERR', err)\n      })\n  })\n  // log('=DICTS=', dicts)\n\n}\n\nfunction recQuery(query) {\n  function decide(aquery) {\n    // log('__aq__', aquery)\n    if (!aquery.chain) return dicts\n    aquery.chain.forEach(sec=> {\n      if (sec.docs.length) saveChunk(sec.seg) //dicts.push(sec.seg)\n      else {\n        // if (query.str == sec.seg) return dicts\n        if (query.str != sec.seg) return recQuery({ str: sec.seg })\n      }\n    })\n    // log('__d__', dicts)\n  }\n  return queryDBs(query).then(decide);\n}\n\nfunction saveChunk(seg) {\n  let filename = 'kuku.csv'\n  let upath = settings.get('upath')\n  let filepath = path.resolve(upath, filename)\n  let csv = [seg, ', -\\n'].join('')\n  fse.appendFile(filepath, csv, function(err) {\n    if (err) log('CSVERR', err)\n    log('saved', seg)\n  })\n}\n\n\n// =============== CSV\n\nexport function importCSV(jsonpath, cb) {\n  log('P: IMPORT CSV', jsonpath)\n  jsonpath = path.resolve(jsonpath)\n\n  fse.readJson(jsonpath)\n    .then((manifest) => {\n      log('MANIFEST', manifest)\n      let mpath = path.parse(jsonpath).dir\n      let mname = [path.parse(jsonpath).name, 'csv'].join('.')\n      let csvpath = path.resolve(mpath, mname)\n      log('CSVPATH', csvpath)\n      getCSV(csvpath, function(res) {\n        cb(true)\n      })\n    })\n    .catch(err => {\n      console.error('IMPORTCSVERR', err)\n      cb(false)\n    })\n  return\n}\n\nfunction getCSV(csvpath, cb) {\n  let upath = settings.get('upath')\n  let rows = []\n  let rs = fse.createReadStream(csvpath)\n      .pipe(csv2())\n      .on('data', function(data) {\n        rows.push(data)\n      })\n      .on('error', function(err) {\n        return\n      })\n      .on('end', function(res) {\n        let langs = rows.shift()\n        log('ROWS-0', langs)\n        log('ROWS', rows)\n        rows = _.filter(rows, row=> { return row[0][0] != '#' })\n        let docs = []\n        rows.forEach(row=> {\n          let dict = row.shift().trim().replace(retsek, '')\n          let doc = {_id: dict, docs: []}\n          let trns = row.map(lang=> { return lang.split(';')})\n          let mdoc = {dict: dict, trns: _.flatten(trns)}\n          doc.docs.push(mdoc)\n          docs.push(doc)\n        })\n        log('BULK', docs)\n        let csvname = path.parse(csvpath).name\n        let localpath = path.resolve(upath, 'pouch', csvname)\n        let localDB = new PouchDB(localpath)\n        localDB.bulkDocs(docs)\n          .then(function (result) {\n            localDB.dname = csvname\n            dbs.push(localDB)\n            let cfg = setCfg(upath, csvname, localpath)\n            // log('BULK-RES, dbs:', dbs.length)\n            // log('BULK-RES, cfg:', cfg)\n            cb(true)\n          }).catch(function (err) {\n            console.log('CSVERR', err);\n            cb(false)\n          })\n      })\n}\n\nexport function exportCSV(csvname) {\n  let db = _.find(dbs, db=> { return db.dname == csvname })\n  return db.allDocs({\n    include_docs: true,\n    startkey: startkey,\n    endkey: endkey\n  }).then(function (res) {\n    let docs = res.rows.map(row=> { return row.doc })\n    let csv = ''\n    docs.forEach(doc=> {\n      let head = doc._id\n      let trns = doc.docs.map(rdoc=> { return rdoc.trns })\n      let trn = _.flatten(trns).join(';')\n      let commas = trn.split(',')\n      let value = (commas.length > 1) ? JSON.stringify(trn) : trn\n      let str = [head, value].join(',')\n      str = [str, '\\n'].join('')\n      csv += str\n    })\n    let upath = settings.get('upath')\n    let filename = [csvname, 'csv'].join('.')\n    let manifest = [csvname, 'json'].join('.')\n    let filepath = path.resolve(upath, filename)\n    let manipath = path.resolve(upath, manifest)\n    fse.writeFile(filepath, csv, function(err) {\n      if (err) return false\n      db.get('description')\n        .then(function(doc) {\n          fse.writeJson(manipath, doc)\n            .then(() => {\n              return true\n            })\n            .catch(err => {\n              console.error(err)\n              return false\n            })\n        })\n    })\n  })\n}\n","// This is main process of Electron, started as first thing when your\n// app starts. It runs through entire life of your application.\n// It doesn't have any windows which you can see on screen, but we can open\n// window from here.\n\nimport _ from 'lodash'\nimport path from \"path\";\nimport url from \"url\"\nimport { app, BrowserWindow, Menu, ipcMain, globalShortcut } from \"electron\"\nimport { libMenuTemplate } from \"./menu/lib_menu_template\"\nimport { aboutMenuTemplate } from \"./menu/about_menu_template\"\nimport { dictMenuTemplate } from \"./menu/dict_menu_template\"\nimport { helpMenuTemplate } from \"./menu/help_menu_template\"\n\nimport { setDBs, replicate, infoDB, remoteDicts, queryDBs, scanLocalDict, importCSV, exportCSV, cleanupDB } from \"./dbs/pouch\"\n\nimport { devMenuTemplate } from \"./menu/dev_menu_template\"\nimport { editMenuTemplate } from \"./menu/edit_menu_template\"\n// import createWindow from \"./helpers/window\"\nconst settings = require('electron-settings')\n// const windowStateKeeper = require('electron-window-state')\nconst log = console.log\n\n// Special module holding environment variables which you declared\n// in config/env_xxx.json file.\nimport env from \"env\"\n\nconst setApplicationMenu = () => {\n  // const menus = [libMenuTemplate, fileMenuTemplate, aboutMenuTemplate, authMenuTemplate, helpMenuTemplate]\n  // const menus = [libMenuTemplate, aboutMenuTemplate, helpMenuTemplate]\n  const menus = [libMenuTemplate, dictMenuTemplate, aboutMenuTemplate, helpMenuTemplate]\n  if (env.name !== \"production\") {\n    // menus.push(devMenuTemplate)\n  }\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus))\n}\n\n// Save userData in separate folders for each environment.\n// Thanks to this you can use production and development versions of the app\n// on same machine like those are two separate apps.\nif (env.name !== \"production\") {\n  const userDataPath = app.getPath(\"userData\")\n  app.setPath(\"userData\", `${userDataPath} (${env.name})`)\n}\n\napp.on(\"ready\", () => {\n  setApplicationMenu()\n\n  // let mainWindowState = windowStateKeeper({\n  //   defaultWidth: 1000,\n  //   defaultHeight: 800\n  // })\n\n  let opts = {webPreferences: {\n    nodeIntegration: true\n  }}\n\n  // Object.assign(opts, winBounds)\n\n  const win = new BrowserWindow(opts)\n\n  let winBounds = settings.get('winBounds') || win.getBounds()\n  winBounds.y -= 21\n  log('winBounds', winBounds)\n\n  win.setBounds(winBounds)\n\n  win.loadURL(\n    url.format({\n      pathname: path.join(__dirname, \"app.html\"),\n      protocol: \"file:\",\n      slashes: true\n    })\n  )\n\n  if (env.name === \"development\") {\n    win.openDevTools()\n  }\n\n  win.webContents.on('did-finish-load', () => {\n    let pckg = require('../package.json')\n    let name = pckg.name\n    let version = pckg.version\n    win.webContents.send('version', version )\n    win.setTitle([name, 'v.', version].join(' '))\n  })\n\n  win.on('resize', function () {\n    win.webContents.send('reload')\n  })\n\n  win.on('close', () => {\n    settings.set('winBounds', win.getBounds())\n  })\n\n  // globalShortcut.register('CommandOrControl+R', () => win.webContents.send('reread'))\n  // globalShortcut.register('CommandOrControl+R', () => win.reload())\n  globalShortcut.register('CommandOrControl+Shift+R', () => win.reload())\n  // globalShortcut.register('CommandOrControl+R', () => win.reload())\n\n  const apath = app.getAppPath()\n  const upath = app.getPath(\"userData\")\n  settings.set('apath', apath)\n  settings.set('upath', upath)\n\n  setDBs(upath)\n\n  ipcMain.on('infoDB', (event, dname) => {\n    infoDB(upath, dname)\n  })\n\n  ipcMain.on('queryDBs', (event, query) => {\n    queryDBs(query)\n      .then(function(query) {\n        event.sender.send('replayDBs', query)\n      })\n  })\n\n  ipcMain.on('import-from-csv', (event, csvpath) => {\n    importCSV(csvpath, function(res) {\n      log('import-from-csv', res)\n      event.sender.send('csvReply', res)\n    })\n  })\n\n  ipcMain.on('export-to-csv', (event, csvname) => {\n    exportCSV(csvname)\n      .then(function (res) {\n        if (res) log('DOCS', res)\n        event.sender.send('csvReply', true)\n      }).catch(function (err) {\n        console.log('ERR', err);\n        event.sender.send('csvReply', false)\n      });\n  })\n\n  ipcMain.on('scanLocalDict', (event, datapath) => {\n    scanLocalDict(datapath)\n    event.sender.send('scanLocalReply')\n  })\n\n  ipcMain.on('remoteDicts', (event, query) => {\n    // log('B: REMOTE DICTS START')\n    remoteDicts()\n      .then(function(rdbs) {\n        log('B: REMOTE DICTS:', rdbs)\n        rdbs = _.filter(rdbs, dname=> { return dname[0] != '_' })\n        event.sender.send('remoteDictsReply', rdbs)\n      }).catch(function (err) {\n        log('B: REMOTE DICTS ERR')\n        event.sender.send('remoteDictsReply', false)\n      });\n  })\n\n  ipcMain.on('replicate', (event, dname) => {\n    console.log('B:REPLICATE', dname)\n    let localpath = path.resolve(upath, 'pouch', dname)\n    replicate(upath, dname)\n      .then(function (res) {\n        log('B: replicate done', res)\n        event.sender.send('replicateReply', true)\n      }).catch(function (err) {\n        event.sender.send('replicateReply', false)\n      });\n  })\n\n  ipcMain.on('cleanupDB', (event, datapath) => {\n    cleanupDB(upath, function(res) {\n      event.sender.send('cleanupReply', res)\n    })\n  })\n\n\n\n})\n\napp.on(\"window-all-closed\", () => {\n  app.quit()\n})\n"],"sourceRoot":""}