{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"lodash\"","webpack:///./src/lib/pouch.js","webpack:///external \"path\"","webpack:///external \"electron-settings\"","webpack:///external \"fs-extra\"","webpack:///external \"electron-is-dev\"","webpack:///external \"pouchdb\"","webpack:///external \"pouchdb-load\"","webpack:///external \"node-couchdb\"","webpack:///external \"url\"","webpack:///./src/menu/lib_menu_template.js","webpack:///./src/menu/about_menu_template.js","webpack:///./src/menu/dict_menu_template.js","webpack:///./src/menu/help_menu_template.js","webpack:///./src/background.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__webpack_exports__","remoteDicts","replicate","getCfg","queryDBs","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","path","fse","settings","log","console","PouchDB","plugin","dbs","NodeCouchDb","couch","host","protocol","port","auth","user","pass","listDatabases","catch","err","remotepath","localpath","localDB","info","then","load","upath","pouchpath","resolve","fns","readdirSync","oldcfg","cfg","forEach","dn","idx","old","_","find","dict","push","newdict","active","sortBy","set","dbnames","compact","map","dpath","pouch","dname","weight","setDBs","keys","Promise","all","db","allDocs","include_docs","res","rows","Error","rdocs","row","doc","docs","flatten","rdoc","length","libMenuTemplate","label","submenu","accelerator","click","BrowserWindow","getFocusedWindow","webContents","send","app","quit","aboutMenuTemplate","dictMenuTemplate","helpMenuTemplate","toggleDevTools","env","userDataPath","getPath","setPath","on","menus","Menu","setApplicationMenu","buildFromTemplate","winBounds","y","win","webPreferences","nodeIntegration","setBounds","loadURL","url","format","pathname","join","__dirname","slashes","openDevTools","pckg","version","setTitle","getBounds","globalShortcut","register","reload","apath","getAppPath","ipcMain","event","dbname","sender","query","rdbs"],"mappings":"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","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","module.exports = require(\"electron\");","module.exports = require(\"lodash\");","import _ from 'lodash'\n\n// import { replicate } from \"../../../replicator.js\";\n\nconst path = require('path')\n\nconst fse = require('fs-extra')\n// const curl = require('curl')\n\nconst isDev = require('electron-is-dev')\nconst settings = require('electron-settings')\nconst log = console.log\nconst PouchDB = require('pouchdb')\n\nPouchDB.plugin(require('pouchdb-load'));\n\nlet dbs = []\n\nconst NodeCouchDb = require('node-couchdb');\nconst couch = new NodeCouchDb()\nconst diglossa = new NodeCouchDb({\n  host: 'couchdb.external.service',\n  protocol: 'https',\n  port: 6984\n})\nconst couchAuth = new NodeCouchDb({\n  auth: {\n    user: 'login',\n    pass: 'secret'\n  }\n})\n\nexport function remoteDicts() {\n  return couch.listDatabases()\n    .catch(function(err) {\n      log('REMOTE DICTS ERR', err)\n    })\n}\n\nexport function replicate(remotepath, localpath) {\n  log('REPLICATE LOCAL', localpath)\n  let localDB = new PouchDB(localpath);\n  // return localDB.load('http://localhost:3000/dumps/dump.txt')\n  return localDB.info()\n    .then(function(info) {\n      log('REPL-BEFORE-INFO', info)\n      return localDB.load('http://localhost:3000/dumps/dump.txt')\n    })\n\n  // let dumpedString = 'http://localhost:3000/api/vasilyev'\n  // log('REPL:dumpedString', dumpedString.length)\n  // return localDB.load('http://localhost:3000/api/vasilyev')\n  // return localDB.load('http://localhost:3000/dumps/dump.txt')\n}\n\nfunction setDBs(upath, cfg) {\n  dbs = []\n  let dbnames = _.compact(cfg.map(dict => { return (dict.active) ? dict.name : null }))\n  log('setDBNS', dbnames)\n  dbnames.forEach((dn, idx) => {\n    let dpath = path.resolve(upath, 'pouch', dn)\n    let pouch = new PouchDB(dpath)\n    pouch.dname = dn\n    pouch.weight = idx\n    dbs.push(pouch)\n  })\n  return dbnames\n}\n\nexport function getCfg() {\n  let upath = settings.get('upath')\n  let pouchpath = path.resolve(upath, 'pouch')\n  let fns = fse.readdirSync(pouchpath)\n  let oldcfg = settings.get('cfg') || []\n  let cfg = []\n  fns.forEach((dn, idx) => {\n    let old = _.find(oldcfg, dict=> {return dict.name == dn })\n    if (old) cfg.push(old)\n    else {\n      let newdict = {name: dn, active: true, idx: 100+idx}\n      cfg.push(newdict)\n    }\n  })\n  cfg = _.sortBy(cfg, 'idx')\n  cfg.forEach((dict, idx)=> { dict.idx = idx })\n  settings.set('cfg', cfg)\n  setDBs(upath, cfg)\n  return cfg\n}\n\nexport function queryDBs (keys) {\n  return Promise.all(dbs.map(function (db) {\n    return db.allDocs({\n      keys: keys,\n      include_docs: true\n    })\n      .then(function (res) {\n        if (!res || !res.rows) throw new Error('no dbn result')\n        let rdocs = _.compact(res.rows.map(row => { return row.doc }))\n        let docs = _.flatten(_.compact(rdocs.map(rdoc => { return rdoc.docs })))\n        if (!docs.length) return []\n        docs.forEach(doc => { doc.dname = db.dname, doc.weight = db.weight })\n        log('======DOCS', docs)\n        return docs\n      }).catch(function (err) {\n        console.log('ERR GET DBs', err)\n      })\n  }))\n}\n\n// adduser --system --home /opt/couchdb --no-create-home --shell /bin/bash -g couchdb couchdb\n// useradd --system -b /opt/couchdb --shell /bin/bash -g couchdb couchdb\n// sudo -i -u couchdb bin/couchdb\n// lobsang vasilyev\n\nexport function infoDB(localpath) {\n  let localDB = new PouchDB(localpath)\n  return localDB.info()\n}\n\nexport function cleanupDB(state) {\n  log('CLEAN UP')\n}\n\n// export function replicate_STREAM(remotepath, localpath) {\n//   let stream = new MemoryStream();\n//   let source = new PouchDB(remotepath);\n//   let dest = new PouchDB(localpath);\n\n//   return Promise.all([\n//     source.dump(stream),\n//     dest.load(stream)\n//   ])\n//     // .then(function () {\n//     //   console.log('Hooray the stream replication is complete!');\n//     // }).catch(function (err) {\n//     //   console.log('oh no an error', err);\n//     // });\n// }\n\nexport function replicate_(remotepath, localpath) {\n  // localpath += '___'\n  let upath = '/home/michael/.config/Pecha.js\\ \\(development\\)'\n  localpath = path.resolve(upath, 'pouch', 'vasilyev')\n  remotepath = ['http://localhost:5984', 'vasilyev'].join('/')\n  log('LOCALPATH', localpath)\n  log('REMOTEPATH', remotepath)\n   let localDB = new PouchDB(localpath)\n  // localDB.dname = dbname\n  let remoteDB = new PouchDB(remotepath)\n\n  return PouchDB.replicate(remoteDB, localDB, {\n    // live: true,\n    // retry: true\n    batch_size: 100,\n    timeout: false\n  }).on('change', function (info) {\n    log('change', info.ok)\n  }).on('paused', function (err) {\n    log('paused', err)\n  }).on('active', function (res) {\n    log('active', res)\n  }).on('denied', function (err) {\n    log('denied', err)\n  }).on('complete', function (info) {\n    log('complete', info.ok)\n  }).on('error', function (err) {\n    log('error', err)\n  })\n\n\n  // return localDB.info()\n  //   .then(function(info) {\n  //     return PouchDB.replicate(remoteDB, localDB, {\n  //       // live: true,\n  //       // retry: true\n  //       batch_size: 10000,\n  //       timeout: false\n  //     }).on('change', function (info) {\n  //       log('change', info.ok)\n  //     }).on('paused', function (err) {\n  //       log('paused', err)\n  //     }).on('active', function (res) {\n  //       log('active', res)\n  //     }).on('denied', function (err) {\n  //       log('denied', err)\n  //     }).on('complete', function (info) {\n  //       log('complete', info.ok)\n  //     }).on('error', function (err) {\n  //       log('error', err)\n  //     })\n  //   })\n  //   // .then(function() {\n  //   //   localDB.info()\n  //   // })\n\n  // remoteDB.replicate.to(localDB).then(function (result) {\n  //   log('REPLICATION COMPLETED', result);\n  //   localDB.info()\n  //     .then(function(info) {\n  //           return result\n  //     })\n  // }).catch(function (err) {\n  //   log(err);\n  // })\n}\n\n  // localDB.replicate.from(remoteDB, {batch_size: 1000})\n  //   .on('complete', function (info) {\n  //     log('REPL', info)\n  //     cb(true)\n  //   }).on('error', function (err) {\n  //     // handle error\n  //     log('____ERR', err)\n  //     cb(false)\n  //   })\n\n// {\n//   let rep = PouchDB.replicate(remoteDB, localDB, {\n//     // live: true,\n//     // retry: true\n//   }).on('change', function (info) {\n//     log('change', info)\n//   }).on('paused', function (err) {\n//     log('paused', err)\n//   }).on('active', function (res) {\n//     log('active', res)\n//   }).on('denied', function (err) {\n//     log('denied', err)\n//   }).on('complete', function (info) {\n//     log('complete', info)\n//   }).on('error', function (err) {\n//     log('error', err)\n//   })\n// }\n","module.exports = require(\"path\");","module.exports = require(\"electron-settings\");","module.exports = require(\"fs-extra\");","module.exports = require(\"electron-is-dev\");","module.exports = require(\"pouchdb\");","module.exports = require(\"pouchdb-load\");","module.exports = require(\"node-couchdb\");","module.exports = require(\"url\");","import { app, BrowserWindow } from \"electron\";\n\nexport const libMenuTemplate = {\n  label: \"File\",\n  submenu: [\n    {  label: \"Home\",\n       accelerator: \"CmdOrCtrl+L\",\n       click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'home') } },\n    { label: \"Quit\",\n      accelerator: \"CmdOrCtrl+Q\",\n      click: () => {\n        app.quit();\n      }\n    }\n  ]\n}\n","import { app, BrowserWindow } from \"electron\";\n\nexport const aboutMenuTemplate = {\n  label: \"About\",\n  submenu: [\n    { label: \"What does this program do?\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'about') } },\n    { label: \"Code and Download\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'code') } },\n    { label: \"License\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'license') } },\n    { label: \"Acknowledgements\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'acknowledgements') } }\n  ]\n};\n","import { app, BrowserWindow } from \"electron\";\n\nexport const dictMenuTemplate = {\n  label: \"Dict\",\n  submenu: [\n    { label: \"clone dicts from server\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'clonedicts') } },\n    { label: \"arrange local dicts\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'activedicts') } },\n    { label: \"export CSV to dict\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'csv') } },\n    { label: \"create CSV dict from texts\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'localdict') } },\n    // { label: \"upload dict to server (disabled)\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('action', 'upload') } },\n    { label: \"cleanup DBs completely\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'cleanup') } }\n  ]\n};\n","import { app, BrowserWindow } from \"electron\";\n\nexport const helpMenuTemplate = {\n  label: \"Help\",\n  submenu: [\n    { label: \"hot keys\", click: () => { BrowserWindow.getFocusedWindow().webContents.send('section', 'help') } },\n    { label: \"Toggle DevTools\",\n      accelerator: \"Alt+CmdOrCtrl+I\",\n      click: () => {\n        BrowserWindow.getFocusedWindow().toggleDevTools();\n      }\n    }\n  ]\n};\n","// This is main process of Electron, started as first thing when your\n// app starts. It runs through entire life of your application.\n// It doesn't have any windows which you can see on screen, but we can open\n// window from here.\n\nimport path from \"path\";\nimport url from \"url\"\nimport { app, BrowserWindow, Menu, ipcMain, globalShortcut } from \"electron\"\nimport { libMenuTemplate } from \"./menu/lib_menu_template\"\nimport { aboutMenuTemplate } from \"./menu/about_menu_template\"\nimport { dictMenuTemplate } from \"./menu/dict_menu_template\"\nimport { helpMenuTemplate } from \"./menu/help_menu_template\"\n\nimport { getCfg, replicate, infoDB, queryDBs, remoteDicts } from \"./lib/pouch\"\n\nimport { devMenuTemplate } from \"./menu/dev_menu_template\"\nimport { editMenuTemplate } from \"./menu/edit_menu_template\"\n// import createWindow from \"./helpers/window\"\nconst settings = require('electron-settings')\n// const windowStateKeeper = require('electron-window-state')\nconst log = console.log\n\n// Special module holding environment variables which you declared\n// in config/env_xxx.json file.\nimport env from \"env\"\n\nconst setApplicationMenu = () => {\n  // const menus = [libMenuTemplate, fileMenuTemplate, aboutMenuTemplate, authMenuTemplate, helpMenuTemplate]\n  // const menus = [libMenuTemplate, aboutMenuTemplate, helpMenuTemplate]\n  const menus = [libMenuTemplate, dictMenuTemplate, aboutMenuTemplate, helpMenuTemplate]\n  if (env.name !== \"production\") {\n    // menus.push(devMenuTemplate)\n  }\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus))\n}\n\n// Save userData in separate folders for each environment.\n// Thanks to this you can use production and development versions of the app\n// on same machine like those are two separate apps.\nif (env.name !== \"production\") {\n  const userDataPath = app.getPath(\"userData\")\n  app.setPath(\"userData\", `${userDataPath} (${env.name})`)\n}\n\napp.on(\"ready\", () => {\n  setApplicationMenu()\n\n  // let mainWindowState = windowStateKeeper({\n  //   defaultWidth: 1000,\n  //   defaultHeight: 800\n  // })\n\n  let winBounds = settings.get('winBounds')\n  winBounds.y -= 21\n  log('winBounds', winBounds)\n\n  let opts = {webPreferences: {\n    nodeIntegration: true\n  }}\n\n  // Object.assign(opts, winBounds)\n\n  const win = new BrowserWindow(opts)\n  win.setBounds(winBounds)\n  // const win = new BrowserWindow({\n  //   'x': mainWindowState.x,\n  //   'y': mainWindowState.y -20,\n  //   'width': mainWindowState.width,\n  //   'height': mainWindowState.height,\n  //   webPreferences: {\n  //     nodeIntegration: true\n  //   }\n  // })\n\n  win.loadURL(\n    url.format({\n      pathname: path.join(__dirname, \"app.html\"),\n      protocol: \"file:\",\n      slashes: true\n    })\n  )\n\n  if (env.name === \"development\") {\n    win.openDevTools()\n  }\n\n  win.webContents.on('did-finish-load', () => {\n    let pckg = require('../package.json')\n    let name = pckg.name\n    let version = pckg.version\n    // let aversion = pckg.dependencies.antrax.replace('^', '')\n    win.webContents.send('version', version )\n    win.setTitle([name, 'v.', version].join(' '))\n  })\n\n  win.on('resize', function () {\n    win.webContents.send('reload')\n  })\n\n  win.on('close', () => {\n    settings.set('winBounds', win.getBounds())\n  })\n\n  // globalShortcut.register('CommandOrControl+R', () => win.webContents.send('reread'))\n  // globalShortcut.register('CommandOrControl+R', () => win.reload())\n  globalShortcut.register('CommandOrControl+Shift+R', () => win.reload())\n  // globalShortcut.register('CommandOrControl+R', () => win.reload())\n\n  const apath = app.getAppPath()\n  const upath = app.getPath(\"userData\")\n  settings.set('apath', apath)\n  settings.set('upath', upath)\n\n  getCfg()\n\n  let localpath = path.resolve(upath, 'pouch', 'vasilyev')\n  let remotepath = ['http://localhost:5984', 'vasilyev'].join('/')\n  // let localpath = ''\n  // let remotepath = ''\n\n  ipcMain.on('replicate', (event, dbname) => {\n    console.log('B:REPLICATE', dbname)\n    let localpath = path.resolve(upath, 'pouch', dbname)\n    replicate(remotepath, localpath)\n      .then(function (res) {\n        console.log('Hooray the stream replication is complete!', res);\n        getCfg()\n        event.sender.send('replicateOK', res)\n      }).catch(function (err) {\n        console.log('oh no an error', err);\n      });\n  })\n\n  ipcMain.on('queryDBs', (event, query) => {\n    queryDBs(query.keys)\n      .then(function(docs) {\n        query.docs = docs\n        event.sender.send('replayDBs', query)\n      })\n  })\n\n  ipcMain.on('remoteDicts', (event, query) => {\n    log('B: REMOTE DICTS START')\n    remoteDicts()\n      .then(function(rdbs) {\n        log('REMOTE DICTS', rdbs)\n        event.sender.send('remoteDictsReply', rdbs)\n      })\n  })\n})\n\napp.on(\"window-all-closed\", () => {\n  app.quit()\n})\n"],"sourceRoot":""}