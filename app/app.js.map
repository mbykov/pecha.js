{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"lodash\"","webpack:///external \"path\"","webpack:///external \"electron-settings\"","webpack:///external \"fs-extra\"","webpack:///external \"electron-is-dev\"","webpack:///external \"pouchdb\"","webpack:///external \"electron-clipboard-extended\"","webpack:///external \"slash\"","webpack:///external \"split.js\"","webpack:///external \"cholok\"","webpack:///external \"util\"","webpack:///external \"pouchdb-authentication\"","webpack:///external \"mousetrap\"","webpack:///external \"json5\"","webpack:///external \"axios\"","webpack:///./src/lib/utils.js","webpack:///./src/lib/tibetan_data.js","webpack:///./src/lib/parsedata.js","webpack:///./src/lib/dict.js","webpack:///./src/lib/auth.js","webpack:///./src/lib/nav.js","webpack:///./src/lib/sband.js","webpack:///./src/lib/segmenter.js","webpack:///./src/lib/main.js","webpack:///./src/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","q","sel","document","querySelector","qs","querySelectorAll","tag","style","el","createElement","classList","add","span","str","textContent","empty","hasChildNodes","removeChild","lastChild","getCoords","getBoundingClientRect","placePopup","coords","top","join","left","getInnermostHovered","slice","pop","tibsyms","tibsuff","tsek","log","console","showText","state","pars","length","osource","oresult","forEach","spans","opar","spn","ospan","text","tib","punct","appendChild","showCholok","trnanscript","cholok","ncoords","otrans","remove","showPopup","compound","chains","JSON","parse","dataset","err","upper","closest","oul","oambi","body","bottom","createPopup","seg","oline","ambi","stringify","docs","showCompound","chain","owf","showAmbi","settings","ipcRenderer","on","event","rdbs","cfg","readynames","map","cf","installed","_","uniq","concat","dbnames","difference","otable","dbname","calls","tdnames","tr","includes","capitalize","otr","setAttribute","odt","oink","clone","showRemoteDicts","res","path","PouchDB","plugin","app","remote","upath","getAppPath","getPath","Mousetrap","getCurrentWindow","split","history","hstate","navigate","section","sections","Array","hideAll","sectionId","showSection","old","push","progress","sizes","mono","collapse","setSizes","set","Split","gutterSize","cursor","minSize","onDragEnd","reload","addEventListener","ev","twoPanes","send","which","goLeft","goRight","serverAuth","skip_setup","localpath","resolve","sync","live","retry","signUp","response","then","signup","coderanges","zho","grc","mainResults","keys","trim","retsek","RegExp","replace","lastsek","last","pdchs","segs","depth","rec","pdch","head","tail","flakes","idx","flake","reverse","scrape","flatten","cleans","clean","segmenter","keyres","mainKeys","added","syl","resyl","poss","main","totalKeys","query","filter","selectBests","max","sum","segment","longests","min","bests","full","fulls","any","segdocs","doc","reh","startWith","dict","makeChains","ambitmp","first","adocs","commonParts","parsePhrase","compactDocs","clipboard","dialog","container","link","import","cloneNode","action","showOpenDialog","properties","filters","extensions","parseCSV","cleanupDB","data","target","external","href","shell","openExternal","ctrlKey","popup","contains","shiftKey","wf","odict","odname","dname","oarticle","trns","trn","showResults","ohover","id","code","re","test","wopunct","rep","rows","row","spns","rclause","clauses","compact","clause","sband","readText","startWatching"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","module.exports = require(\"electron\");","module.exports = require(\"lodash\");","module.exports = require(\"path\");","module.exports = require(\"electron-settings\");","module.exports = require(\"fs-extra\");","module.exports = require(\"electron-is-dev\");","module.exports = require(\"pouchdb\");","module.exports = require(\"electron-clipboard-extended\");","module.exports = require(\"slash\");","module.exports = require(\"split.js\");","module.exports = require(\"cholok\");","module.exports = require(\"util\");","module.exports = require(\"pouchdb-authentication\");","module.exports = require(\"mousetrap\");","module.exports = require(\"json5\");","module.exports = require(\"axios\");","import _ from 'lodash'\n\nlet util = require('util')\n\nexport function q (sel) {\n  return document.querySelector(sel)\n}\n\nexport function qs (sel) {\n  return document.querySelectorAll(sel)\n}\n\nexport function create (tag, style) {\n  let el = document.createElement(tag)\n  if (style) el.classList.add(style)\n  return el\n}\n\nexport function recreateDiv (sel) {\n  let el = document.querySelector(sel)\n  if (el) el.parentElement.removeChild(el)\n  el = document.createElement('div')\n  el.classList.add(sel)\n  // el.id = sel\n  return el\n}\n\nexport function recreate (element) {\n  var newElement = element.cloneNode(true)\n  element.parentNode.replaceChild(newElement, element)\n}\n\n// function cret (str) {\n//   return document.createTextNode(str)\n// }\n\nexport function span (str, style) {\n  let el = document.createElement('span')\n  el.textContent = str\n  if (style) el.classList.add(style)\n  return el\n}\n\nexport function br () {\n  let oBR = document.createElement('br')\n  return oBR\n}\n\nexport function div (str, style) {\n  let el = document.createElement('div')\n  el.textContent = str\n  if (style) el.classList.add(style)\n  return el\n}\n\nexport function p (str, style) {\n  let el = document.createElement('p')\n  el.textContent = str\n  if (style) el.classList.add(style)\n  return el\n}\n\nexport function empty (el) {\n  if (!el) return\n  while (el.hasChildNodes()) {\n    el.removeChild(el.lastChild)\n  }\n}\n\nexport function remove (el) {\n  if (!el) return\n  el.parentElement.removeChild(el)\n}\n\nexport function removeAll (sel) {\n  let els = document.querySelectorAll(sel)\n  els.forEach(el => { el.parentElement.removeChild(el) })\n}\n\n// function closeAll() {\n//     words = null\n//     // window.close()\n//     ipcRenderer.send('sync', 'window-hide')\n// }\n\nexport function findAncestor (el, cls) {\n  while ((el = el.parentElement) && el.classList.contains(cls)) {\n    return el\n  }\n}\n\nexport function plog () {\n  var vs = _.values(arguments)\n  if (vs.length === 1) vs = vs[0]\n  // console.log(util.inspect(vs, {showHidden: false, depth: null}))\n  console.log(util.inspect(vs, {showHidden: false, depth: 3}))\n}\n\nexport function getCoords (el) {\n  let rect = el.getBoundingClientRect()\n  return rect\n  // return {top: rect.top, left: rect.left}\n}\n\nexport function placePopup (coords, el) {\n  let top = [coords.top, 'px'].join('')\n  let left = [coords.left, 'px'].join('')\n  el.style.top = top\n  el.style.left = left\n}\n\n// https://stackoverflow.com/questions/24538450/get-element-currently-under-mouse-without-using-mouse-events\nexport function getInnermostHovered() { return [].slice.call(document.querySelectorAll(':hover')).pop(); }\n","//\n\nexport const tibsyms = {\n  tsek: '་'\n  // connective: 'འི',\n  // subordinative: 'ར', // ladon\n  // narrative: 'འོ',\n  // interrog: 'འམ',\n  // coupling: 'འི',\n  // ergative: 'ས',\n  // concessive: 'འང'\n}\n\nexport const tibsuff = ['འི', 'ར', 'འོ', 'འམ', 'འི', 'ས', 'འང']\n","//\nimport _ from 'lodash'\nimport { q, qs, empty, create, remove, span, p, div, getCoords, placePopup } from './utils'\nimport cholok from 'cholok'\nimport { tibsyms, tibsyls } from \"./tibetan_data\";\n\nlet tsek = tibsyms.tsek\nconst log = console.log\n\nexport function showText(state) {\n  if (!state || !state.pars || !state.pars.length) return\n  let pars = state.pars\n  // log('PARS', pars)\n  // let progress = q('#progress')\n  // progress.classList.add('is-shown')\n  let osource = q('#source')\n  let oresult = q('#result')\n  empty(osource)\n  empty(oresult)\n\n  // let wfs = []\n  pars.forEach(spans => {\n    let opar = p()\n    opar.classList.add('tibpar')\n    spans.forEach(spn => {\n      let ospan = span(spn.text)\n      if (spn.tib) ospan.classList.add('tibphrase') // , wfs.push(spn.text)\n      if (spn.punct) ospan.classList.add('punct') //, wfs.push(spn.text)\n      if (spn.text == ' ') ospan.classList.add('space')\n      opar.appendChild(ospan)\n    })\n    osource.appendChild(opar)\n  })\n\n  let grs = qs('span.tibetan')\n  // if (grs.length == 1) showResults(grs[0].textContent)\n}\n\nexport function showCholok(el) {\n  // log('SHOW CHOLOK', el)\n  let coords = getCoords(el)\n  let trnanscript = cholok(el.textContent)\n  let ncoords = {top: coords.top - 40, left: coords.left + 15}\n  let otrans = q('#transcript')\n  otrans.textContent = trnanscript\n  otrans.classList.remove('is-hidden')\n  placePopup(ncoords, otrans)\n}\n\nexport function parsePhrase(el, chain, lastsek) {\n  el.textContent = ''\n  chain.forEach((seg, idx)=> {\n    let ospan\n    if (seg.ambi) {\n      ospan = span(seg.seg, 'tibambi')\n      ospan.dataset.chains = JSON.stringify(seg.chains)\n    } else if (seg.docs.length) {\n      ospan = span(seg.seg, 'tibwf')\n      ospan.dataset.docs = JSON.stringify(seg.docs)\n    } else {\n      ospan = span(seg.seg, 'tibphrase')\n    }\n    el.appendChild(ospan)\n    if (idx < chain.length-1) el.appendChild(span(tsek, 'tsek'))\n  })\n  if (lastsek) el.appendChild(span(tsek, 'tsek'))\n  let progress = q('#progress')\n  progress.classList.remove('is-shown')\n}\n\nfunction createPopup(el, upper) {\n  let oambi\n  // is-hidden upper popup\n  if (upper) {\n    oambi = create('div', 'popup')\n    oambi.classList.add('upper')\n    document.body.appendChild(oambi)\n  } else oambi = q('#ambi')\n  // let oambi = (upper) ? q('#upper') : q('#ambi')\n  let coords = getCoords(el)\n  empty(oambi)\n  oambi.classList.remove('is-hidden')\n  let ncoords = {top: coords.bottom-3, left: coords.left}\n  placePopup(ncoords, oambi)\n  let oul = create('ul', 'ambilist')\n  oambi.appendChild(oul)\n  return oul\n}\n\nexport function showPopup(el, compound) {\n  let chains\n  try {\n    chains = JSON.parse(el.dataset.chains)\n  } catch(err) {\n    log('ERR: JSON chains', el)\n    return\n  }\n  let upper = (el.closest('.tibpar')) ? false : true\n  let oul = createPopup(el, upper)\n  // if (el.classList.contains('tibambi')) showAmbi(oul, chains)\n  // else if (el.classList.contains('tibwf')) showCompound(oul, chains)\n  if (compound) showCompound(oul, chains)\n  else showAmbi(oul, chains)\n\n  let progress = q('#progress')\n  progress.classList.remove('is-shown')\n}\n\nfunction showAmbi(oul, chains) {\n  oul.classList.add('danger')\n  chains.forEach(chain=> {\n    let oline = create('li', 'ambiline')\n    oul.appendChild(oline)\n    chain.forEach(seg=> {\n      let owf = (seg.docs.length) ? span(seg.seg, 'tibwf') : span(seg.seg, 'tibphrase')\n      if (seg.docs.length) owf.dataset.docs = JSON.stringify(seg.docs)\n      oline.appendChild(owf)\n    })\n  })\n}\n\nfunction showCompound(oul, chains) {\n  // log('COMPOUND', chains)\n  chains.forEach(seg=> {\n    let oline = create('li', 'ambiline')\n    oul.appendChild(oline)\n    let ospan\n    if (seg.ambi) {\n      ospan = span(seg.seg, 'tibambi')\n      ospan.dataset.chains = JSON.stringify(seg.chains)\n    } else if (seg.docs.length) {\n      ospan = span(seg.seg, 'tibwf')\n      ospan.dataset.docs = JSON.stringify(seg.docs)\n    } else {\n      ospan = span(seg.seg, 'tibphrase')\n    }\n    oline.appendChild(ospan)\n  })\n}\n\nexport function showResults(el) {\n  let osource = q('#source')\n  let oresult = q('#result')\n  empty(oresult)\n  let wf = el.textContent\n\n  let docs = JSON.parse(el.dataset.docs)\n  try {\n    docs = JSON.parse(el.dataset.docs)\n  } catch(err) {\n    log('ERR: JSON docs')\n    return\n  }\n  // log('RESULT docs', wf, docs)\n\n  let odict = create('div', 'dict')\n  oresult.appendChild(odict)\n  let owf = create('p', 'dict-wf')\n  owf.textContent = wf\n  odict.appendChild(owf)\n  docs.forEach(doc=> {\n    let odname = create('p', 'dict-dname')\n    odname.textContent = doc.dname\n    odict.appendChild(odname)\n    let oarticle = create('p', 'dict-article')\n    oarticle.textContent = doc.dict\n    odict.appendChild(oarticle)\n    let oul = create('ul', 'dict-ul')\n    odict.appendChild(oul)\n    if (!doc.trns) log('NO TRNS', doc)\n    if (!doc.trns) return\n    doc.trns.forEach(trn=> {\n      let oline = create('li', 'dict-line')\n      oline.textContent = trn\n      oul.appendChild(oline)\n    })\n  })\n}\n\n\nexport function noResult(el) {\n  log('NO RESULT')\n  // let oresult = q('#result')\n  // empty(oresult)\n  let progress = q('#progress')\n  progress.classList.remove('is-shown')\n}\n","//\nimport _ from 'lodash'\nimport { ipcRenderer } from \"electron\";\nimport { q, qs, empty, create, remove, span, p, div, getCoords, placePopup } from './utils'\n\nconst log = console.log\nconst settings = require('electron-settings')\n\nipcRenderer.on('remoteDictsReply', function (event, rdbs) {\n  showRemoteDicts(rdbs)\n})\n\nipcRenderer.on('replicateReply', function (event, res) {\n  log('____________ replicate', res)\n})\n\nexport function showRemoteDicts(rdbs) {\n  let cfg = settings.get('cfg')\n  // log('CLONE DICTS: CFG:', cfg)\n  let defaults = ['terms', 'verbs', 'lobsang', '_users']\n  let readynames = cfg.map(cf=> { return cf.name })\n  let installed = _.uniq(defaults.concat(readynames))\n  let dbnames = _.difference(rdbs, installed)\n  // log('INSTALLED___', installed, dbnames)\n\n  let otable = q('#server-dicts-table tbody')\n  dbnames.forEach(dbname=> {\n    let calls = qs('#server-dicts-table tr td')\n    let tdnames = _.map(calls, tr=> { return tr.textContent})\n    if (tdnames.includes(_.capitalize(dbname))) return\n    let otr = create('tr')\n    otr.setAttribute('newtr', true)\n    otable.appendChild(otr)\n    let odt = create('td')\n    otr.appendChild(odt)\n    odt.textContent = _.capitalize(dbname)\n    let oink = create('td', 'link')\n    oink.textContent = 'clone'\n    oink.dataset.clone = dbname\n    otr.appendChild(oink)\n  })\n}\n\nexport function parseCSV() {\n  log('PARSE STAR CSV')\n}\n","//\n\nconst path = require('path')\n\nconst settings = require('electron-settings')\nconst log = console.log\nconst PouchDB = require('pouchdb')\nPouchDB.plugin(require('pouchdb-authentication'));\n\nexport function signup(upath) {\n  let serverAuth = new PouchDB('http://localhost:5984/mydb', {skip_setup: true})\n  let localpath = path.resolve(upath, 'pouch', 'auth')\n  let localDB = new PouchDB(localpath)\n  localDB.sync(serverAuth, {live: true, retry: true}).on('error', console.log.bind(console))\n\n  serverAuth.signUp('batman', 'brucewayne', function (err, response) {\n    if (err) {\n      if (err.name === 'conflict') {\n        // \"batman\" already exists, choose another username\n      } else if (err.name === 'forbidden') {\n        // invalid username\n      } else {\n        // HTTP error, cosmic rays, etc.\n      }\n    }\n  })\n    .then(function(res) {\n      log('SIGNUP RES', res)\n    })\n  return\n}\n","//\nimport _ from \"lodash\"\nimport { ipcRenderer } from \"electron\";\nimport { q, qs, empty, create, remove, span, p, div, enclitic } from './utils'\nimport Split from 'split.js'\nimport { showText } from \"./parsedata\";\nimport { serverDicts, parseCSV } from \"./dict\";\nimport { signup } from \"./auth\";\n\nimport { remote } from \"electron\";\nconst app = remote.app;\nconst apath = app.getAppPath()\nconst upath = app.getPath(\"userData\")\n\nconst log = console.log\nconst clipboard = require('electron-clipboard-extended')\nconst settings = require('electron').remote.require('electron-settings')\nconst Mousetrap = require('mousetrap')\nconst fse = require('fs-extra')\nconst path = require('path')\nconst slash = require('slash')\nconst {getCurrentWindow} = require('electron').remote\n\nlet init = {section: 'home'}\nlet history = []\nlet hstate = 0\nlet split\n\nfunction twoPanes(state) {\n\n  let sizes = settings.get('split-sizes') || [50, 50]\n  if (split && state.mono) split.collapse(1)\n  else if (split) split.setSizes(sizes)\n\n  if (split) return\n  settings.set('split-sizes', sizes)\n\n  split = Split(['#source', '#result'], {\n    sizes: sizes,\n    gutterSize: 5,\n    cursor: 'col-resize',\n    minSize: [0, 0],\n    onDragEnd: function (sizes) {\n      settings.set('split-sizes', sizes)\n      getCurrentWindow().reload()\n    }\n  })\n  if (state.mono) split.collapse(1)\n\n  document.addEventListener(\"keydown\", function(ev) {\n    // keyPanes(ev, state)\n  }, false)\n\n  document.addEventListener(\"wheel\", function(ev) {\n    // scrollPanes(ev, state)\n  }, false)\n}\n\n// arrows\nMousetrap.bind(['alt+left', 'alt+right'], function(ev) {\n  if (ev.which == 37) goLeft()\n  else if (ev.which == 39) goRight()\n})\n\nMousetrap.bind(['alt+1', 'alt+2'], function(ev) {\n  // if (ev.which == 49) log('----1')\n  // else if (ev.which == 50) log('----2')\n})\n\nMousetrap.bind(['esc'], function(ev) {\n  // похоже, общий метод не получится\n})\n\nMousetrap.bind(['ctrl+i'], function(ev) {\n  log('CLICK INFO')\n  // ipcRenderer.send('info', 'vasilyev')\n})\n\nMousetrap.bind(['ctrl+u'], function(ev) {\n  log('CLICK SIGNUP')\n  signup(upath)\n  // ipcRenderer.send('info', 'vasilyev')\n})\n\n// Mousetrap.bind(['ctrl+j'], function(ev) {\n//   log('REPLICA_')\n//   let localpath = path.resolve(upath, 'pouch', 'vasilyev')\n//   let remotepath = ['http://localhost:5984', 'vasilyev'].join('/')\n//   replicate(remotepath, localpath)\n//     .then(function(res) {\n//       log('CTRL-J', res)\n//     })\n// })\n\n\nMousetrap.bind(['ctrl+p'], function(ev) {\n  log('ZERO CFG')\n  settings.set('cfg', '')\n})\n\nfunction hideAll () {\n  const sections = document.querySelectorAll('.section.is-shown')\n  Array.prototype.forEach.call(sections, (section) => {\n    section.classList.remove('is-shown')\n  })\n  let otrans = q('#transcript')\n  otrans.classList.add('is-hidden')\n  let oambi = q('#ambi')\n  oambi.classList.add('is-hidden')\n}\n\nfunction goLeft() {\n  if (hstate <= 0) return\n  else hstate--\n  let state = history[hstate]\n  state.old = true\n  navigate(state)\n}\n\nfunction goRight() {\n  if (hstate >= history.length-1) return\n  else hstate++\n  let state = history[hstate]\n  state.old = true\n  navigate(state)\n}\n\nexport function navigate(state) {\n  try {\n    state = JSON.parse(JSON.stringify(state))\n  } catch (err) {\n    log('NAV-state ERR', err)\n    state = {}\n  }\n  let section = state.section || 'home'\n  if (!section) state.section = 'home'\n  showSection(state.section)\n\n  if (!state.old) {\n    state.old = false\n    delete state.old\n    history.push(state)\n    hstate = history.length-1\n  }\n  let progress = q('#progress')\n  if (section == 'main') twoPanes(state), showText(state)\n  else if (section == 'clone') ipcRenderer.send('remoteDicts', '') // serverDicts()\n  else progress.classList.remove('is-shown')\n\n  // state = {section: 'home'}\n  settings.set('state', state)\n}\n\nfunction showSection(section) {\n  hideAll()\n  const sectionId = ['#', section].join('')\n  log('SEC ID', sectionId)\n  q(sectionId).classList.add('is-shown')\n}\n","// ================ потом перенести speckled band\n\nimport _ from \"lodash\";\nlet log = console.log\n\n// https://iso639-3.sil.org/code_tables/639/data --> three letter codes\n\n// punctuation \\u002E\\u002C\\u0021\\u003A\\u003B\\u00B7 - \\u0020\\u0027 - ... middle dot, - space, apostrophe\n// parens ()[]{-/\n// \\u0028\\u0029\\u005B\\u005D\\u007B\\u007D\\u002D\\u002F\n// greek 0370-03FF 1F00–1FFF\n// diactitic 0300-036F\n// tibetan shad - ། U+0F0D : TIBETAN MARK SHAD {shey} // punctuation\n\nlet puncts = '([\\u002E\\u002C\\u0021\\u003A\\u003B\\u00B7\\u0F0D])'\n\n// san - sansktit\nlet coderanges = {\n  'zho': '([\\u4E00-\\u9FFF]+)',\n  'tib': '([\\u0F00-\\u0FFF]+)',\n  'grc': '([\\u0370-\\u03FF\\u1F00-\\u1FFF\\u0300-\\u036F\\u0027]+)'\n}\n\nexport default (code, str) => {\n  let re = new RegExp(coderanges[code])\n  if (!re.test(str)) return\n  let clean = str.trim().replace(/᾽/g, \"\\'\")\n  let wopunct = clean.split(\"'\").join('')\n  if (!re.test(wopunct)) return\n  let rep = new RegExp(puncts)\n  let rows = clean.replace(/\\r?\\n+/, '\\n').split('\\n')\n  let rclauses = rows.map(row => { return row.split(rep) })\n  let spans = []\n  rows.forEach(row => {\n    let spns = []\n    let rclauses = row.split(rep)\n    rclauses.forEach(rclause => {\n      if (rep.test(rclause)) {\n        let spn = {text: rclause, punct: true}\n        spns.push(spn)\n      } else {\n        let clauses = rclause.split(re)\n        clauses = _.compact(clauses)\n        clauses.forEach(clause => {\n          let lang = (re.test(clause)) ? true : false\n          let spn = {text: clause}\n          if (lang) spn[code] = true\n          spns.push(spn)\n        })\n      }\n    })\n    spans.push(spns)\n  })\n  return spans\n}\n","import _ from 'lodash'\nimport { tibsyms, tibsuff } from \"./tibetan_data\";\n\nconst log = console.log\nconst tsek = tibsyms.tsek\n\nexport function totalKeys(pdchs) {\n  let mainKeys = _.uniq(_.flatten(pdchs))\n  let added = []\n  mainKeys.forEach(seg=>{\n    tibsuff.forEach(syl=>{\n      let resyl = new RegExp(syl+'$')\n      let poss = seg.replace(resyl, '')\n      if (seg != poss) added.push(poss)\n    })\n  })\n  return {main: mainKeys, added: added}\n  // let keys = segs.concat(added)\n  // return _.uniq(keys)\n  // return _.uniq(_.flatten(pdchs))\n}\n\nexport function segmenter(str) {\n  let segs = str.split(tsek)\n  let depth = (segs.length < 10) ? 10 : 2\n  // log('SEGS', segs)\n  let old = str\n  let size = segs.length\n  let pdchs = [[segs]]\n  function rec(segs, pdch) {\n    // log('PDCH', pdch)\n    let flakes = scrape(segs)\n    flakes.forEach(flake => {\n      pdch.push(flake.head)\n      pdch.push(flake.tail)\n      // pdch = pdch.concat(flake.head)\n      // pdch = pdch.concat(flake.tail)\n      if (_.flatten(pdch).join(tsek) == old) {\n        pdchs.push(_.clone(pdch))\n        pdch.pop()\n      }\n      if (pdch.length < depth) rec(flake.tail, pdch) // three parts for now !\n      // rec(flake.tail, pdch)\n      pdch.pop()\n    })\n  }\n  rec(segs, [])\n  let cleans = []\n  pdchs.forEach(pdch=> {\n    let clean = []\n    pdch.forEach(seg=>{\n      clean.push(seg.join(tsek))\n    })\n    cleans.push(clean)\n  })\n  return cleans\n}\n\nexport function scrape(segs) {\n  // log('SEGS', segs)\n  let head, tail\n  let flakes = []\n  for (let idx = 1; idx < segs.length + 1; idx++) {\n    head = segs.slice(0, idx)\n    tail = segs.slice(idx)\n    let flake = {head: head, tail: tail}\n    if (tail.length) flakes.push(flake)\n  }\n  return flakes.reverse()\n}\n\n// export function segmenter_(str) {\n//   let old = str\n//   let pdchs = [[str]]\n//   function rec(str, pdch) {\n//     // log('PDCH', pdch)\n//     let flakes = scrape(str)\n//     flakes.forEach(flake => {\n//       pdch.push(flake.head)\n//       pdch.push(flake.tail)\n//       if (pdch.join(tsek) == old) {\n//         pdchs.push(_.clone(pdch))\n//         pdch.pop()\n//       }\n//       if (pdch.length < 5) rec(flake.tail, pdch) // three parts for now !\n//       // rec(flake.tail, pdch)\n//       pdch.pop()\n//     })\n//   }\n//   rec(str, [])\n//   return pdchs\n// }\n\n// export function scrape_(str) {\n//   let segs = str.split(tsek)\n//   let head, tail\n//   let flakes = []\n//   for (let idx = 1; idx < segs.length + 1; idx++) {\n//     head = segs.slice(0, idx).join(tsek)\n//     tail = segs.slice(idx).join(tsek)\n//     let flake = {head: head, tail: tail}\n//     if (tail) flakes.push(flake)\n//   }\n//   return flakes.reverse()\n// }\n\n// export function totalKeys_(pdchs) {\n//   let segs = _.uniq(_.flatten(pdchs))\n//   let added = []\n//   segs.forEach(seg=>{\n//     tibsyls.forEach(syl=>{\n//       let resyl = new RegExp(syl+'$')\n//       let poss = seg.replace(resyl, '')\n//       if (seg != poss) added.push(poss)\n//     })\n//   })\n//   let keys = segs.concat(added)\n//   return _.uniq(keys)\n// }\n","//\nimport _ from 'lodash'\nimport { ipcRenderer } from \"electron\";\nimport { q, qs, empty, create, remove, span, p, div, getCoords, getInnermostHovered } from './utils'\nimport { scrape, segmenter, totalKeys } from \"./segmenter\";\nimport { tibsyms, tibsuff } from \"./tibetan_data\";\nimport { parsePhrase, noResult, showPopup } from \"./parsedata\";\n\nlet tsek = tibsyms.tsek\nconst log = console.log\n\nipcRenderer.on('replayDBs', function (event, query) {\n  compactDocs(query)\n})\n\nexport function mainResults(el, compound) {\n  let progress = q('#progress')\n  progress.classList.add('is-shown')\n  let text = el.textContent.trim()\n  let retsek = new RegExp(tsek+'$')\n  let str = text.replace(retsek, '')\n  let last = _.last(text)\n  let lastsek = (last == tsek) ? true : false\n  // let segs = str.split(tsek)\n  let pdchs = segmenter(str)\n  // log('MAIN pdchs:', segs.length, '=>', pdchs.length)\n\n  let keys\n  let keyres = totalKeys(pdchs)\n  if (compound) keys = _.filter(keyres.main, key=> { return key != str})\n  else keys =  _.uniq(keyres.main.concat(keyres.added))\n  // log('MAIN keys:', keyres.main, 'add', keyres.added)\n  // keys = keyres.main\n\n  let query = {keys: keys, pdchs: pdchs, compound: compound, lastsek: lastsek}\n  ipcRenderer.send('queryDBs', query)\n}\n\n// let query = {keys: keys, pdchs: pdchs, compound: compound, lastsek: lastsek}\nfunction compactDocs(query) {\n  let el = getInnermostHovered()\n  let docs = _.flatten(query.docs)\n  let res = makeChains(query.pdchs, docs)\n  let chains = res.chains\n  // log('FULL, CHAINS', res.full, chains.length, chains)\n  let chain\n  if (chains.length > 1) chain = commonParts(chains)\n  else if (chains.length == 1) chain = chains[0]\n  else {\n    noResult(el)\n    return\n  }\n  // log('CHAIN:', chain)\n  if (query.compound) {\n    // log('main-compound', chains.length, chain)\n    el.dataset.chains = JSON.stringify(chain)\n    showPopup(el, true)\n  }\n  else parsePhrase(el, chain, query.lastsek)\n}\n\n\nfunction commonParts(chains) {\n  let first = chains[0]\n  let clean = []\n  let ambitmp\n  for (let idx = 0; idx < first.length; idx++) {\n    let segs = chains.map(segs=> { return segs[idx].seg })\n    if (_.uniq(segs).length == 1) {\n      clean.push(first[idx])\n      ambitmp = null\n    } else {\n      if (!ambitmp) ambitmp = {ambi: true, seg: '', docs: []}, clean.push(ambitmp)\n      let segdocs = chains.map(segs=> { return {seg: segs[idx].seg, docs: segs[idx].docs}  })\n      ambitmp.docs.push(segdocs)\n    }\n  }\n  let ambis = _.filter(clean, seg=> { return seg.ambi })\n  ambis.forEach(ambi=>{\n    let first = ambi.docs[0]\n    let chains = []\n    for (let idx = 0; idx < first.length; idx++) {\n      let chain = ambi.docs.map(adocs=> { return adocs[idx] })\n      chains.push(chain)\n    }\n    ambi.chains = chains\n    let chain = chains[0]\n    ambi.seg = chain.map(seg=>{ return seg.seg}).join(tsek)\n  })\n  // log('___AMBIS___', ambis)\n  return clean\n}\n\nfunction makeChains(pdchs, docs) {\n  let chains = []\n  let fulls = []\n  pdchs.forEach(segs=>{\n    let chain = []\n    let any = false\n    let full = true\n    segs.forEach(seg=>{\n      let segdocs = _.filter(docs, doc => { return startWith(seg, doc.dict) })\n      if (segdocs.length) any = true\n      if (!segdocs.length) full = false\n      let doc = {seg: seg, docs: segdocs}\n      chain.push(doc)\n    })\n    if (any) chains.push(chain)\n    if (full) fulls.push(chain)\n  })\n  // здесь full только для справки, убрать!!!\n  let bests, full\n  if (fulls.length) bests = selectBests(fulls), full = true\n  else bests = selectBests(chains)\n  return {chains: bests, full: full}\n}\n\nfunction selectBests(chains) {\n  let max = _.max(chains.map(chain => {  return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length } ) )\n  // log('MAX', max)\n  let longests = _.filter(chains, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length >= max - 1 })\n  // longests = _.sortBy(longests, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length }).reverse()\n  // log('LNGST', longests)\n  // return longests\n\n  // // квадраты - выберет более равномерное деление, да, но отбросит тоже хорошие\n  // let max = _.max(chains.map(chain => {  return _.sum(chain.map(segment => { return segment.docs.length ? Math.pow(segment.seg.length, 2) : 0 }))/chain.length } ) )\n  // // log('MAX', max)\n  // let longests = _.filter(chains, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? Math.pow(segment.seg.length, 2) : 0 }))/chain.length >= max - 10 })\n\n  let min = _.min(longests.map(chain => {  return chain.length } ) )\n  // log('MIN', min)\n  let shortests  = _.filter(longests, chain => { return chain.length == min })\n  return shortests\n  // let maxlong = _.max(longests.map(chain => {  return chain.length } ) )\n  // // log('maxlong', maxlong)\n  // longests  = _.filter(longests, chain => { return chain.length == maxlong })\n  // return longests\n}\n\nfunction startWith(str, head) {\n  if (str == head) return true\n  let reh = new RegExp('^' + head)\n  let tail = str.replace(reh, '')\n  return (str != tail && tibsuff.includes(tail)) ?  true : false\n}\n\nfunction fullChains(chains) {\n  let fulls = []\n  chains.forEach(segs => {\n    let full = true\n    segs.forEach(seg => {\n      if (!seg.docs.length) full = false\n    })\n    if (full) fulls.push(segs)\n  })\n  return fulls\n}\n","// import \"./stylesheets/main.css\";\n\nimport _ from \"lodash\";\n// import Split from 'split.js'\nimport { remote } from \"electron\";\nimport { shell } from 'electron'\nimport { ipcRenderer } from \"electron\";\n\nimport { q, qs, empty, create, remove, span, p, div, getInnermostHovered } from './lib/utils'\nimport { navigate } from './lib/nav';\nimport sband from \"./lib/sband\";\nimport { showCholok, showResults, showPopup } from \"./lib/parsedata\";\nimport { mainResults } from \"./lib/main\";\n// import { synchServer, parseCSV } from \"./lib/dict\";\n\nconst settings = require('electron').remote.require('electron-settings')\n// const Mousetrap = require('mousetrap')\n\nconst JSON = require('json5')\nconst axios = require('axios')\n// let fse = require('fs-extra')\nconst slash = require('slash')\nconst log = console.log\n\nconst path = require('path')\n\nconst clipboard = require('electron-clipboard-extended')\nconst {dialog, getCurrentWindow} = require('electron').remote\n\nconst isDev = require('electron-is-dev')\n// const isDev = false\n// const isDev = true\n// const app = remote.app;\n// const apath = app.getAppPath()\n// const upath = app.getPath(\"userData\")\n\n\nlet over = q(\"#new-version\")\n\nlet container = q('#container')\nlet imports = qs('link[rel=\"import\"]')\nimports.forEach(link=> {\n  let content = link.import\n  let section = content.querySelector('.section')\n  container.appendChild(section.cloneNode(true))\n})\n\nipcRenderer.on('section', function (event, section) {\n  navigate({section: section})\n})\n\nipcRenderer.on('action', function (event, action) {\n  if (action == 'clonedicts') navigate({section: 'clone'})\n  else if (action == 'csv') dialog.showOpenDialog({properties: ['openFile'], filters: [{name: 'JSON', extensions: ['stardict'] }]}, parseCSV)\n  else if (action == 'cleanupdb') cleanupDB()\n})\n\n// ctrl-R\nipcRenderer.on('reread', function (event) {\n  let state = settings.get('state')\n  getCurrentWindow().reload()\n  navigate(state)\n})\n\n// let home = q('#home')\n// home.classList.add('is-shown')\nlet state = settings.get('state')\n// log('STATE1', state)\nif (!state) state = {section: 'home'}\nnavigate(state)\n\ndocument.addEventListener('click', (ev) => {\n  let data = ev.target.dataset\n  if (!data) return\n  if (data.external) {\n    let href = ev.target.textContent\n    shell.openExternal(href)\n  } else if (data.section) {\n    navigate({section: data.section})\n  } else if (data.clone) {\n    ipcRenderer.send('replicate', data.clone)\n  } else if (data.docs) {\n    mainResults(ev.target , true)\n  }\n})\n\ndocument.addEventListener(\"mouseover\", function(ev) {\n  if (!ev.target.textContent) return\n  if (ev.ctrlKey == true) return\n  let tpar = ev.target.closest('.tibpar')\n  if (tpar) hidePopups()\n\n  if (ev.target.classList.contains('tibphrase')) {\n    if (ev.shiftKey == true) {\n      showCholok(ev.target)\n    } else {\n      mainResults(ev.target)\n    }\n  } else if (ev.target.classList.contains('tibwf')) {\n    showResults(ev.target)\n  } else if (ev.target.classList.contains('tibambi')) {\n    showPopup(ev.target) // mouseover, tibambi\n  }\n}, false)\n\ndocument.addEventListener(\"mouseleave\", function(ev) {\n  if (!ev.target.classList) return\n  if (ev.ctrlKey == true) return\n  if (ev.target.classList.contains('tibphrase')) {\n    let otrans = q('#transcript')\n    otrans.classList.add('is-hidden')\n  }\n}, false)\n\ndocument.addEventListener(\"keyup\", function(ev) {\n  if (ev.ctrlKey == true) return\n  // hidePopups()\n  let transcript = q('#transcript')\n  transcript.classList.add('is-hidden')\n}, false)\n\ndocument.addEventListener(\"keydown\", function(ev) {\n  if (ev.ctrlKey == true) return\n  if (ev.shiftKey != true) return\n  let ohover = getInnermostHovered()\n  if (ohover.id == 'source') ohover = q('.tibpar')\n  showCholok(ohover)\n}, false)\n\nclipboard\n  .on('text-changed', () => {\n    let txt = clipboard.readText()\n    let pars = sband('tib', txt)\n    if (!pars || !pars.length) return\n    let state = {section: 'main', pars: pars}\n    navigate(state)\n  })\n  .startWatching()\n\nfunction hidePopups() {\n  qs('.popup').forEach(popup=> {\n    popup.classList.add('is-hidden')\n  })\n}\n"],"sourceRoot":""}