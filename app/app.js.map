{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"lodash\"","webpack:///./src/lib/pouch.js","webpack:///external \"path\"","webpack:///external \"electron-settings\"","webpack:///external \"fs-extra\"","webpack:///external \"electron-is-dev\"","webpack:///external \"pouchdb\"","webpack:///external \"pouchdb-load\"","webpack:///external \"node-couchdb\"","webpack:///external \"electron-clipboard-extended\"","webpack:///external \"slash\"","webpack:///external \"split.js\"","webpack:///external \"cholok\"","webpack:///external \"util\"","webpack:///external \"pouchdb-authentication\"","webpack:///external \"mousetrap\"","webpack:///external \"json5\"","webpack:///external \"axios\"","webpack:///./src/lib/utils.js","webpack:///./src/lib/tibetan_data.js","webpack:///./src/lib/parsedata.js","webpack:///./src/lib/dict.js","webpack:///./src/lib/auth.js","webpack:///./src/lib/nav.js","webpack:///./src/lib/sband.js","webpack:///./src/lib/segmenter.js","webpack:///./src/lib/main.js","webpack:///./src/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","__webpack_exports__","remoteDicts","replicate","getCfg","queryDBs","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","path","fse","settings","log","console","PouchDB","plugin","dbs","NodeCouchDb","couch","host","protocol","port","auth","user","pass","listDatabases","catch","err","remotepath","localpath","localDB","info","then","load","upath","pouchpath","resolve","fns","readdirSync","oldcfg","cfg","forEach","dn","idx","old","_","find","dict","push","newdict","active","sortBy","set","dbnames","compact","map","dpath","pouch","dname","weight","setDBs","keys","Promise","all","db","allDocs","include_docs","res","rows","Error","rdocs","row","doc","docs","flatten","rdoc","length","q","sel","document","querySelector","qs","querySelectorAll","tag","style","el","createElement","classList","add","span","str","textContent","empty","hasChildNodes","removeChild","lastChild","getCoords","getBoundingClientRect","placePopup","coords","top","join","left","getInnermostHovered","slice","pop","tibsyms","tibsuff","remote","tsek","showText","state","pars","osource","oresult","spans","opar","spn","ospan","text","tib","punct","appendChild","showCholok","cumulative","trnanscript","cholok","ncoords","otrans","remove","showPopup","compound","chains","JSON","parse","dataset","upper","closest","oul","oambi","body","bottom","createPopup","seg","oline","ambi","stringify","showCompound","chain","owf","showAmbi","showActiveDicts","otable","cf","otr","odt","capitalize","firstdict","oactive","check","checkmark","activedict","activateDict","setAttribute","ipcRenderer","on","event","rdbs","defaults","locals","installed","uniq","concat","dbname","includes","oink","clone","showRemoteDicts","navigate","section","app","getAppPath","getPath","Mousetrap","getCurrentWindow","split","history","hstate","sections","Array","hideAll","showSection","progress","sizes","mono","collapse","setSizes","Split","gutterSize","cursor","minSize","onDragEnd","reload","addEventListener","ev","twoPanes","send","which","goLeft","goRight","serverAuth","skip_setup","sync","live","retry","signUp","response","signup","coderanges","zho","grc","mainResults","trim","retsek","RegExp","replace","lastsek","last","pdchs","segs","depth","rec","pdch","head","tail","flakes","flake","reverse","scrape","cleans","clean","segmenter","keyres","mainKeys","added","syl","resyl","poss","main","totalKeys","query","filter","selectBests","max","sum","segment","longests","min","bests","full","fulls","any","segdocs","reh","startWith","makeChains","ambitmp","first","adocs","commonParts","parsePhrase","compactDocs","clipboard","dialog","container","link","import","cloneNode","action","showOpenDialog","properties","filters","extensions","parseCSV","data","target","parent","parentElement","contains","href","shell","openExternal","rest","reject","unshift","moveDictFirst","id","ctrlKey","popup","shiftKey","wf","odict","odname","oarticle","trns","trn","showResults","ohover","code","re","test","wopunct","rep","spns","rclause","clauses","clause","sband","readText","startWatching"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 22);\n","module.exports = require(\"electron\");","module.exports = require(\"lodash\");","import _ from 'lodash'\n\n// import { replicate } from \"../../../replicator.js\";\n\nconst path = require('path')\n\nconst fse = require('fs-extra')\n// const curl = require('curl')\n\nconst isDev = require('electron-is-dev')\nconst settings = require('electron-settings')\nconst log = console.log\nconst PouchDB = require('pouchdb')\n\nPouchDB.plugin(require('pouchdb-load'));\n\nlet dbs = []\n\nconst NodeCouchDb = require('node-couchdb');\nconst couch = new NodeCouchDb()\nconst diglossa = new NodeCouchDb({\n  host: 'couchdb.external.service',\n  protocol: 'https',\n  port: 6984\n})\nconst couchAuth = new NodeCouchDb({\n  auth: {\n    user: 'login',\n    pass: 'secret'\n  }\n})\n\nexport function remoteDicts() {\n  return couch.listDatabases()\n    .catch(function(err) {\n      log('REMOTE DICTS ERR', err)\n    })\n}\n\nexport function replicate(remotepath, localpath) {\n  log('REPLICATE LOCAL', localpath)\n  let localDB = new PouchDB(localpath);\n  // return localDB.load('http://localhost:3000/dumps/dump.txt')\n  return localDB.info()\n    .then(function(info) {\n      log('REPL-BEFORE-INFO', info)\n      return localDB.load('http://localhost:3000/api/vasilyev')\n      // return localDB.load('http://localhost:3000/dumps/dump.txt')\n    })\n\n  // let dumpedString = 'http://localhost:3000/api/vasilyev'\n  // log('REPL:dumpedString', dumpedString.length)\n  // return localDB.load('http://localhost:3000/api/vasilyev')\n  // return localDB.load('http://localhost:3000/dumps/dump.txt')\n}\n\nfunction setDBs(upath, cfg) {\n  dbs = []\n  let dbnames = _.compact(cfg.map(dict => { return (dict.active) ? dict.name : null }))\n  log('setDBNS', dbnames)\n  dbnames.forEach((dn, idx) => {\n    let dpath = path.resolve(upath, 'pouch', dn)\n    let pouch = new PouchDB(dpath)\n    pouch.dname = dn\n    pouch.weight = idx\n    dbs.push(pouch)\n  })\n  return dbnames\n}\n\nexport function getCfg() {\n  let upath = settings.get('upath')\n  let pouchpath = path.resolve(upath, 'pouch')\n  let fns = fse.readdirSync(pouchpath)\n  let oldcfg = settings.get('cfg') || []\n  let cfg = []\n  fns.forEach((dn, idx) => {\n    let old = _.find(oldcfg, dict=> {return dict.name == dn })\n    if (old) cfg.push(old)\n    else {\n      let newdict = {name: dn, active: true, idx: 100+idx}\n      cfg.push(newdict)\n    }\n  })\n  cfg = _.sortBy(cfg, 'idx')\n  cfg.forEach((dict, idx)=> { dict.idx = idx })\n  settings.set('cfg', cfg)\n  setDBs(upath, cfg)\n  return cfg\n}\n\nexport function queryDBs (keys) {\n  return Promise.all(dbs.map(function (db) {\n    return db.allDocs({\n      keys: keys,\n      include_docs: true\n    })\n      .then(function (res) {\n        if (!res || !res.rows) throw new Error('no dbn result')\n        let rdocs = _.compact(res.rows.map(row => { return row.doc }))\n        let docs = _.flatten(_.compact(rdocs.map(rdoc => { return rdoc.docs })))\n        if (!docs.length) return []\n        docs.forEach(doc => { doc.dname = db.dname, doc.weight = db.weight })\n        log('======DOCS', docs)\n        return docs\n      }).catch(function (err) {\n        console.log('ERR GET DBs', err)\n      })\n  }))\n}\n\n// adduser --system --home /opt/couchdb --no-create-home --shell /bin/bash -g couchdb couchdb\n// useradd --system -b /opt/couchdb --shell /bin/bash -g couchdb couchdb\n// sudo -i -u couchdb bin/couchdb\n// lobsang vasilyev\n\nexport function infoDB(localpath) {\n  let localDB = new PouchDB(localpath)\n  return localDB.info()\n}\n\nexport function cleanupDB(state) {\n  log('CLEAN UP')\n}\n\n// export function replicate_STREAM(remotepath, localpath) {\n//   let stream = new MemoryStream();\n//   let source = new PouchDB(remotepath);\n//   let dest = new PouchDB(localpath);\n\n//   return Promise.all([\n//     source.dump(stream),\n//     dest.load(stream)\n//   ])\n//     // .then(function () {\n//     //   console.log('Hooray the stream replication is complete!');\n//     // }).catch(function (err) {\n//     //   console.log('oh no an error', err);\n//     // });\n// }\n\nexport function replicate_(remotepath, localpath) {\n  // localpath += '___'\n  let upath = '/home/michael/.config/Pecha.js\\ \\(development\\)'\n  localpath = path.resolve(upath, 'pouch', 'vasilyev')\n  remotepath = ['http://localhost:5984', 'vasilyev'].join('/')\n  log('LOCALPATH', localpath)\n  log('REMOTEPATH', remotepath)\n   let localDB = new PouchDB(localpath)\n  // localDB.dname = dbname\n  let remoteDB = new PouchDB(remotepath)\n\n  return PouchDB.replicate(remoteDB, localDB, {\n    // live: true,\n    // retry: true\n    batch_size: 100,\n    timeout: false\n  }).on('change', function (info) {\n    log('change', info.ok)\n  }).on('paused', function (err) {\n    log('paused', err)\n  }).on('active', function (res) {\n    log('active', res)\n  }).on('denied', function (err) {\n    log('denied', err)\n  }).on('complete', function (info) {\n    log('complete', info.ok)\n  }).on('error', function (err) {\n    log('error', err)\n  })\n\n\n  // return localDB.info()\n  //   .then(function(info) {\n  //     return PouchDB.replicate(remoteDB, localDB, {\n  //       // live: true,\n  //       // retry: true\n  //       batch_size: 10000,\n  //       timeout: false\n  //     }).on('change', function (info) {\n  //       log('change', info.ok)\n  //     }).on('paused', function (err) {\n  //       log('paused', err)\n  //     }).on('active', function (res) {\n  //       log('active', res)\n  //     }).on('denied', function (err) {\n  //       log('denied', err)\n  //     }).on('complete', function (info) {\n  //       log('complete', info.ok)\n  //     }).on('error', function (err) {\n  //       log('error', err)\n  //     })\n  //   })\n  //   // .then(function() {\n  //   //   localDB.info()\n  //   // })\n\n  // remoteDB.replicate.to(localDB).then(function (result) {\n  //   log('REPLICATION COMPLETED', result);\n  //   localDB.info()\n  //     .then(function(info) {\n  //           return result\n  //     })\n  // }).catch(function (err) {\n  //   log(err);\n  // })\n}\n\n  // localDB.replicate.from(remoteDB, {batch_size: 1000})\n  //   .on('complete', function (info) {\n  //     log('REPL', info)\n  //     cb(true)\n  //   }).on('error', function (err) {\n  //     // handle error\n  //     log('____ERR', err)\n  //     cb(false)\n  //   })\n\n// {\n//   let rep = PouchDB.replicate(remoteDB, localDB, {\n//     // live: true,\n//     // retry: true\n//   }).on('change', function (info) {\n//     log('change', info)\n//   }).on('paused', function (err) {\n//     log('paused', err)\n//   }).on('active', function (res) {\n//     log('active', res)\n//   }).on('denied', function (err) {\n//     log('denied', err)\n//   }).on('complete', function (info) {\n//     log('complete', info)\n//   }).on('error', function (err) {\n//     log('error', err)\n//   })\n// }\n","module.exports = require(\"path\");","module.exports = require(\"electron-settings\");","module.exports = require(\"fs-extra\");","module.exports = require(\"electron-is-dev\");","module.exports = require(\"pouchdb\");","module.exports = require(\"pouchdb-load\");","module.exports = require(\"node-couchdb\");","module.exports = require(\"electron-clipboard-extended\");","module.exports = require(\"slash\");","module.exports = require(\"split.js\");","module.exports = require(\"cholok\");","module.exports = require(\"util\");","module.exports = require(\"pouchdb-authentication\");","module.exports = require(\"mousetrap\");","module.exports = require(\"json5\");","module.exports = require(\"axios\");","import _ from 'lodash'\n\nlet util = require('util')\n\nexport function q (sel) {\n  return document.querySelector(sel)\n}\n\nexport function qs (sel) {\n  return document.querySelectorAll(sel)\n}\n\nexport function create (tag, style) {\n  let el = document.createElement(tag)\n  if (style) el.classList.add(style)\n  return el\n}\n\nexport function recreateDiv (sel) {\n  let el = document.querySelector(sel)\n  if (el) el.parentElement.removeChild(el)\n  el = document.createElement('div')\n  el.classList.add(sel)\n  // el.id = sel\n  return el\n}\n\nexport function recreate (element) {\n  var newElement = element.cloneNode(true)\n  element.parentNode.replaceChild(newElement, element)\n}\n\n// function cret (str) {\n//   return document.createTextNode(str)\n// }\n\nexport function span (str, style) {\n  let el = document.createElement('span')\n  el.textContent = str\n  if (style) el.classList.add(style)\n  return el\n}\n\nexport function br () {\n  let oBR = document.createElement('br')\n  return oBR\n}\n\nexport function div (str, style) {\n  let el = document.createElement('div')\n  el.textContent = str\n  if (style) el.classList.add(style)\n  return el\n}\n\nexport function p (str, style) {\n  let el = document.createElement('p')\n  el.textContent = str\n  if (style) el.classList.add(style)\n  return el\n}\n\nexport function empty (el) {\n  if (!el) return\n  while (el.hasChildNodes()) {\n    el.removeChild(el.lastChild)\n  }\n}\n\nexport function remove (el) {\n  if (!el) return\n  el.parentElement.removeChild(el)\n}\n\nexport function removeAll (sel) {\n  let els = document.querySelectorAll(sel)\n  els.forEach(el => { el.parentElement.removeChild(el) })\n}\n\n// function closeAll() {\n//     words = null\n//     // window.close()\n//     ipcRenderer.send('sync', 'window-hide')\n// }\n\nexport function findAncestor (el, cls) {\n  while ((el = el.parentElement) && el.classList.contains(cls)) {\n    return el\n  }\n}\n\nexport function plog () {\n  var vs = _.values(arguments)\n  if (vs.length === 1) vs = vs[0]\n  // console.log(util.inspect(vs, {showHidden: false, depth: null}))\n  console.log(util.inspect(vs, {showHidden: false, depth: 3}))\n}\n\nexport function getCoords (el) {\n  let rect = el.getBoundingClientRect()\n  return rect\n  // return {top: rect.top, left: rect.left}\n}\n\nexport function placePopup (coords, el) {\n  let top = [coords.top, 'px'].join('')\n  let left = [coords.left, 'px'].join('')\n  el.style.top = top\n  el.style.left = left\n}\n\n// https://stackoverflow.com/questions/24538450/get-element-currently-under-mouse-without-using-mouse-events\nexport function getInnermostHovered() { return [].slice.call(document.querySelectorAll(':hover')).pop(); }\n","//\n\nexport const tibsyms = {\n  tsek: '་'\n  // connective: 'འི',\n  // subordinative: 'ར', // ladon\n  // narrative: 'འོ',\n  // interrog: 'འམ',\n  // coupling: 'འི',\n  // ergative: 'ས',\n  // concessive: 'འང'\n}\n\nexport const tibsuff = ['འི', 'ར', 'འོ', 'འམ', 'འི', 'ས', 'འང']\n","//\nimport _ from 'lodash'\nimport { q, qs, empty, create, remove, span, p, div, getCoords, placePopup } from './utils'\nimport cholok from 'cholok'\nimport { tibsyms, tibsyls } from \"./tibetan_data\";\nconst settings = require('electron').remote.require('electron-settings')\n\nlet tsek = tibsyms.tsek\nconst log = console.log\n\nexport function showText(state) {\n  if (!state || !state.pars || !state.pars.length) return\n  let pars = state.pars\n  // log('PARS', pars)\n  // let progress = q('#progress')\n  // progress.classList.add('is-shown')\n  let osource = q('#source')\n  let oresult = q('#result')\n  empty(osource)\n  empty(oresult)\n\n  // let wfs = []\n  pars.forEach(spans => {\n    let opar = p()\n    opar.classList.add('tibpar')\n    spans.forEach(spn => {\n      let ospan = span(spn.text)\n      if (spn.tib) ospan.classList.add('tibphrase') // , wfs.push(spn.text)\n      if (spn.punct) ospan.classList.add('punct') //, wfs.push(spn.text)\n      if (spn.text == ' ') ospan.classList.add('space')\n      opar.appendChild(ospan)\n    })\n    osource.appendChild(opar)\n  })\n\n  let grs = qs('span.tibetan')\n  // if (grs.length == 1) showResults(grs[0].textContent)\n}\n\nexport function showCholok(el, cumulative) {\n  // log('SHOW CHOLOK', el)\n  let coords = getCoords(el)\n  let trnanscript = (cumulative) ? cholok(el.textContent, true) : cholok(el.textContent)\n  let ncoords = {top: coords.top - 40, left: coords.left + 15}\n  let otrans = q('#transcript')\n  otrans.textContent = trnanscript\n  otrans.classList.remove('is-hidden')\n  placePopup(ncoords, otrans)\n}\n\nexport function parsePhrase(el, chain, lastsek) {\n  el.textContent = ''\n  chain.forEach((seg, idx)=> {\n    let ospan\n    if (seg.ambi) {\n      ospan = span(seg.seg, 'tibambi')\n      ospan.dataset.chains = JSON.stringify(seg.chains)\n    } else if (seg.docs.length) {\n      ospan = span(seg.seg, 'tibwf')\n      ospan.dataset.docs = JSON.stringify(seg.docs)\n    } else {\n      ospan = span(seg.seg, 'tibphrase')\n    }\n    el.appendChild(ospan)\n    if (idx < chain.length-1) el.appendChild(span(tsek, 'tsek'))\n  })\n  if (lastsek) el.appendChild(span(tsek, 'tsek'))\n  let progress = q('#progress')\n  progress.classList.remove('is-shown')\n}\n\nfunction createPopup(el, upper) {\n  let oambi\n  // is-hidden upper popup\n  if (upper) {\n    oambi = create('div', 'popup')\n    oambi.classList.add('upper')\n    document.body.appendChild(oambi)\n  } else oambi = q('#ambi')\n  // let oambi = (upper) ? q('#upper') : q('#ambi')\n  let coords = getCoords(el)\n  empty(oambi)\n  oambi.classList.remove('is-hidden')\n  let ncoords = {top: coords.bottom-3, left: coords.left}\n  placePopup(ncoords, oambi)\n  let oul = create('ul', 'ambilist')\n  oambi.appendChild(oul)\n  return oul\n}\n\nexport function showPopup(el, compound) {\n  let chains\n  try {\n    chains = JSON.parse(el.dataset.chains)\n  } catch(err) {\n    log('ERR: JSON chains', el)\n    return\n  }\n  let upper = (el.closest('.tibpar')) ? false : true\n  let oul = createPopup(el, upper)\n  // if (el.classList.contains('tibambi')) showAmbi(oul, chains)\n  // else if (el.classList.contains('tibwf')) showCompound(oul, chains)\n  if (compound) showCompound(oul, chains)\n  else showAmbi(oul, chains)\n\n  let progress = q('#progress')\n  progress.classList.remove('is-shown')\n}\n\nfunction showAmbi(oul, chains) {\n  oul.classList.add('danger')\n  chains.forEach(chain=> {\n    let oline = create('li', 'ambiline')\n    oul.appendChild(oline)\n    chain.forEach(seg=> {\n      let owf = (seg.docs.length) ? span(seg.seg, 'tibwf') : span(seg.seg, 'tibphrase')\n      if (seg.docs.length) owf.dataset.docs = JSON.stringify(seg.docs)\n      oline.appendChild(owf)\n    })\n  })\n}\n\nfunction showCompound(oul, chains) {\n  // log('COMPOUND', chains)\n  chains.forEach(seg=> {\n    let oline = create('li', 'ambiline')\n    oul.appendChild(oline)\n    let ospan\n    if (seg.ambi) {\n      ospan = span(seg.seg, 'tibambi')\n      ospan.dataset.chains = JSON.stringify(seg.chains)\n    } else if (seg.docs.length) {\n      ospan = span(seg.seg, 'tibwf')\n      ospan.dataset.docs = JSON.stringify(seg.docs)\n    } else {\n      ospan = span(seg.seg, 'tibphrase')\n    }\n    oline.appendChild(ospan)\n  })\n}\n\nexport function showResults(el) {\n  let osource = q('#source')\n  let oresult = q('#result')\n  empty(oresult)\n  let wf = el.textContent\n\n  let docs = JSON.parse(el.dataset.docs)\n  try {\n    docs = JSON.parse(el.dataset.docs)\n  } catch(err) {\n    log('ERR: JSON docs')\n    return\n  }\n\n  let cfg = settings.get('cfg')\n  let str = JSON.parse(JSON.stringify(cfg))\n  log('CFG', str)\n  log('RESULT docs', wf, docs)\n\n  docs.forEach(doc=> { doc.weight = _.find(cfg, dict=> { return doc.dname == dict.name }).idx })\n  docs = _.sortBy(docs, 'weight')\n  log('RESULT docs', wf, docs)\n\n  let odict = create('div', 'dict')\n  oresult.appendChild(odict)\n  let owf = create('p', 'dict-wf')\n  owf.textContent = wf\n  odict.appendChild(owf)\n  docs.forEach(doc=> {\n    let odname = create('p', 'dict-dname')\n    odname.textContent = doc.dname\n    odict.appendChild(odname)\n    let oarticle = create('p', 'dict-article')\n    oarticle.textContent = doc.dict\n    odict.appendChild(oarticle)\n    let oul = create('ul', 'dict-ul')\n    odict.appendChild(oul)\n    if (!doc.trns) log('NO TRNS', doc)\n    if (!doc.trns) return\n    doc.trns.forEach(trn=> {\n      let oline = create('li', 'dict-line')\n      oline.textContent = trn\n      oul.appendChild(oline)\n    })\n  })\n}\n\n\nexport function noResult(el) {\n  log('NO RESULT')\n  // let oresult = q('#result')\n  // empty(oresult)\n  let progress = q('#progress')\n  progress.classList.remove('is-shown')\n}\n\nlet xxx = function(n,o,u) {\n  if (n._id && !n._id.indexOf(\"_local/\")) return;\n  if (!u || !u.roles || u.roles.indexOf(\"_admin\") == -1) { throw({forbidden:'Denied.' })}\n}\n","//\nimport _ from 'lodash'\nimport { ipcRenderer } from \"electron\";\nimport { q, qs, empty, create, remove, span, p, div, getCoords, placePopup } from './utils'\nimport { navigate } from './nav'\nimport { getCfg } from \"./pouch\";\n\nconst log = console.log\nconst settings = require('electron-settings')\n\nipcRenderer.on('remoteDictsReply', function (event, rdbs) {\n  showRemoteDicts(rdbs)\n})\n\nipcRenderer.on('replicateOK', function (event, res) {\n  let state = {section: 'activedicts'}\n  navigate(state)\n})\n\nfunction showRemoteDicts(rdbs) {\n  // let upath = settings.get('upath')\n  let cfg = settings.get('cfg')\n  // log('CLONE DICTS: CFG:', cfg)\n  let defaults = ['_users']\n  let locals = cfg.map(dict=> { return dict.name })\n  let installed = _.uniq(defaults.concat(locals))\n\n  let otable = q('#server-dicts-table tbody')\n  empty(otable)\n  rdbs.forEach(dbname=> {\n    if (defaults.includes(dbname)) return\n    let otr = create('tr')\n    otable.appendChild(otr)\n    let odt = create('td')\n    otr.appendChild(odt)\n    odt.textContent = _.capitalize(dbname)\n    let oink = create('td', 'link')\n    if (installed.includes(dbname)) {\n      let check = checkmark()\n      oink.appendChild(check)\n    } else {\n      oink.textContent = 'sync'\n    }\n    oink.dataset.clone = dbname\n    otr.appendChild(oink)\n  })\n}\n\nexport function showActiveDicts() {\n  let cfg = settings.get('cfg')\n  let dbnames = cfg.map(cf=> { return cf.name })\n  let otable = q('#local-dicts-table tbody')\n  empty(otable)\n  cfg.forEach(dict=> {\n    let name = dict.name\n    let otr = create('tr')\n    otable.appendChild(otr)\n    let odt = create('td', 'dictname')\n    otr.appendChild(odt)\n    odt.textContent = _.capitalize(name)\n    odt.dataset.firstdict = name\n    let oactive = create('td', 'active-dict')\n    if (dict.active) {\n      let check = checkmark()\n      oactive.appendChild(check)\n    } else {\n      oactive.textContent = 'activate'\n    }\n    oactive.dataset.activedict = name\n    otr.appendChild(oactive)\n  })\n}\n\nexport function moveDictFirst(dbname) {\n  let cfg = settings.get('cfg')\n  let dict = _.find(cfg, dict=> { return dict.name == dbname })\n  let rest = _.reject(cfg, dict=> { return dict.name == dbname })\n  rest.unshift(dict)\n  cfg = rest\n  cfg.forEach((dict, idx)=> { dict.idx = idx })\n  settings.set('cfg', cfg)\n  getCfg()\n  showActiveDicts()\n}\n\nexport function activateDict(el) {\n  let cfg = settings.get('cfg')\n  let dict = _.find(cfg, dict=> { return dict.name == el.dataset.activedict })\n  let check = checkmark()\n  if (el.textContent) {\n    el.textContent = ''\n    el.appendChild(check)\n    dict.active = true\n  } else {\n    empty(el)\n    el.textContent = 'activate'\n    dict.active = false\n  }\n  settings.set('cfg', cfg)\n}\n\nfunction checkmark() {\n  let check = create('img', 'dict-check')\n  check.setAttribute('src', '../resources/check.png')\n  return check\n}\n\nexport function parseCSV() {\n  log('PARSE STAR CSV')\n}\n","//\n\nconst path = require('path')\n\nconst settings = require('electron-settings')\nconst log = console.log\nconst PouchDB = require('pouchdb')\nPouchDB.plugin(require('pouchdb-authentication'));\n\nexport function signup(upath) {\n  let serverAuth = new PouchDB('http://localhost:5984/mydb', {skip_setup: true})\n  let localpath = path.resolve(upath, 'pouch', 'auth')\n  let localDB = new PouchDB(localpath)\n  localDB.sync(serverAuth, {live: true, retry: true}).on('error', console.log.bind(console))\n\n  serverAuth.signUp('batman', 'brucewayne', function (err, response) {\n    if (err) {\n      if (err.name === 'conflict') {\n        // \"batman\" already exists, choose another username\n      } else if (err.name === 'forbidden') {\n        // invalid username\n      } else {\n        // HTTP error, cosmic rays, etc.\n      }\n    }\n  })\n    .then(function(res) {\n      log('SIGNUP RES', res)\n    })\n  return\n}\n","//\nimport _ from \"lodash\"\nimport { ipcRenderer } from \"electron\";\nimport { q, qs, empty, create, remove, span, p, div, enclitic } from './utils'\nimport Split from 'split.js'\nimport { showText } from \"./parsedata\";\nimport { serverDicts, showActiveDicts, parseCSV } from \"./dict\";\nimport { signup } from \"./auth\";\nimport { getCfg } from \"./pouch\";\n\n\nimport { remote } from \"electron\";\nconst app = remote.app;\nconst apath = app.getAppPath()\nconst upath = app.getPath(\"userData\")\n\nconst log = console.log\nconst clipboard = require('electron-clipboard-extended')\nconst settings = require('electron').remote.require('electron-settings')\nconst Mousetrap = require('mousetrap')\nconst fse = require('fs-extra')\nconst path = require('path')\nconst slash = require('slash')\nconst {getCurrentWindow} = require('electron').remote\n\n// let init = {section: 'home'}\nlet history = []\nlet hstate = 0\nlet split\n\nfunction twoPanes(state) {\n\n  let sizes = settings.get('split-sizes') || [50, 50]\n  if (split && state.mono) split.collapse(1)\n  else if (split) split.setSizes(sizes)\n\n  if (split) return\n  settings.set('split-sizes', sizes)\n\n  split = Split(['#source', '#result'], {\n    sizes: sizes,\n    gutterSize: 5,\n    cursor: 'col-resize',\n    minSize: [0, 0],\n    onDragEnd: function (sizes) {\n      settings.set('split-sizes', sizes)\n      getCurrentWindow().reload()\n    }\n  })\n  if (state.mono) split.collapse(1)\n\n  document.addEventListener(\"keydown\", function(ev) {\n    // keyPanes(ev, state)\n  }, false)\n\n  document.addEventListener(\"wheel\", function(ev) {\n    // scrollPanes(ev, state)\n  }, false)\n}\n\n// arrows\nMousetrap.bind(['alt+left', 'alt+right'], function(ev) {\n  if (ev.which == 37) goLeft()\n  else if (ev.which == 39) goRight()\n})\n\nMousetrap.bind(['alt+1', 'alt+2'], function(ev) {\n  // if (ev.which == 49) log('----1')\n  // else if (ev.which == 50) log('----2')\n})\n\nMousetrap.bind(['esc'], function(ev) {\n  // похоже, общий метод не получится\n})\n\nMousetrap.bind(['ctrl+u'], function(ev) {\n  log('CLICK SIGNUP')\n  signup(upath)\n})\n\nMousetrap.bind(['ctrl+i'], function(ev) {\n  let cfg = getCfg()\n  let str = JSON.parse(JSON.stringify(cfg))\n  log('RE-INIT-DBs', str)\n})\n\nfunction hideAll () {\n  const sections = document.querySelectorAll('.section.is-shown')\n  Array.prototype.forEach.call(sections, (section) => {\n    section.classList.remove('is-shown')\n  })\n  let otrans = q('#transcript')\n  otrans.classList.add('is-hidden')\n  let oambi = q('#ambi')\n  oambi.classList.add('is-hidden')\n}\n\nfunction goLeft() {\n  if (hstate <= 0) return\n  else hstate--\n  let state = history[hstate]\n  state.old = true\n  navigate(state)\n}\n\nfunction goRight() {\n  if (hstate >= history.length-1) return\n  else hstate++\n  let state = history[hstate]\n  state.old = true\n  navigate(state)\n}\n\nexport function navigate(state) {\n  try {\n    state = JSON.parse(JSON.stringify(state))\n  } catch (err) {\n    log('NAV-state ERR', err)\n    state = {}\n  }\n  let section = state.section || 'home'\n  if (!section) state.section = 'home'\n  showSection(state.section)\n\n  if (!state.old) {\n    state.old = false\n    delete state.old\n    history.push(state)\n    hstate = history.length-1\n  }\n  let progress = q('#progress')\n  if (section == 'main') twoPanes(state), showText(state)\n  else if (section == 'clonedicts') ipcRenderer.send('remoteDicts', '') // serverDicts()\n  else if (section == 'activedicts') showActiveDicts()\n  else progress.classList.remove('is-shown')\n\n  // state = {section: 'home'}\n  settings.set('state', state)\n}\n\nfunction showSection(section) {\n  hideAll()\n  const sectionId = ['#', section].join('')\n  q(sectionId).classList.add('is-shown')\n}\n","// ================ потом перенести speckled band\n\nimport _ from \"lodash\";\nlet log = console.log\n\n// https://iso639-3.sil.org/code_tables/639/data --> three letter codes\n\n// punctuation \\u002E\\u002C\\u0021\\u003A\\u003B\\u00B7 - \\u0020\\u0027 - ... middle dot, - space, apostrophe\n// parens ()[]{-/\n// \\u0028\\u0029\\u005B\\u005D\\u007B\\u007D\\u002D\\u002F\n// greek 0370-03FF 1F00–1FFF\n// diactitic 0300-036F\n// tibetan shad - ། U+0F0D : TIBETAN MARK SHAD {shey} // punctuation\n\nlet puncts = '([\\u002E\\u002C\\u0021\\u003A\\u003B\\u00B7\\u0F0D])'\n\n// san - sansktit\nlet coderanges = {\n  'zho': '([\\u4E00-\\u9FFF]+)',\n  'tib': '([\\u0F00-\\u0FFF]+)',\n  'grc': '([\\u0370-\\u03FF\\u1F00-\\u1FFF\\u0300-\\u036F\\u0027]+)'\n}\n\nexport default (code, str) => {\n  let re = new RegExp(coderanges[code])\n  if (!re.test(str)) return\n  let clean = str.trim().replace(/᾽/g, \"\\'\")\n  let wopunct = clean.split(\"'\").join('')\n  if (!re.test(wopunct)) return\n  let rep = new RegExp(puncts)\n  let rows = clean.replace(/\\r?\\n+/, '\\n').split('\\n')\n  let rclauses = rows.map(row => { return row.split(rep) })\n  let spans = []\n  rows.forEach(row => {\n    let spns = []\n    let rclauses = row.split(rep)\n    rclauses.forEach(rclause => {\n      if (rep.test(rclause)) {\n        let spn = {text: rclause, punct: true}\n        spns.push(spn)\n      } else {\n        let clauses = rclause.split(re)\n        clauses = _.compact(clauses)\n        clauses.forEach(clause => {\n          let lang = (re.test(clause)) ? true : false\n          let spn = {text: clause}\n          if (lang) spn[code] = true\n          spns.push(spn)\n        })\n      }\n    })\n    spans.push(spns)\n  })\n  return spans\n}\n","import _ from 'lodash'\nimport { tibsyms, tibsuff } from \"./tibetan_data\";\n\nconst log = console.log\nconst tsek = tibsyms.tsek\n\nexport function totalKeys(pdchs) {\n  let mainKeys = _.uniq(_.flatten(pdchs))\n  let added = []\n  mainKeys.forEach(seg=>{\n    tibsuff.forEach(syl=>{\n      let resyl = new RegExp(syl+'$')\n      let poss = seg.replace(resyl, '')\n      if (seg != poss) added.push(poss)\n    })\n  })\n  return {main: mainKeys, added: added}\n  // let keys = segs.concat(added)\n  // return _.uniq(keys)\n  // return _.uniq(_.flatten(pdchs))\n}\n\nexport function segmenter(str) {\n  let segs = str.split(tsek)\n  let depth = (segs.length < 10) ? 10 : 2\n  // log('SEGS', segs)\n  let old = str\n  let size = segs.length\n  let pdchs = [[segs]]\n  function rec(segs, pdch) {\n    // log('PDCH', pdch)\n    let flakes = scrape(segs)\n    flakes.forEach(flake => {\n      pdch.push(flake.head)\n      pdch.push(flake.tail)\n      // pdch = pdch.concat(flake.head)\n      // pdch = pdch.concat(flake.tail)\n      if (_.flatten(pdch).join(tsek) == old) {\n        pdchs.push(_.clone(pdch))\n        pdch.pop()\n      }\n      if (pdch.length < depth) rec(flake.tail, pdch) // three parts for now !\n      // rec(flake.tail, pdch)\n      pdch.pop()\n    })\n  }\n  rec(segs, [])\n  let cleans = []\n  pdchs.forEach(pdch=> {\n    let clean = []\n    pdch.forEach(seg=>{\n      clean.push(seg.join(tsek))\n    })\n    cleans.push(clean)\n  })\n  return cleans\n}\n\nexport function scrape(segs) {\n  // log('SEGS', segs)\n  let head, tail\n  let flakes = []\n  for (let idx = 1; idx < segs.length + 1; idx++) {\n    head = segs.slice(0, idx)\n    tail = segs.slice(idx)\n    let flake = {head: head, tail: tail}\n    if (tail.length) flakes.push(flake)\n  }\n  return flakes.reverse()\n}\n\n// export function segmenter_(str) {\n//   let old = str\n//   let pdchs = [[str]]\n//   function rec(str, pdch) {\n//     // log('PDCH', pdch)\n//     let flakes = scrape(str)\n//     flakes.forEach(flake => {\n//       pdch.push(flake.head)\n//       pdch.push(flake.tail)\n//       if (pdch.join(tsek) == old) {\n//         pdchs.push(_.clone(pdch))\n//         pdch.pop()\n//       }\n//       if (pdch.length < 5) rec(flake.tail, pdch) // three parts for now !\n//       // rec(flake.tail, pdch)\n//       pdch.pop()\n//     })\n//   }\n//   rec(str, [])\n//   return pdchs\n// }\n\n// export function scrape_(str) {\n//   let segs = str.split(tsek)\n//   let head, tail\n//   let flakes = []\n//   for (let idx = 1; idx < segs.length + 1; idx++) {\n//     head = segs.slice(0, idx).join(tsek)\n//     tail = segs.slice(idx).join(tsek)\n//     let flake = {head: head, tail: tail}\n//     if (tail) flakes.push(flake)\n//   }\n//   return flakes.reverse()\n// }\n\n// export function totalKeys_(pdchs) {\n//   let segs = _.uniq(_.flatten(pdchs))\n//   let added = []\n//   segs.forEach(seg=>{\n//     tibsyls.forEach(syl=>{\n//       let resyl = new RegExp(syl+'$')\n//       let poss = seg.replace(resyl, '')\n//       if (seg != poss) added.push(poss)\n//     })\n//   })\n//   let keys = segs.concat(added)\n//   return _.uniq(keys)\n// }\n","//\nimport _ from 'lodash'\nimport { ipcRenderer } from \"electron\";\nimport { q, qs, empty, create, remove, span, p, div, getCoords, getInnermostHovered } from './utils'\nimport { scrape, segmenter, totalKeys } from \"./segmenter\";\nimport { tibsyms, tibsuff } from \"./tibetan_data\";\nimport { parsePhrase, noResult, showPopup } from \"./parsedata\";\n\nlet tsek = tibsyms.tsek\nconst log = console.log\n\nipcRenderer.on('replayDBs', function (event, query) {\n  compactDocs(query)\n})\n\nexport function mainResults(el, compound) {\n  let progress = q('#progress')\n  progress.classList.add('is-shown')\n  let text = el.textContent.trim()\n  let retsek = new RegExp(tsek+'$')\n  let str = text.replace(retsek, '')\n  let last = _.last(text)\n  let lastsek = (last == tsek) ? true : false\n  // let segs = str.split(tsek)\n  let pdchs = segmenter(str)\n  // log('MAIN pdchs:', segs.length, '=>', pdchs.length)\n\n  let keys\n  let keyres = totalKeys(pdchs)\n  if (compound) keys = _.filter(keyres.main, key=> { return key != str})\n  else keys =  _.uniq(keyres.main.concat(keyres.added))\n  // log('MAIN keys:', keyres.main, 'add', keyres.added)\n  // keys = keyres.main\n\n  let query = {keys: keys, pdchs: pdchs, compound: compound, lastsek: lastsek}\n  ipcRenderer.send('queryDBs', query)\n}\n\n// let query = {keys: keys, pdchs: pdchs, compound: compound, lastsek: lastsek}\nfunction compactDocs(query) {\n  let el = getInnermostHovered()\n  let docs = _.flatten(query.docs)\n  let res = makeChains(query.pdchs, docs)\n  let chains = res.chains\n  // log('FULL, CHAINS', res.full, chains.length, chains)\n  let chain\n  if (chains.length > 1) chain = commonParts(chains)\n  else if (chains.length == 1) chain = chains[0]\n  else {\n    noResult(el)\n    return\n  }\n  // log('CHAIN:', chain)\n  if (query.compound) {\n    // log('main-compound', chains.length, chain)\n    el.dataset.chains = JSON.stringify(chain)\n    showPopup(el, true)\n  }\n  else parsePhrase(el, chain, query.lastsek)\n}\n\n\nfunction commonParts(chains) {\n  let first = chains[0]\n  let clean = []\n  let ambitmp\n  for (let idx = 0; idx < first.length; idx++) {\n    let segs = chains.map(segs=> { return segs[idx].seg })\n    if (_.uniq(segs).length == 1) {\n      clean.push(first[idx])\n      ambitmp = null\n    } else {\n      if (!ambitmp) ambitmp = {ambi: true, seg: '', docs: []}, clean.push(ambitmp)\n      let segdocs = chains.map(segs=> { return {seg: segs[idx].seg, docs: segs[idx].docs}  })\n      ambitmp.docs.push(segdocs)\n    }\n  }\n  let ambis = _.filter(clean, seg=> { return seg.ambi })\n  ambis.forEach(ambi=>{\n    let first = ambi.docs[0]\n    let chains = []\n    for (let idx = 0; idx < first.length; idx++) {\n      let chain = ambi.docs.map(adocs=> { return adocs[idx] })\n      chains.push(chain)\n    }\n    ambi.chains = chains\n    let chain = chains[0]\n    ambi.seg = chain.map(seg=>{ return seg.seg}).join(tsek)\n  })\n  // log('___AMBIS___', ambis)\n  return clean\n}\n\nfunction makeChains(pdchs, docs) {\n  let chains = []\n  let fulls = []\n  pdchs.forEach(segs=>{\n    let chain = []\n    let any = false\n    let full = true\n    segs.forEach(seg=>{\n      let segdocs = _.filter(docs, doc => { return startWith(seg, doc.dict) })\n      if (segdocs.length) any = true\n      if (!segdocs.length) full = false\n      let doc = {seg: seg, docs: segdocs}\n      chain.push(doc)\n    })\n    if (any) chains.push(chain)\n    if (full) fulls.push(chain)\n  })\n  // здесь full только для справки, убрать!!!\n  let bests, full\n  if (fulls.length) bests = selectBests(fulls), full = true\n  else bests = selectBests(chains)\n  return {chains: bests, full: full}\n}\n\nfunction selectBests(chains) {\n  let max = _.max(chains.map(chain => {  return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length } ) )\n  // log('MAX', max)\n  let longests = _.filter(chains, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length >= max - 1 })\n  // longests = _.sortBy(longests, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length }).reverse()\n  // log('LNGST', longests)\n  // return longests\n\n  // // квадраты - выберет более равномерное деление, да, но отбросит тоже хорошие\n  // let max = _.max(chains.map(chain => {  return _.sum(chain.map(segment => { return segment.docs.length ? Math.pow(segment.seg.length, 2) : 0 }))/chain.length } ) )\n  // // log('MAX', max)\n  // let longests = _.filter(chains, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? Math.pow(segment.seg.length, 2) : 0 }))/chain.length >= max - 10 })\n\n  let min = _.min(longests.map(chain => {  return chain.length } ) )\n  // log('MIN', min)\n  let shortests  = _.filter(longests, chain => { return chain.length == min })\n  return shortests\n  // let maxlong = _.max(longests.map(chain => {  return chain.length } ) )\n  // // log('maxlong', maxlong)\n  // longests  = _.filter(longests, chain => { return chain.length == maxlong })\n  // return longests\n}\n\nfunction startWith(str, head) {\n  if (str == head) return true\n  let reh = new RegExp('^' + head)\n  let tail = str.replace(reh, '')\n  return (str != tail && tibsuff.includes(tail)) ?  true : false\n}\n\nfunction fullChains(chains) {\n  let fulls = []\n  chains.forEach(segs => {\n    let full = true\n    segs.forEach(seg => {\n      if (!seg.docs.length) full = false\n    })\n    if (full) fulls.push(segs)\n  })\n  return fulls\n}\n","// import \"./stylesheets/main.css\";\n\nimport _ from \"lodash\";\n// import Split from 'split.js'\nimport { remote } from \"electron\";\nimport { shell } from 'electron'\nimport { ipcRenderer } from \"electron\";\n\nimport { q, qs, empty, create, remove, span, p, div, getInnermostHovered } from './lib/utils'\nimport { navigate } from './lib/nav';\nimport sband from \"./lib/sband\";\nimport { showCholok, showResults, showPopup } from \"./lib/parsedata\";\nimport { mainResults } from \"./lib/main\";\nimport { moveDictFirst, activateDict } from \"./lib/dict\";\n\nconst settings = require('electron').remote.require('electron-settings')\n// const Mousetrap = require('mousetrap')\n\nconst JSON = require('json5')\nconst axios = require('axios')\n// let fse = require('fs-extra')\nconst slash = require('slash')\nconst log = console.log\n\nconst path = require('path')\n\nconst clipboard = require('electron-clipboard-extended')\nconst {dialog, getCurrentWindow} = require('electron').remote\n\nconst isDev = require('electron-is-dev')\n// const isDev = false\n// const isDev = true\n// const app = remote.app;\n// const apath = app.getAppPath()\n// const upath = app.getPath(\"userData\")\n\n\nlet over = q(\"#new-version\")\n\nlet container = q('#container')\nlet imports = qs('link[rel=\"import\"]')\nimports.forEach(link=> {\n  let content = link.import\n  let section = content.querySelector('.section')\n  container.appendChild(section.cloneNode(true))\n})\n\nipcRenderer.on('section', function (event, section) {\n  navigate({section: section})\n})\n\nipcRenderer.on('action', function (event, action) {\n  if (action == 'clonedicts') navigate({section: 'clone'})\n  else if (action == 'arrangeDicts') navigate({section: 'activedicts'})\n  else if (action == 'csv') dialog.showOpenDialog({properties: ['openFile'], filters: [{name: 'JSON', extensions: ['stardict'] }]}, parseCSV)\n  else if (action == 'cleanupdb') navigate({section: 'clone'})\n})\n\n// ctrl-R\nipcRenderer.on('reread', function (event) {\n  let state = settings.get('state')\n  getCurrentWindow().reload()\n  navigate(state)\n})\n\n// let home = q('#home')\n// home.classList.add('is-shown')\nlet state = settings.get('state')\n// log('STATE1', state)\nif (!state) state = {section: 'home'}\nnavigate(state)\n\ndocument.addEventListener('click', (ev) => {\n  let data = ev.target.dataset\n  if (!data) return\n  let parent = ev.target.parentElement\n  if (ev.target.classList.contains('external')) {\n    let href = ev.target.textContent\n    shell.openExternal(href)\n  } else if (data.section) {\n    navigate({section: data.section})\n  } else if (data.clone) {\n    ipcRenderer.send('replicate', data.clone)\n  } else if (data.firstdict) {\n    moveDictFirst(data.firstdict) // ev.target,\n  } else if (data.activedict) {\n    activateDict(ev.target)\n  } else if (parent.dataset.activedict) {\n    activateDict(parent)\n  } else if (ev.target.id == 'cleanupdb') {\n    log('CLEAN UP DBs!')\n  } else if (data.docs) {\n    mainResults(ev.target , true)\n  }\n})\n\ndocument.addEventListener(\"mouseover\", function(ev) {\n  if (!ev.target.textContent) return\n  if (ev.ctrlKey == true) return\n  let tpar = ev.target.closest('.tibpar')\n  if (tpar) hidePopups()\n\n  if (ev.target.classList.contains('tibphrase')) {\n    if (ev.shiftKey == true) {\n      showCholok(ev.target)\n    } else {\n      mainResults(ev.target)\n    }\n  } else if (ev.target.classList.contains('tibwf')) {\n    showResults(ev.target)\n  } else if (ev.target.classList.contains('tibambi')) {\n    showPopup(ev.target) // mouseover, tibambi\n  }\n}, false)\n\ndocument.addEventListener(\"mouseleave\", function(ev) {\n  if (!ev.target.classList) return\n  if (ev.ctrlKey == true) return\n  if (ev.target.classList.contains('tibphrase')) {\n    let otrans = q('#transcript')\n    otrans.classList.add('is-hidden')\n  }\n}, false)\n\ndocument.addEventListener(\"keyup\", function(ev) {\n  if (ev.ctrlKey == true) return\n  // hidePopups()\n  let transcript = q('#transcript')\n  transcript.classList.add('is-hidden')\n}, false)\n\ndocument.addEventListener(\"keydown\", function(ev) {\n  // if (ev.ctrlKey == true) return\n  if (ev.shiftKey != true) return\n  let ohover = getInnermostHovered()\n  if (ohover.id == 'source') ohover = q('.tibpar')\n  showCholok(ohover)\n  if (ev.ctrlKey == true) showCholok(ohover, true)\n}, false)\n\nclipboard\n  .on('text-changed', () => {\n    let txt = clipboard.readText()\n    let pars = sband('tib', txt)\n    if (!pars || !pars.length) return\n    let state = {section: 'main', pars: pars}\n    navigate(state)\n  })\n  .startWatching()\n\nfunction hidePopups() {\n  qs('.popup').forEach(popup=> {\n    popup.classList.add('is-hidden')\n  })\n}\n"],"sourceRoot":""}