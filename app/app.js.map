{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"lodash\"","webpack:///external \"path\"","webpack:///external \"fs-extra\"","webpack:///external \"electron-clipboard-extended\"","webpack:///external \"slash\"","webpack:///external \"split.js\"","webpack:///external \"cholok\"","webpack:///external \"util\"","webpack:///external \"pouchdb\"","webpack:///external \"mousetrap\"","webpack:///external \"json5\"","webpack:///external \"axios\"","webpack:///external \"electron-is-dev\"","webpack:///./src/lib/utils.js","webpack:///./src/lib/tibetan_data.js","webpack:///./src/lib/parsedata.js","webpack:///./src/lib/pouch.js","webpack:///./src/lib/nav.js","webpack:///./src/lib/sband.js","webpack:///./src/lib/segmenter.js","webpack:///./src/lib/main.js","webpack:///./src/lib/dict.js","webpack:///./src/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","q","sel","document","querySelector","qs","querySelectorAll","tag","style","el","createElement","classList","add","span","str","textContent","empty","hasChildNodes","removeChild","lastChild","getCoords","getBoundingClientRect","placePopup","coords","top","join","left","tibsyms","tibsyls","tsek","log","console","showText","state","pars","length","osource","oresult","forEach","spans","opar","spn","ospan","text","tib","punct","appendChild","parsePhrase","chains","parentNode","best","seg","idx","docs","dataset","JSON","stringify","replaceEL","remove","showResults","wf","parse","odict","owf","doc","odname","dname","oarticle","dict","oul","trns","trn","oline","path","fse","app","remote","upath","getAppPath","getPath","settings","PouchDB","dbs","pouchpath","resolve","getPossible","keys","setDBs","Promise","all","map","db","allDocs","include_docs","then","res","rows","Error","rdocs","_","compact","row","flatten","rdoc","weight","catch","err","queryDBs","cfg","cf","active","dn","dpath","pouch","push","ensureDirSync","Mousetrap","getCurrentWindow","split","history","hstate","showSection","section","sections","Array","hideAll","navigate","old","progress","sizes","mono","collapse","setSizes","set","Split","gutterSize","cursor","minSize","onDragEnd","reload","addEventListener","ev","twoPanes","which","goLeft","goRight","localDB","find","remoteDB","replicate","to","on","replicateDB","coderanges","zho","grc","scrape","segs","head","tail","flakes","flake","slice","reverse","mainResults","retsek","RegExp","trim","replace","depth","contains","pdchs","rec","pdch","clone","pop","cleans","clean","segmenter","uniq","totalKeys","bests","full","fulls","chain","any","segdocs","filter","reh","includes","startWith","selectBests","makeChains","noResult","max","sum","segment","longests","min","parseStarDict","parseCSV","clipboard","dialog","container","link","import","cloneNode","ipcRenderer","event","action","showOpenDialog","properties","filters","extensions","data","target","external","href","shell","openExternal","shiftKey","trnanscript","cholok","ncoords","otrans","showCholok","code","re","test","wopunct","rep","spns","rclause","clauses","clause","sband","readText","startWatching","version","destpath","fns","readdirSync","createZeroCfg","checkCfg"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,oBClFAhC,EAAAD,QAAAkC,QAAA,2BCAAjC,EAAAD,QAAAkC,QAAA,yBCAAjC,EAAAD,QAAAkC,QAAA,wBCAAjC,EAAAD,QAAAkC,QAAA,2BCAAjC,EAAAD,QAAAkC,QAAA,8CCAAjC,EAAAD,QAAAkC,QAAA,yBCAAjC,EAAAD,QAAAkC,QAAA,2BCAAjC,EAAAD,QAAAkC,QAAA,4BCAAjC,EAAAD,QAAAkC,QAAA,uBCAAjC,EAAAD,QAAAkC,QAAA,0BCAAjC,EAAAD,QAAAkC,QAAA,4BCAAjC,EAAAD,QAAAkC,QAAA,wBCAAjC,EAAAD,QAAAkC,QAAA,wBCAAjC,EAAAD,QAAAkC,QAAA,mFCEWA,EAAQ,IAEZ,SAASC,EAAGC,GACjB,OAAOC,SAASC,cAAcF,GAGzB,SAASG,EAAIH,GAClB,OAAOC,SAASG,iBAAiBJ,GAG5B,SAASZ,EAAQiB,EAAKC,GAC3B,IAAIC,EAAKN,SAASO,cAAcH,GAEhC,OADIC,GAAOC,EAAGE,UAAUC,IAAIJ,GACrBC,EAqBF,SAASI,EAAMC,EAAKN,GACzB,IAAIC,EAAKN,SAASO,cAAc,QAGhC,OAFAD,EAAGM,YAAcD,EACbN,GAAOC,EAAGE,UAAUC,IAAIJ,GACrBC,EAsBF,SAASO,EAAOP,GACrB,GAAKA,EACL,KAAOA,EAAGQ,iBACRR,EAAGS,YAAYT,EAAGU,WAiCf,SAASC,EAAWX,GAEzB,OADWA,EAAGY,wBAKT,SAASC,EAAYC,EAAQd,GAClC,IAAIe,EAAM,CAACD,EAAOC,IAAK,MAAMC,KAAK,IAC9BC,EAAO,CAACH,EAAOG,KAAM,MAAMD,KAAK,IACpChB,EAAGD,MAAMgB,IAAMA,EACff,EAAGD,MAAMkB,KAAOA,sCC1GX,MAAMC,EACL,IAUKC,EAAU,CAAC,KAAM,IAAK,KAAM,KAAM,KAAM,IAAK,MCL1D,IAAIC,EAAOF,EACX,MAAMG,EAAMC,QAAQD,IAEb,SAASE,EAASC,GACvB,IAAKA,IAAUA,EAAMC,OAASD,EAAMC,KAAKC,OAAQ,OACjD,IAAID,EAAOD,EAAMC,KAIbE,EAAUnC,EAAE,WACZoC,EAAUpC,EAAE,WAChBe,EAAMoB,GACNpB,EAAMqB,GAGNH,EAAKI,QAAQC,IACX,IAAIC,EF+BD,SAAY1B,EAAKN,GACtB,IAAIC,EAAKN,SAASO,cAAc,KAGhC,OAFAD,EAAGM,YAAcD,EACbN,GAAOC,EAAGE,UAAUC,IAAIJ,GACrBC,EEnCMX,GACX0C,EAAK7B,UAAUC,IAAI,UACnB2B,EAAMD,QAAQG,IACZ,IAAIC,EAAQ7B,EAAK4B,EAAIE,MACjBF,EAAIG,KAAKF,EAAM/B,UAAUC,IAAI,aAC7B6B,EAAII,OAAOH,EAAM/B,UAAUC,IAAI,SACnB,KAAZ6B,EAAIE,MAAaD,EAAM/B,UAAUC,IAAI,SACzC4B,EAAKM,YAAYJ,KAEnBN,EAAQU,YAAYN,KAGZnC,EAAG,gBA0BR,SAAS0C,EAAYtC,EAAIuC,GACjBvC,EAAGwC,WACK,GAAjBD,EAAOb,OAWb,SAAmB1B,EAAIyC,GAErBzC,EAAGM,YAAc,GACjBmC,EAAKZ,QAAQ,CAACa,EAAKC,KACjB,IAAIV,EACAS,EAAIE,KAAKlB,QACXO,EAAQ7B,EAAKsC,EAAIA,IAAK,UAChBG,QAAQD,KAAOE,KAAKC,UAAUL,EAAIE,MAExCX,EAAQ7B,EAAKsC,EAAIA,IAAK,aAExB1C,EAAGqC,YAAYJ,GACXU,EAAMF,EAAKf,OAAO,GAAG1B,EAAGqC,YAAYjC,EAAKgB,EAAM,WAvB7B4B,CAAUhD,EAAIuC,EAAO,IAG3ClB,EAAI,SAIS7B,EAAE,aACRU,UAAU+C,OAAO,YAiErB,SAASC,EAAYlD,GACZR,EAAE,WAAhB,IACIoC,EAAUpC,EAAE,WAChBe,EAAMqB,GACN,IAAIuB,EAAKnD,EAAGM,YACRsC,EAAOE,KAAKM,MAAMpD,EAAG6C,QAAQD,MAE7BS,EAAQxE,EAAO,MAAO,QAC1B+C,EAAQS,YAAYgB,GACpB,IAAIC,EAAMzE,EAAO,IAAK,WACtByE,EAAIhD,YAAc6C,EAClBE,EAAMhB,YAAYiB,GAClBV,EAAKf,QAAQ0B,IACX,IAAIC,EAAS3E,EAAO,IAAK,cACzB2E,EAAOlD,YAAciD,EAAIE,MACzBJ,EAAMhB,YAAYmB,GAClB,IAAIE,EAAW7E,EAAO,IAAK,gBAC3B6E,EAASpD,YAAciD,EAAII,KAC3BN,EAAMhB,YAAYqB,GAClB,IAAIE,EAAM/E,EAAO,KAAM,WACvBwE,EAAMhB,YAAYuB,GAClBL,EAAIM,KAAKhC,QAAQiC,IACf,IAAIC,EAAQlF,EAAO,KAAM,aACzBkF,EAAMzD,YAAcwD,EAClBF,EAAIvB,YAAY0B,OC9JxB,MAAMC,EAAOzE,EAAQ,GACrB,IAAI0E,EAAM1E,EAAQ,GAClB,MAAM2E,EAAMC,SAAOD,IAEbE,GADQF,EAAIG,aACJH,EAAII,QAAQ,aACpBC,EAAWJ,SAAO5E,QAAQ,qBAC1B8B,EAAMC,QAAQD,IACdmD,EAAUjF,EAAQ,IAGxB,IAAIkF,EAAM,GACNC,EAAYV,EAAKW,QAAQP,EAAO,SAO7B,SAASQ,EAAYC,GAE1B,OADKJ,EAAI/C,QAAQoD,IAIZ,SAAmBD,GACxB,OAAOE,QAAQC,IAAIP,EAAIQ,IAAI,SAAUC,GACnC,OAAOA,EAAGC,QAAQ,CAChBN,KAAMA,EACNO,cAAc,IAEbC,KAAK,SAAUC,GACd,IAAKA,IAAQA,EAAIC,KAAM,MAAM,IAAIC,MAAM,iBACvC,IAAIC,EAAQC,IAAEC,QAAQL,EAAIC,KAAKN,IAAIW,GAAgBA,EAAIrC,MACnDX,EAAO8C,IAAEG,QAAQH,IAAEC,QAAQF,EAAMR,IAAIa,GAAiBA,EAAKlD,QAC/D,OAAKA,EAAKlB,QACVkB,EAAKf,QAAQ0B,IAASA,EAAIE,MAAQyB,EAAGzB,MAAOF,EAAIwC,OAASb,EAAGa,SACrDnD,GAFkB,KAGxBoD,MAAM,SAAUC,GACjB3E,QAAQD,IAAI,cAAe4E,QAjB1BC,CAASrB,GAiDX,SAASC,IACd,IAAIqB,EAAM5B,EAASnG,IAAI,OACvBiD,EAAI,mBAAoB8E,GACVT,IAAEC,QAAQQ,EAAIlB,IAAImB,GAAgBA,EAAGC,OAAUD,EAAGtI,KAAO,OAE/D+D,QAAQ,CAACyE,EAAI3D,KACnB,IAAI4D,EAAQvC,EAAKW,QAAQP,EAAO,QAASkC,GACrCE,EAAQ,IAAIhC,EAAQ+B,GACxBC,EAAM/C,MAAQ6C,EACdE,EAAMT,OAASpD,EACf8B,EAAIgC,KAAKD,KAnEbvC,EAAIyC,cAAchC,GCRlB,MAAMrD,EAAMC,QAAQD,IAEdkD,GADYhF,EAAQ,GACTA,EAAQ,GAAY4E,OAAO5E,QAAQ,sBAC9CoH,EAAYpH,EAAQ,KAIpBqH,iBAACA,IAHKrH,EAAQ,GACPA,EAAQ,GACPA,EAAQ,GACKA,EAAQ,GAAY4E,QAE/C,IAGI0C,EAFAC,EAAU,GACVC,EAAS,EAqEb,SAASC,EAAYC,IAXrB,WACE,MAAMC,EAAWxH,SAASG,iBAAiB,qBAC3CsH,MAAMhI,UAAU0C,QAAQnE,KAAKwJ,EAAWD,IACtCA,EAAQ/G,UAAU+C,OAAO,cAEdzD,EAAE,eACRU,UAAUC,IAAI,aACTX,EAAE,SACRU,UAAUC,IAAI,aAIpBiH,GAEA5H,EADkB,CAAC,IAAKyH,GAASjG,KAAK,KACzBd,UAAUC,IAAI,YA8BtB,SAASkH,EAAS7F,GACvB,IACEA,EAAQsB,KAAKM,MAAMN,KAAKC,UAAUvB,IAClC,MAAOyE,GACP5E,EAAI,gBAAiB4E,GACrBzE,EAAQ,GAEV,IAAIyF,EAAUzF,EAAMyF,SAAW,OAC1BA,IAASzF,EAAMyF,QAAU,QAC9BD,EAAYxF,EAAMyF,SAEbzF,EAAM8F,MACT9F,EAAM8F,KAAM,SACL9F,EAAM8F,IACbR,EAAQL,KAAKjF,GACbuF,EAASD,EAAQpF,OAAO,GAG1B,IAAI6F,EAAW/H,EAAE,aACF,QAAXyH,GAtHN,SAAkBzF,GAEhB,IAAIgG,EAAQjD,EAASnG,IAAI,gBAAkB,CAAC,GAAI,IAC5CyI,GAASrF,EAAMiG,KAAMZ,EAAMa,SAAS,GAC/Bb,GAAOA,EAAMc,SAASH,GAE3BX,IACJtC,EAASqD,IAAI,cAAeJ,GAE5BX,EAAQgB,IAAM,CAAC,UAAW,WAAY,CACpCL,MAAOA,EACPM,WAAY,EACZC,OAAQ,aACRC,QAAS,CAAC,EAAG,GACbC,UAAW,SAAUT,GACnBjD,EAASqD,IAAI,cAAeJ,GAC5BZ,IAAmBsB,YAGnB1G,EAAMiG,MAAMZ,EAAMa,SAAS,GAE/BhI,SAASyI,iBAAiB,UAAW,SAASC,MAE3C,GAEH1I,SAASyI,iBAAiB,QAAS,SAASC,MAEzC,IA2FoBC,CAAS7G,GAAQD,EAASC,IAC5C+F,EAASrH,UAAU+C,OAAO,YAE/BzB,EAAQ,CAACyF,QAAS,QAClB1C,EAASqD,IAAI,QAASpG,GA3FxBmF,EAAU5H,KAAK,CAAC,WAAY,aAAc,SAASqJ,GACjC,IAAZA,EAAGE,MAwCT,WAEE,GAAIvB,GAAU,EAAG,OACZA,IACL,IAAIvF,EAAQsF,EAAQC,GACpBvF,EAAM8F,KAAM,EACZD,EAAS7F,GA9CW+G,GACC,IAAZH,EAAGE,OAgDd,WAEE,GAAIvB,GAAUD,EAAQpF,OAAO,EAAG,OAC3BqF,IACL,IAAIvF,EAAQsF,EAAQC,GAEpBvF,EAAM8F,KAAM,EACZD,EAAS7F,GAvDgBgH,KAG3B7B,EAAU5H,KAAK,CAAC,QAAS,SAAU,SAASqJ,MAK5CzB,EAAU5H,KAAK,CAAC,OAAQ,SAASqJ,MAIjCzB,EAAU5H,KAAK,CAAC,UAAW,SAASqJ,GAClC/G,EAAI,eD+BC,WACAoD,EAAI/C,QAAQoD,IACjB,IAAI2D,EAAU/C,IAAEgD,KAAKjE,EAAKS,GAA0B,YAAZA,EAAGzB,OAC3CpC,EAAI,UAAWoH,EAAQhF,OACvB,IAAIkF,EAAW,IAAInE,EAAQ,kCAC3BiE,EAAQG,UAAUC,GAAGF,GAAUG,GAAG,WAAY,WAC5CzH,EAAI,qBACHyH,GAAG,QAAS,SAAU7C,GACvB5E,EAAI,6BAA8B4E,KCtCpC8C,KAGFpC,EAAU5H,KAAK,CAAC,UAAW,SAASqJ,GAClC/G,EAAI,YACJkD,EAASqD,IAAI,MAAO,MCtEZtG,QAAQD,IAAlB,IAcI2H,EAAa,CACfC,IAAO,WACP9G,IAAO,WACP+G,IAAO,mBChBG5H,QAAQD,IAApB,MACMD,EAAOF,EAoDN,SAASiI,EAAOC,GAErB,IAAIC,EAAMC,EACNC,EAAS,GACb,IAAK,IAAI5G,EAAM,EAAGA,EAAMyG,EAAK1H,OAAS,EAAGiB,IAAO,CAG9C,IAAI6G,EAAQ,CAACH,KAFbA,EAAOD,EAAKK,MAAM,EAAG9G,GAEI2G,KADzBA,EAAOF,EAAKK,MAAM9G,IAEd2G,EAAK5H,QAAQ6H,EAAO9C,KAAK+C,GAE/B,OAAOD,EAAOG,UC3DhB,IAAItI,EAAOF,EACX,MAAMG,EAAMC,QAAQD,IAEb,SAASsI,EAAY3J,GACXR,EAAE,aACRU,UAAUC,IAAI,YACvB,IAAIyJ,EAAS,IAAIC,OAAOzI,EAAK,KACzBf,EAAML,EAAGM,YAAYwJ,OAAOC,QAAQH,EAAQ,IAC5CR,EAAO/I,EAAIwG,MAAMzF,GAIjB4I,GAAQ,EAFChK,EAAGwC,WAGLtC,UAAU+J,SAAS,eAAcD,GAAQ,GACpD,IAAIE,EDAC,SAAmB7J,EAAK2J,GAC7B,IAAIZ,EAAO/I,EAAIwG,MAAMzF,GAEjBkG,EAAMjH,EAEN6J,GADOd,EAAK1H,OACJ,CAAC,CAAC0H,MACd,SAASe,EAAIf,EAAMgB,GAEJjB,EAAOC,GACbvH,QAAQ2H,IACbY,EAAK3D,KAAK+C,EAAMH,MAChBe,EAAK3D,KAAK+C,EAAMF,MAGZ5D,IAAEG,QAAQuE,GAAMpJ,KAAKI,IAASkG,IAChC4C,EAAMzD,KAAKf,IAAE2E,MAAMD,IACnBA,EAAKE,OAEHF,EAAK1I,OAAS,GAAGyI,EAAIX,EAAMF,KAAMc,GAErCA,EAAKE,QAGTH,CAAIf,EAAM,IACV,IAAImB,EAAS,GAQb,OAPAL,EAAMrI,QAAQuI,IACZ,IAAII,EAAQ,GACZJ,EAAKvI,QAAQa,IACX8H,EAAM/D,KAAK/D,EAAI1B,KAAKI,MAEtBmJ,EAAO9D,KAAK+D,KAEPD,EChCKE,CAAUpK,GACtBgB,EAAI,cAAe+H,EAAK1H,OAAQ,KAAMwI,EAAMxI,QAC5CL,EAAI,cAAe+H,EAAK1H,OAAQ,KAAMwI,EAAM,KAM5CtF,EDvBK,SAAmBsF,GAYxB,OAAOxE,IAAEgF,KAAKhF,IAAEG,QAAQqE,ICObS,CAAUT,IAKlB7E,KAAKzC,IACJA,EAAO8C,IAAEG,QAAQjD,GACjBvB,EAAI,OAAQuB,GAEZ,IAAI0C,EAuBV,SAAoB4E,EAAOtH,GACzB,IAgBIgI,EAAOC,EAhBPtI,EAAS,GACTuI,EAAQ,GACZZ,EAAMrI,QAAQuH,IACZ,IAAI2B,EAAQ,GACRC,GAAM,EACNH,GAAO,EACXzB,EAAKvH,QAAQa,IACX,IAAIuI,EAAUvF,IAAEwF,OAAOtI,EAAMW,IAmDnC,SAAmBlD,EAAKgJ,GACtB,GAAIhJ,GAAOgJ,EAAM,OAAO,EACxB,IAAI8B,EAAM,IAAItB,OAAO,IAAMR,GACvBC,EAAOjJ,EAAI0J,QAAQoB,EAAK,IAC5B,QAAQ9K,GAAOiJ,IAAQnI,EAAQiK,SAAS9B,KAvDS+B,CAAU3I,EAAKa,EAAII,OAC5DsH,EAAQvJ,SAAQsJ,GAAM,GACrBC,EAAQvJ,SAAQmJ,GAAO,GAC5B,IAAItH,EAAM,CAACb,IAAKA,EAAKE,KAAMqI,GAC3BF,EAAMtE,KAAKlD,KAETyH,GAAKzI,EAAOkE,KAAKsE,GACjBF,GAAMC,EAAMrE,KAAKsE,KAGnBD,EAAMpJ,QAAQkJ,EAAQU,EAAYR,GAAQD,GAAO,GAChDD,EAAQU,EAAY/I,GACzB,MAAO,CAACA,OAAQqI,EAAOC,KAAMA,GA3CfU,CAAWrB,EAAOtH,GAC5BvB,EAAI,eAAgBiE,EAAIuF,KAAMvF,EAAI/C,OAAOb,OAAQ4D,EAAI/C,QAChD+C,EAAI/C,OAAOb,QLkIf,SAAkB1B,GACvBqB,EAAI,YAAarB,EAAGM,aAEpBC,EADcf,EAAE,YAEDA,EAAE,aACRU,UAAU+C,OAAO,YKvIEuI,CAASxL,GACjCsC,EAAYtC,EAAIsF,EAAI/C,UAkE1B,SAAS+I,EAAY/I,GACnB,IAAIkJ,EAAM/F,IAAE+F,IAAIlJ,EAAO0C,IAAI8F,GAAmBrF,IAAEgG,IAAIX,EAAM9F,IAAI0G,GAAoBA,EAAQ/I,KAAKlB,OAASiK,EAAQjJ,IAAIhB,OAAS,IAAMqJ,EAAMrJ,SAErIkK,EAAWlG,IAAEwF,OAAO3I,EAAQwI,GAAkBrF,IAAEgG,IAAIX,EAAM9F,IAAI0G,GAAoBA,EAAQ/I,KAAKlB,OAASiK,EAAQjJ,IAAIhB,OAAS,IAAMqJ,EAAMrJ,QAAU+J,EAAM,GAIzJI,EAAMnG,IAAEmG,IAAID,EAAS3G,IAAI8F,GAAmBA,EAAMrJ,SAGtD,OADiBgE,IAAEwF,OAAOU,EAAUb,GAAkBA,EAAMrJ,QAAUmK,GC9GxE,MAAMxK,EAAMC,QAAQD,IAEb,SAASyK,EAActK,GAC5BH,EAAI,mBAGC,SAAS0K,EAASvK,GACvBH,EAAI,kBCMN,MAAMkD,GAAWhF,EAAQ,GAAY4E,OAAO5E,QAAQ,qBAO9C8B,IAJO9B,EAAQ,IACPA,EAAQ,IAERA,EAAQ,GACV+B,QAAQD,KAId2K,IAFOzM,EAAQ,GAEHA,EAAQ,KACpB0M,OAACA,GAAQrF,iBAAgBA,IAAIrH,EAAQ,GAAY4E,OAEzC5E,EAAQ,IAQXC,EAAE,gBAAb,IAEI0M,GAAY1M,EAAE,cACJI,EAAG,sBACTiC,QAAQsK,IACd,IACIlF,EADUkF,EAAKC,OACGzM,cAAc,YACpCuM,GAAU7J,YAAY4E,EAAQoF,WAAU,MAG1CC,cAAYxD,GAAG,UAAW,SAAUyD,EAAOtF,GACzCI,EAAS,CAACJ,QAASA,MAGrBqF,cAAYxD,GAAG,SAAU,SAAUyD,EAAOC,GAC1B,YAAVA,EAAsBP,GAAOQ,eAAe,CAACC,WAAY,CAAC,YAAaC,QAAS,CAAC,CAAC7O,KAAM,OAAQ8O,WAAY,CAAC,eAAiBd,GAC/G,OAAVU,EAAiBP,GAAOQ,eAAe,CAACC,WAAY,CAAC,YAAaC,QAAS,CAAC,CAAC7O,KAAM,OAAQ8O,WAAY,CAAC,eAAiBb,GAC/G,aAAVS,GNrCTnL,EAAI,cM0CN,IAAIG,GAAQ+C,GAASnG,IAAI,SAEpBoD,KAAOA,GAAQ,CAACyF,QAAS,SAC9BI,EAAS7F,IAET9B,SAASyI,iBAAiB,QAAUC,IAClC,IAAIyE,EAAOzE,EAAG0E,OAAOjK,QACrB,GAAKgK,EACL,GAAIA,EAAKE,SAAU,CACjB,IAAIC,EAAO5E,EAAG0E,OAAOxM,YACrB2M,QAAMC,aAAaF,QACVH,EAAK5F,SACdI,EAAS,CAACJ,QAAS4F,EAAK5F,YAK5BvH,SAASyI,iBAAiB,YAAa,SAASC,GACzCA,EAAG0E,OAAOxM,cACX8H,EAAG0E,OAAO5M,UAAU+J,SAAS,aACZ,GAAf7B,EAAG+E,SPxCJ,SAAoBnN,GACzB,IAAIc,EAASH,EAAUX,GAEnBoN,EAAcC,IAAOrN,EAAGM,aACxBgN,EAAU,CAACvM,IAAKD,EAAOC,IAAM,GAAIE,KAAMH,EAAOG,KAAO,IACrDsM,EAAS/N,EAAE,eACf+N,EAAOjN,YAAc8M,EACrBG,EAAOrN,UAAU+C,OAAO,aACxBpC,EAAWyM,EAASC,GOiChBC,CAAWpF,EAAG0E,QAGdnD,EAAYvB,EAAG0E,QAER1E,EAAG0E,OAAO5M,UAAU+J,SAAS,UACtC/G,EAAYkF,EAAG0E,WAEhB,GAEHpN,SAASyI,iBAAiB,aAAc,SAASC,GAC/C,GAAKA,EAAG0E,OAAO5M,UACf,GAAIkI,EAAG0E,OAAO5M,UAAU+J,SAAS,aAAc,CAChCzK,EAAE,eACRU,UAAUC,IAAI,kBAChB,GAAIiI,EAAG0E,OAAO5M,UAAU+J,SAAS,QAAS,CAC/C5I,GAAI,eACQ7B,EAAE,SACRU,UAAUC,IAAI,gBAErB,GAEHT,SAASyI,iBAAiB,QAAS,SAASC,GAC7B5I,EAAE,eACRU,UAAUC,IAAI,aACTX,EAAE,SACRU,UAAUC,IAAI,eACnB,GAGH6L,GACGlD,GAAG,eAAgB,KAClB,IACIrH,EJ3FO,EAACgM,EAAMpN,KACpB,IAAIqN,EAAK,IAAI7D,OAAOb,EAAWyE,IAC/B,IAAKC,EAAGC,KAAKtN,GAAM,OACnB,IAAImK,EAAQnK,EAAIyJ,OAAOC,QAAQ,KAAM,KACjC6D,EAAUpD,EAAM3D,MAAM,KAAK7F,KAAK,IACpC,IAAK0M,EAAGC,KAAKC,GAAU,OACvB,IAAIC,EAAM,IAAIhE,OAfH,eAgBPtE,EAAOiF,EAAMT,QAAQ,SAAU,MAAMlD,MAAM,MAE3C/E,GADWyD,EAAKN,IAAIW,GAAgBA,EAAIiB,MAAMgH,IACtC,IAqBZ,OApBAtI,EAAK1D,QAAQ+D,IACX,IAAIkI,EAAO,GACIlI,EAAIiB,MAAMgH,GAChBhM,QAAQkM,IACf,GAAIF,EAAIF,KAAKI,GAAU,CACrB,IAAI/L,EAAM,CAACE,KAAM6L,EAAS3L,OAAO,GACjC0L,EAAKrH,KAAKzE,OACL,CACL,IAAIgM,EAAUD,EAAQlH,MAAM6G,IAC5BM,EAAUtI,IAAEC,QAAQqI,IACZnM,QAAQoM,IACd,IACIjM,EAAM,CAACE,KAAM+L,KADLP,EAAGC,KAAKM,KAEVjM,EAAIyL,IAAQ,GACtBK,EAAKrH,KAAKzE,QAIhBF,EAAM2E,KAAKqH,KAENhM,GI6DMoM,CAAM,MADPlC,GAAUmC,YAEf1M,GAASA,EAAKC,QAKnB2F,EADY,CAACJ,QAAS,OAAQxF,KAAMA,MAIrC2M,gBN9EI,WACL,IAAIjI,EAAM5B,EAASnG,IAAI,OAClB+H,IAAKA,EAIZ,SAAuB/B,EAAOiK,GAC5BhN,EAAI,gBACJ,IAAIiN,EAAWtK,EAAKW,QAAQP,EAAO,SAC/BmK,EAAMtK,EAAIuK,YAAYF,GAEtBnI,EAAM,GAYV,OAXAoI,EAAI1M,QAAQ,CAACyE,EAAI3D,KACf,GAAU,YAAN2D,EAAkB,OACVtC,EAAKW,QAAQ2J,EAAUhI,GAAnC,IACIF,EAAK,CAACtI,KAAMwI,EAAID,QAAQ,EAAM1D,IAAKA,GACvCwD,EAAIM,KAAKL,KAEX7B,EAASqD,IAAI,MAAOzB,GAEpB9E,EAAI,eAAgB8E,GAGbA,EArBSsI,CAAcrK,IM8EhCsK","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","module.exports = require(\"electron\");","module.exports = require(\"lodash\");","module.exports = require(\"path\");","module.exports = require(\"fs-extra\");","module.exports = require(\"electron-clipboard-extended\");","module.exports = require(\"slash\");","module.exports = require(\"split.js\");","module.exports = require(\"cholok\");","module.exports = require(\"util\");","module.exports = require(\"pouchdb\");","module.exports = require(\"mousetrap\");","module.exports = require(\"json5\");","module.exports = require(\"axios\");","module.exports = require(\"electron-is-dev\");","import _ from 'lodash'\n\nlet util = require('util')\n\nexport function q (sel) {\n  return document.querySelector(sel)\n}\n\nexport function qs (sel) {\n  return document.querySelectorAll(sel)\n}\n\nexport function create (tag, style) {\n  let el = document.createElement(tag)\n  if (style) el.classList.add(style)\n  return el\n}\n\nexport function recreateDiv (sel) {\n  let el = document.querySelector(sel)\n  if (el) el.parentElement.removeChild(el)\n  el = document.createElement('div')\n  el.classList.add(sel)\n  // el.id = sel\n  return el\n}\n\nexport function recreate (element) {\n  var newElement = element.cloneNode(true)\n  element.parentNode.replaceChild(newElement, element)\n}\n\n// function cret (str) {\n//   return document.createTextNode(str)\n// }\n\nexport function span (str, style) {\n  let el = document.createElement('span')\n  el.textContent = str\n  if (style) el.classList.add(style)\n  return el\n}\n\nexport function br () {\n  let oBR = document.createElement('br')\n  return oBR\n}\n\nexport function div (str, style) {\n  let el = document.createElement('div')\n  el.textContent = str\n  if (style) el.classList.add(style)\n  return el\n}\n\nexport function p (str, style) {\n  let el = document.createElement('p')\n  el.textContent = str\n  if (style) el.classList.add(style)\n  return el\n}\n\nexport function empty (el) {\n  if (!el) return\n  while (el.hasChildNodes()) {\n    el.removeChild(el.lastChild)\n  }\n}\n\nexport function remove (el) {\n  if (!el) return\n  el.parentElement.removeChild(el)\n}\n\nexport function removeAll (sel) {\n  let els = document.querySelectorAll(sel)\n  els.forEach(el => { el.parentElement.removeChild(el) })\n}\n\n// function closeAll() {\n//     words = null\n//     // window.close()\n//     ipcRenderer.send('sync', 'window-hide')\n// }\n\nexport function findAncestor (el, cls) {\n  while ((el = el.parentElement) && !el.classList.contains(cls)) {\n    return el\n  }\n}\n\nexport function plog () {\n  var vs = _.values(arguments)\n  if (vs.length === 1) vs = vs[0]\n  // console.log(util.inspect(vs, {showHidden: false, depth: null}))\n  console.log(util.inspect(vs, {showHidden: false, depth: 3}))\n}\n\nexport function getCoords (el) {\n  let rect = el.getBoundingClientRect()\n  return rect\n  // return {top: rect.top, left: rect.left}\n}\n\nexport function placePopup (coords, el) {\n  let top = [coords.top, 'px'].join('')\n  let left = [coords.left, 'px'].join('')\n  el.style.top = top\n  el.style.left = left\n}\n","//\n\nexport const tibsyms = {\n  tsek: '་',\n  connective: 'འི',\n  subordinative: 'ར', // ladon\n  narrative: 'འོ',\n  interrog: 'འམ',\n  coupling: 'འི',\n  ergative: 'ས',\n  concessive: 'འང'\n}\n\nexport const tibsyls = ['འི', 'ར', 'འོ', 'འམ', 'འི', 'ས', 'འང']\n","//\nimport _ from 'lodash'\nimport { q, qs, empty, create, remove, span, p, div, getCoords, placePopup } from './utils'\nimport cholok from 'cholok'\nimport { tibsyms, tibsyls } from \"./tibetan_data\";\n// import { possibleKeys } from \"./segmenter\";\n// import { getPossible } from \"./pouch\";\n\nlet tsek = tibsyms.tsek\nconst log = console.log\n\nexport function showText(state) {\n  if (!state || !state.pars || !state.pars.length) return\n  let pars = state.pars\n  // log('PARS', pars)\n  // let progress = q('#progress')\n  // progress.classList.add('is-shown')\n  let osource = q('#source')\n  let oresult = q('#result')\n  empty(osource)\n  empty(oresult)\n\n  // let wfs = []\n  pars.forEach(spans => {\n    let opar = p()\n    opar.classList.add('tibpar')\n    spans.forEach(spn => {\n      let ospan = span(spn.text)\n      if (spn.tib) ospan.classList.add('tibphrase') // , wfs.push(spn.text)\n      if (spn.punct) ospan.classList.add('punct') //, wfs.push(spn.text)\n      if (spn.text == ' ') ospan.classList.add('space')\n      opar.appendChild(ospan)\n    })\n    osource.appendChild(opar)\n  })\n\n  let grs = qs('span.tibetan')\n  // if (grs.length == 1) showResults(grs[0].textContent)\n}\n\nexport function showCholok(el) {\n  let coords = getCoords(el)\n  // log('SHOW TRANS', coords)\n  let trnanscript = cholok(el.textContent)\n  let ncoords = {top: coords.top - 40, left: coords.left + 15}\n  let otrans = q('#transcript')\n  otrans.textContent = trnanscript\n  otrans.classList.remove('is-hidden')\n  placePopup(ncoords, otrans)\n}\n\n// log('PARENT', parent.classList)\n// if (bests.length == 1) replaceEL(el, bests[0])\n// else {\n//   if (parent.classList.contains('tibpar')) {\n//     showAmbis(el, bests)\n//   } else if (parent.classList.contains('ambiline')) {\n//     log('HERE')\n//     // showAmbis(el, bests)\n//   }\n// }\n\nexport function parsePhrase(el, chains) {\n  let parent = el.parentNode\n  if (chains.length == 1) replaceEL(el, chains[0])\n  else {\n    // let common = commonParts(chains)\n    log('AMBI:')\n    // if (common) replaceEL(el, common)\n    // else showAmbis(el, chains)\n  }\n  let progress = q('#progress')\n  progress.classList.remove('is-shown')\n}\n\nfunction replaceEL(el, best) {\n  // log('REPLACE EL')\n  el.textContent = ''\n  best.forEach((seg, idx)=> {\n    let ospan\n    if (seg.docs.length) {\n      ospan = span(seg.seg, 'tibwf')\n      ospan.dataset.docs = JSON.stringify(seg.docs)\n    } else {\n      ospan = span(seg.seg, 'tibphrase')\n    }\n    el.appendChild(ospan)\n    if (idx < best.length-1) el.appendChild(span(tsek, 'tsek'))\n  })\n}\n\nfunction showAmbis(el, bests) {\n  let coords = getCoords(el)\n  log('SHOW AMBI', bests)\n  let oambi = q('#ambi')\n  empty(oambi)\n  oambi.classList.remove('is-hidden')\n  let ncoords = {top: coords.bottom + 12, left: coords.left}\n  placePopup(ncoords, oambi)\n  let oul = create('ul', 'ambilist')\n  oambi.appendChild(oul)\n  bests.forEach(chain=> {\n    let oline = create('li', 'ambiline')\n    oul.appendChild(oline)\n    chain.forEach(seg=> {\n      // log('===>SEG', seg)\n      let owf = (seg.docs.length) ? span(seg.seg, 'tibwf') : span(seg.seg, 'tibphrase')\n      oline.appendChild(owf)\n      showResults(el)\n    })\n  })\n}\n\n// function commonParts(chains) {\n//   let first = chains[0]\n//   let clean = []\n//   let ambis\n//   let common = false\n//   for (let idx = 0; idx < first.length; idx++) {\n//     let segs = chains.map(segs=> { return segs[idx].seg })\n//     if (_.uniq(segs).length == 1) {\n//       clean.push(first[idx])\n//       common = true\n//     } else {\n//       if (!ambis) {\n//         ambis = {seg: '', docs: []}\n//         clean.push(ambis)\n//       }\n//       ambis.seg += first[idx].seg\n//       if (idx < first.length-1) ambis.seg += tsek\n//     }\n//   }\n//   return (common) ? clean : common\n//   // log('CLEAN', clean)\n// }\n\n\nexport function showResults(el) {\n  let osource = q('#source')\n  let oresult = q('#result')\n  empty(oresult)\n  let wf = el.textContent\n  let docs = JSON.parse(el.dataset.docs)\n  // log('RESULT docs', wf, docs)\n  let odict = create('div', 'dict')\n  oresult.appendChild(odict)\n  let owf = create('p', 'dict-wf')\n  owf.textContent = wf\n  odict.appendChild(owf)\n  docs.forEach(doc=> {\n    let odname = create('p', 'dict-dname')\n    odname.textContent = doc.dname\n    odict.appendChild(odname)\n    let oarticle = create('p', 'dict-article')\n    oarticle.textContent = doc.dict\n    odict.appendChild(oarticle)\n    let oul = create('ul', 'dict-ul')\n    odict.appendChild(oul)\n    doc.trns.forEach(trn=> {\n      let oline = create('li', 'dict-line')\n      oline.textContent = trn\n        oul.appendChild(oline)\n    })\n  })\n  // let oseg\n}\n\nexport function noResult(el) {\n  log('NO RESULT', el.textContent)\n  let oresult = q('#result')\n  empty(oresult)\n  let progress = q('#progress')\n  progress.classList.remove('is-shown')\n}\n","import _ from 'lodash'\nimport { remote } from \"electron\";\n\nconst path = require('path')\nlet fse = require('fs-extra')\nconst app = remote.app;\nconst apath = app.getAppPath()\nconst upath = app.getPath(\"userData\")\nconst settings = remote.require('electron-settings')\nconst log = console.log\nconst PouchDB = require('pouchdb')\n\n\nlet dbs = []\nlet pouchpath = path.resolve(upath, 'pouch')\nfse.ensureDirSync(pouchpath)\n\nexport function cleanupDB(state) {\n  log('CLEAN UP')\n}\n\nexport function getPossible(keys) {\n  if (!dbs.length) setDBs()\n  return queryDBs(keys)\n}\n\nexport function queryDBs (keys) {\n  return Promise.all(dbs.map(function (db) {\n    return db.allDocs({\n      keys: keys,\n      include_docs: true\n    })\n      .then(function (res) {\n        if (!res || !res.rows) throw new Error('no dbn result')\n        let rdocs = _.compact(res.rows.map(row => { return row.doc }))\n        let docs = _.flatten(_.compact(rdocs.map(rdoc => { return rdoc.docs })))\n        if (!docs.length) return []\n        docs.forEach(doc => { doc.dname = db.dname, doc.weight = db.weight })\n        return docs\n      }).catch(function (err) {\n        console.log('ERR GET DBs', err)\n      })\n  }))\n}\n\nexport function checkCfg() {\n  let cfg = settings.get('cfg')\n  if (!cfg) cfg = createZeroCfg(upath)\n  return cfg\n}\n\nfunction createZeroCfg(upath, version) {\n  log('__ZERO CFG__')\n  let destpath = path.resolve(upath, 'pouch')\n  let fns = fse.readdirSync(destpath)\n\n  let cfg = []\n  fns.forEach((dn, idx) => {\n    if (dn == 'cfg.json') return\n    let dpath = path.resolve(destpath, dn)\n    let cf = {name: dn, active: true, idx: idx}\n    cfg.push(cf)\n  })\n  settings.set('cfg', cfg)\n\n  log('__ZERO CFG__', cfg)\n  // let versionpath = path.resolve(upath, 'version.json')\n  // fse.writeJsonSync(versionpath, {version: version})\n  return cfg\n}\n\n// а если новая база?\nexport function setDBs() {\n  let cfg = settings.get('cfg')\n  log('===setDBs CFG===', cfg)\n  let dbnames = _.compact(cfg.map(cf => { return (cf.active) ? cf.name : null }))\n  // log('DBNS', dbnames)\n  dbnames.forEach((dn, idx) => {\n    let dpath = path.resolve(upath, 'pouch', dn)\n    let pouch = new PouchDB(dpath)\n    pouch.dname = dn\n    pouch.weight = idx\n    dbs.push(pouch)\n  })\n\n  // let localDB = dbs[0]\n  // let remoteDB = new PouchDB('http://localhost:5984/vasilyev')\n  // localDB.replicate.to(remoteDB).on('complete', function () {\n  //   log('yay, were done!')\n  // }).on('error', function (err) {\n  //   log('boo, something went wrong!', err)\n  // })\n}\n\n// adduser --system --home /opt/couchdb --no-create-home --shell /bin/bash -g couchdb couchdb\n// useradd --system -b /opt/couchdb --shell /bin/bash -g couchdb couchdb\n// sudo -i -u couchdb bin/couchdb\n// lobsang vasilyev\nexport function replicateDB() {\n  if (!dbs.length) setDBs()\n  let localDB = _.find(dbs, db=> { return db.dname == 'vasilyev'})\n  log('DB-name', localDB.dname)\n  let remoteDB = new PouchDB('http://localhost:5984/vasilyev')\n  localDB.replicate.to(remoteDB).on('complete', function () {\n    log('yay, were done!')\n  }).on('error', function (err) {\n    log('boo, something went wrong!', err)\n  })\n}\n","//\nimport _ from \"lodash\"\nimport { q, qs, empty, create, remove, span, p, div, enclitic } from './utils'\nimport Split from 'split.js'\nimport { showText } from \"./parsedata\";\nimport { replicateDB } from \"./pouch\";\n\nconst log = console.log\nconst clipboard = require('electron-clipboard-extended')\nconst settings = require('electron').remote.require('electron-settings')\nconst Mousetrap = require('mousetrap')\nconst fse = require('fs-extra')\nconst path = require('path')\nconst slash = require('slash')\nconst {getCurrentWindow} = require('electron').remote\n\nlet init = {section: 'home'}\nlet history = []\nlet hstate = 0\nlet split\n\nfunction twoPanes(state) {\n\n  let sizes = settings.get('split-sizes') || [50, 50]\n  if (split && state.mono) split.collapse(1)\n  else if (split) split.setSizes(sizes)\n\n  if (split) return\n  settings.set('split-sizes', sizes)\n\n  split = Split(['#source', '#result'], {\n    sizes: sizes,\n    gutterSize: 5,\n    cursor: 'col-resize',\n    minSize: [0, 0],\n    onDragEnd: function (sizes) {\n      settings.set('split-sizes', sizes)\n      getCurrentWindow().reload()\n    }\n  })\n  if (state.mono) split.collapse(1)\n\n  document.addEventListener(\"keydown\", function(ev) {\n    // keyPanes(ev, state)\n  }, false)\n\n  document.addEventListener(\"wheel\", function(ev) {\n    // scrollPanes(ev, state)\n  }, false)\n}\n\n// arrows\nMousetrap.bind(['alt+left', 'alt+right'], function(ev) {\n  if (ev.which == 37) goLeft()\n  else if (ev.which == 39) goRight()\n})\n\nMousetrap.bind(['alt+1', 'alt+2'], function(ev) {\n  // if (ev.which == 49) log('----1')\n  // else if (ev.which == 50) log('----2')\n})\n\nMousetrap.bind(['esc'], function(ev) {\n  // похоже, общий метод не получится\n})\n\nMousetrap.bind(['ctrl+k'], function(ev) {\n  log('CLICK CLONE')\n  replicateDB()\n})\n\nMousetrap.bind(['ctrl+p'], function(ev) {\n  log('ZERO CFG')\n  settings.set('cfg', '')\n})\n\nfunction hideAll () {\n  const sections = document.querySelectorAll('.section.is-shown')\n  Array.prototype.forEach.call(sections, (section) => {\n    section.classList.remove('is-shown')\n  })\n  let otrans = q('#transcript')\n  otrans.classList.add('is-hidden')\n  let oambi = q('#ambi')\n  oambi.classList.add('is-hidden')\n}\n\nfunction showSection(section) {\n  hideAll()\n  const sectionId = ['#', section].join('')\n  q(sectionId).classList.add('is-shown')\n}\n\nfunction goLeft() {\n  // log('left', hstate, history.length)\n  if (hstate <= 0) return\n  else hstate--\n  let state = history[hstate]\n  state.old = true\n  navigate(state)\n}\n\nfunction goRight() {\n  // log('right', hstate, history.length)\n  if (hstate >= history.length-1) return\n  else hstate++\n  let state = history[hstate]\n  // log('RIGTH', state)\n  state.old = true\n  navigate(state)\n}\n\n// let last = _.last(history)\n// if (!last) history.push(state)\n// else {\n//   if (last.section != section) history.push(state)\n//   // history.push(state)\n//   hstate = history.length-1\n// }\n\nexport function navigate(state) {\n  try {\n    state = JSON.parse(JSON.stringify(state))\n  } catch (err) {\n    log('NAV-state ERR', err)\n    state = {}\n  }\n  let section = state.section || 'home'\n  if (!section) state.section = 'home'\n  showSection(state.section)\n\n  if (!state.old) {\n    state.old = false\n    delete state.old\n    history.push(state)\n    hstate = history.length-1\n  }\n  // log('HIST', history)\n  let progress = q('#progress')\n  if (section == 'main') twoPanes(state), showText(state)\n  else progress.classList.remove('is-shown')\n\n  state = {section: 'home'}\n  settings.set('state', state)\n}\n","// ================ потом перенести speckled band\n\nimport _ from \"lodash\";\nlet log = console.log\n\n// https://iso639-3.sil.org/code_tables/639/data --> three letter codes\n\n// punctuation \\u002E\\u002C\\u0021\\u003A\\u003B\\u00B7 - \\u0020\\u0027 - ... middle dot, - space, apostrophe\n// parens ()[]{-/\n// \\u0028\\u0029\\u005B\\u005D\\u007B\\u007D\\u002D\\u002F\n// greek 0370-03FF 1F00–1FFF\n// diactitic 0300-036F\n// tibetan shad - ། U+0F0D : TIBETAN MARK SHAD {shey} // punctuation\n\nlet puncts = '([\\u002E\\u002C\\u0021\\u003A\\u003B\\u00B7\\u0F0D])'\n\n// san - sansktit\nlet coderanges = {\n  'zho': '([\\u4E00-\\u9FFF]+)',\n  'tib': '([\\u0F00-\\u0FFF]+)',\n  'grc': '([\\u0370-\\u03FF\\u1F00-\\u1FFF\\u0300-\\u036F\\u0027]+)'\n}\n\nexport default (code, str) => {\n  let re = new RegExp(coderanges[code])\n  if (!re.test(str)) return\n  let clean = str.trim().replace(/᾽/g, \"\\'\")\n  let wopunct = clean.split(\"'\").join('')\n  if (!re.test(wopunct)) return\n  let rep = new RegExp(puncts)\n  let rows = clean.replace(/\\r?\\n+/, '\\n').split('\\n')\n  let rclauses = rows.map(row => { return row.split(rep) })\n  let spans = []\n  rows.forEach(row => {\n    let spns = []\n    let rclauses = row.split(rep)\n    rclauses.forEach(rclause => {\n      if (rep.test(rclause)) {\n        let spn = {text: rclause, punct: true}\n        spns.push(spn)\n      } else {\n        let clauses = rclause.split(re)\n        clauses = _.compact(clauses)\n        clauses.forEach(clause => {\n          let lang = (re.test(clause)) ? true : false\n          let spn = {text: clause}\n          if (lang) spn[code] = true\n          spns.push(spn)\n        })\n      }\n    })\n    spans.push(spns)\n  })\n  return spans\n}\n","import _ from 'lodash'\nimport { getPossible } from \"./pouch\";\nimport { tibsyms, tibsyls } from \"./tibetan_data\";\n\nconst log = console.log\nconst tsek = tibsyms.tsek\n\nexport function totalKeys(pdchs) {\n  // let segs = _.uniq(_.flatten(pdchs))\n  // let added = []\n  // segs.forEach(seg=>{\n  //   tibsyls.forEach(syl=>{\n  //     let resyl = new RegExp(syl+'$')\n  //     let poss = seg.replace(resyl, '')\n  //     if (seg != poss) added.push(poss)\n  //   })\n  // })\n  // let keys = segs.concat(added)\n  // return _.uniq(keys)\n  return _.uniq(_.flatten(pdchs))\n}\n\nexport function segmenter(str, depth) {\n  let segs = str.split(tsek)\n  // log('SEGS', segs)\n  let old = str\n  let size = segs.length\n  let pdchs = [[segs]]\n  function rec(segs, pdch) {\n    // log('PDCH', pdch)\n    let flakes = scrape(segs)\n    flakes.forEach(flake => {\n      pdch.push(flake.head)\n      pdch.push(flake.tail)\n      // pdch = pdch.concat(flake.head)\n      // pdch = pdch.concat(flake.tail)\n      if (_.flatten(pdch).join(tsek) == old) {\n        pdchs.push(_.clone(pdch))\n        pdch.pop()\n      }\n      if (pdch.length < 2) rec(flake.tail, pdch) // three parts for now !\n      // rec(flake.tail, pdch)\n      pdch.pop()\n    })\n  }\n  rec(segs, [])\n  let cleans = []\n  pdchs.forEach(pdch=> {\n    let clean = []\n    pdch.forEach(seg=>{\n      clean.push(seg.join(tsek))\n    })\n    cleans.push(clean)\n  })\n  return cleans\n}\n\nexport function scrape(segs) {\n  // log('SEGS', segs)\n  let head, tail\n  let flakes = []\n  for (let idx = 1; idx < segs.length + 1; idx++) {\n    head = segs.slice(0, idx)\n    tail = segs.slice(idx)\n    let flake = {head: head, tail: tail}\n    if (tail.length) flakes.push(flake)\n  }\n  return flakes.reverse()\n}\n\nexport function segmenter_(str) {\n  let old = str\n  let pdchs = [[str]]\n  function rec(str, pdch) {\n    // log('PDCH', pdch)\n    let flakes = scrape(str)\n    flakes.forEach(flake => {\n      pdch.push(flake.head)\n      pdch.push(flake.tail)\n      if (pdch.join(tsek) == old) {\n        pdchs.push(_.clone(pdch))\n        pdch.pop()\n      }\n      if (pdch.length < 5) rec(flake.tail, pdch) // three parts for now !\n      // rec(flake.tail, pdch)\n      pdch.pop()\n    })\n  }\n  rec(str, [])\n  return pdchs\n}\n\nexport function scrape_(str) {\n  let segs = str.split(tsek)\n  let head, tail\n  let flakes = []\n  for (let idx = 1; idx < segs.length + 1; idx++) {\n    head = segs.slice(0, idx).join(tsek)\n    tail = segs.slice(idx).join(tsek)\n    let flake = {head: head, tail: tail}\n    if (tail) flakes.push(flake)\n  }\n  return flakes.reverse()\n}\n\nexport function totalKeys_(pdchs) {\n  let segs = _.uniq(_.flatten(pdchs))\n  let added = []\n  segs.forEach(seg=>{\n    tibsyls.forEach(syl=>{\n      let resyl = new RegExp(syl+'$')\n      let poss = seg.replace(resyl, '')\n      if (seg != poss) added.push(poss)\n    })\n  })\n  let keys = segs.concat(added)\n  return _.uniq(keys)\n}\n","//\nimport _ from 'lodash'\nimport { q, qs, empty, create, remove, span, p, div, getCoords } from './utils'\nimport { parsePDCHs, scrape, segmenter, totalKeys } from \"./segmenter\";\nimport { getPossible } from \"./pouch\";\nimport { tibsyms, tibsyls } from \"./tibetan_data\";\nimport { parsePhrase, noResult } from \"./parsedata\";\n\nlet tsek = tibsyms.tsek\nconst log = console.log\n\nexport function mainResults(el) {\n  let progress = q('#progress')\n  progress.classList.add('is-shown')\n  let retsek = new RegExp(tsek+'$')\n  let str = el.textContent.trim().replace(retsek, '')\n  let segs = str.split(tsek)\n\n  let parent = el.parentNode\n  // log('PARENT', parent.classList)\n  let depth = false\n  if (parent.classList.contains('tibphrase')) depth = true\n  let pdchs = segmenter(str, depth)\n  log('MAIN pdchs:', segs.length, '=>', pdchs.length)\n  log('MAIN pdchs:', segs.length, '=>', pdchs[10])\n\n  let keys = totalKeys(pdchs)\n  // log('MAIN keys:', keys.length)\n  // return\n\n  getPossible(keys)\n    .then(docs=> {\n      docs = _.flatten(docs)\n      log('DOCS', docs)\n      // return\n      let res = makeChains(pdchs, docs)\n      log('FULL, CHAINS', res.full, res.chains.length, res.chains)\n      if (!res.chains.length) noResult(el)\n      parsePhrase(el, res.chains)\n      return\n\n      // let fulls = fullChains(chains)\n      // log('chains: ', chains.length, 'fulls: ', fulls.length)\n      // if (fulls.length) chains = fulls\n      // log('CHs', chains.length)\n\n      // let bests = selectLongest(chains)\n      // log('bests =>', bests.length, bests)\n      // if (!bests.length) noResult(el)\n      // else {\n      //   // let best = bests[0]\n      //   parsePhrase(el, bests)\n      // }\n      // // showResults(best, docs)\n    })\n}\n\n// а здесь ведь тоже можно, если сегменты длинные, выбирать сначала только длинные dicts?\nfunction makeChains(pdchs, docs) {\n  let chains = []\n  let fulls = []\n  pdchs.forEach(segs=>{\n    let chain = []\n    let any = false\n    let full = true\n    segs.forEach(seg=>{\n      let segdocs = _.filter(docs, doc => { return startWith(seg, doc.dict) })\n      if (segdocs.length) any = true\n      if (!segdocs.length) full = false\n      let doc = {seg: seg, docs: segdocs}\n      chain.push(doc)\n    })\n    if (any) chains.push(chain)\n    if (full) fulls.push(chain)\n  })\n  let bests, full\n  if (fulls.length) bests = selectBests(fulls), full = true\n  else bests = selectBests(chains)\n  return {chains: bests, full: full}\n}\n\nfunction commonParts(chains) {\n  let first = chains[0]\n  let clean = []\n  let ambis\n  let common = false\n  for (let idx = 0; idx < first.length; idx++) {\n    let segs = chains.map(segs=> { return segs[idx].seg })\n    if (_.uniq(segs).length == 1) {\n      clean.push(first[idx])\n      common = true\n    } else {\n      if (!ambis) {\n        ambis = {seg: '', docs: []}\n        clean.push(ambis)\n      }\n      ambis.seg += first[idx].seg\n      if (idx < first.length-1) ambis.seg += tsek\n    }\n  }\n  return (common) ? clean : common\n  // log('CLEAN', clean)\n}\n\nfunction selectBests(chains) {\n  let max = _.max(chains.map(chain => {  return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length } ) )\n  // log('MAX', max)\n  let longests = _.filter(chains, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length >= max - 1 })\n  // longests = _.sortBy(longests, chain => { return _.sum(chain.map(segment => { return segment.docs.length ? segment.seg.length : 0 }))/chain.length }).reverse()\n  // log('LNGST', longests)\n\n  let min = _.min(longests.map(chain => {  return chain.length } ) )\n  // log('MIN', min)\n  let shortests  = _.filter(longests, chain => { return chain.length == min })\n  return shortests\n}\n\nfunction startWith(str, head) {\n  if (str == head) return true\n  let reh = new RegExp('^' + head)\n  let tail = str.replace(reh, '')\n  return (str != tail && tibsyls.includes(tail)) ?  true : false\n}\n\nfunction fullChains(chains) {\n  let fulls = []\n  chains.forEach(segs => {\n    let full = true\n    // let dsegs = segs.slice(0, -1)\n    segs.forEach(seg => {\n      if (!seg.docs.length) full = false\n    })\n    if (full) fulls.push(segs)\n  })\n  return fulls\n}\n","//\nimport _ from 'lodash'\n\nconst log = console.log\n\nexport function parseStarDict(state) {\n  log('PARSE STAR DICT')\n}\n\nexport function parseCSV(state) {\n  log('PARSE STAR CSV')\n}\n","// import \"./stylesheets/main.css\";\n\nimport _ from \"lodash\";\n// import Split from 'split.js'\nimport { remote } from \"electron\";\nimport { shell } from 'electron'\nimport { ipcRenderer } from \"electron\";\n\nimport { q, qs, empty, create, remove, span, p, div, getCoords } from './lib/utils'\nimport { navigate } from './lib/nav';\nimport sband from \"./lib/sband\";\nimport { showCholok, showResults } from \"./lib/parsedata\";\nimport { mainResults } from \"./lib/main\";\nimport { parseStarDict, parseCSV } from \"./lib/dict\";\nimport { checkCfg, setDBs, cleanupDB } from \"./lib/pouch\";\n\nconst settings = require('electron').remote.require('electron-settings')\n// const Mousetrap = require('mousetrap')\n\nconst JSON = require('json5')\nconst axios = require('axios')\n// let fse = require('fs-extra')\nconst slash = require('slash')\nconst log = console.log\n\nconst path = require('path')\n\nconst clipboard = require('electron-clipboard-extended')\nconst {dialog, getCurrentWindow} = require('electron').remote\n\nconst isDev = require('electron-is-dev')\n// const isDev = false\n// const isDev = true\n// const app = remote.app;\n// const apath = app.getAppPath()\n// const upath = app.getPath(\"userData\")\n\n\nlet over = q(\"#new-version\")\n\nlet container = q('#container')\nlet imports = qs('link[rel=\"import\"]')\nimports.forEach(link=> {\n  let content = link.import\n  let section = content.querySelector('.section')\n  container.appendChild(section.cloneNode(true))\n})\n\nipcRenderer.on('section', function (event, section) {\n  navigate({section: section})\n})\n\nipcRenderer.on('action', function (event, action) {\n  if (action == 'stardict') dialog.showOpenDialog({properties: ['openFile'], filters: [{name: 'JSON', extensions: ['stardict'] }]}, parseStarDict)\n  else if (action == 'csv') dialog.showOpenDialog({properties: ['openFile'], filters: [{name: 'JSON', extensions: ['stardict'] }]}, parseCSV)\n  else if (action == 'cleanupdb') cleanupDB()\n})\n\n// let home = q('#home')\n// home.classList.add('is-shown')\nlet state = settings.get('state')\n// log('STATE1', state)\nif (!state) state = {section: 'home'}\nnavigate(state)\n\ndocument.addEventListener('click', (ev) => {\n  let data = ev.target.dataset\n  if (!data) return\n  if (data.external) {\n    let href = ev.target.textContent\n    shell.openExternal(href)\n  } else if (data.section) {\n    navigate({section: data.section})\n  } else {\n  }\n})\n\ndocument.addEventListener(\"mouseover\", function(ev) {\n  if (!ev.target.textContent) return\n  if (ev.target.classList.contains('tibphrase')) {\n    if (ev.shiftKey == true) {\n      showCholok(ev.target)\n    } else {\n      // log('FRASE', ev.target.textContent)\n      mainResults(ev.target)\n    }\n  } else if (ev.target.classList.contains('tibwf')) {\n    showResults(ev.target)\n  }\n}, false)\n\ndocument.addEventListener(\"mouseleave\", function(ev) {\n  if (!ev.target.classList) return\n  if (ev.target.classList.contains('tibphrase')) {\n    let otrans = q('#transcript')\n    otrans.classList.add('is-hidden')\n  } else if (ev.target.classList.contains('ambi')) {\n    log('MOUSE LEAVE')\n    let oambi = q('#ambi')\n    oambi.classList.add('is-hidden')\n  }\n}, false)\n\ndocument.addEventListener(\"keyup\", function(ev) {\n  let otrans = q('#transcript')\n  otrans.classList.add('is-hidden')\n  let oambi = q('#ambi')\n  oambi.classList.add('is-hidden')\n}, false)\n\n\nclipboard\n  .on('text-changed', () => {\n    let txt = clipboard.readText()\n    let pars = sband('tib', txt)\n    if (!pars || !pars.length) return\n    // orthoPars(pars)\n    // hstates.push(pars)\n    // hstate = hstates.length-1\n    let state = {section: 'main', pars: pars}\n    navigate(state)\n    // showText(pars)\n  })\n  .startWatching()\n\ncheckCfg()\n"],"sourceRoot":""}